{
  "contractName": "ERC1155MetadataMock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_uri",
          "type": "string"
        },
        {
          "indexed": true,
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newBaseMetadataURI",
          "type": "string"
        }
      ],
      "name": "setBaseMetadataURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenIDs",
          "type": "uint256[]"
        }
      ],
      "name": "logURIsMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenIDs",
          "type": "uint256[]"
        },
        {
          "name": "_URIs",
          "type": "string[]"
        }
      ],
      "name": "logURIsMock2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenIDs\",\"type\":\"uint256[]\"}],\"name\":\"logURIsMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newBaseMetadataURI\",\"type\":\"string\"}],\"name\":\"setBaseMetadataURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenIDs\",\"type\":\"uint256[]\"},{\"name\":\"_URIs\",\"type\":\"string[]\"}],\"name\":\"logURIsMock2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_uri\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"logURIsMock(uint256[])\":{\"params\":{\"_tokenIDs\":\"Array of IDs of tokens to log default URI\"}},\"logURIsMock2(uint256[],string[])\":{\"params\":{\"_URIs\":\"The URIs of the specified _tokenIDs\",\"_tokenIDs\":\"IDs of the token corresponding to the _uris logged\"}},\"setBaseMetadataURI(string)\":{\"params\":{\"_newBaseMetadataURI\":\"New base URL of token's URI\"}},\"uri(uint256)\":{\"details\":\"URIs are defined in RFC 3986.     URIs are assumed to be deterministically generated based on token ID     Token IDs are assumed to be represented in their hex format in URIs \",\"return\":\"URI string\"}}},\"userdoc\":{\"methods\":{\"logURIsMock(uint256[])\":{\"notice\":\"Will emit default URI log event for corresponding token _id\"},\"logURIsMock2(uint256[],string[])\":{\"notice\":\"Will emit a specific URI log event for corresponding token\"},\"setBaseMetadataURI(string)\":{\"notice\":\"Will update the base URL of token's URI\"},\"uri(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given token.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetadataMock.sol\":\"ERC1155MetadataMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x439cac989c2f04c3b296643145b4a3f8a43a54d0fc80cfeef9b076d709b8c0f4\",\"urls\":[\"bzzr://e9990fdda7fc53b63bf696a90c168f862c8a6b5f2a90e7738f33b84c8b9e74d2\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetadataMock.sol\":{\"keccak256\":\"0xea96c2d3cd8f202c0cb5be60aee0df58e78dd7928925d5aa4aec0311817d5151\",\"urls\":[\"bzzr://94826cf1ce89096a70588fca0e2027efef4d5e1ed5d37bf08d11ff0a24b59236\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Metadata.sol\":{\"keccak256\":\"0xa74b6c4912725c41d0c22185e561e586afce0958a2cab082474cce7459c98f6b\",\"urls\":[\"bzzr://060c392655c57c80f546a625358a220adff3ccf6d471310c4a3696e73f2045ac\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610d90806100206000396000f3fe608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e89341c146100aa5780631ea430d4146100e75780637e518ec814610110578063e01a6caa14610139575b34801561006e57600080fd5b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a190610bce565b60405180910390fd5b3480156100b657600080fd5b506100d160048036036100cc9190810190610a3b565b610162565b6040516100de9190610bac565b60405180910390f35b3480156100f357600080fd5b5061010e6004803603610109919081019061094d565b610264565b005b34801561011c57600080fd5b50610137600480360361013291908101906109fa565b610270565b005b34801561014557600080fd5b50610160600480360361015b919081019061098e565b61027c565b005b6060600061016f8361028a565b60405160200180838054600181600116156101000203166002900480156101cd5780601f106101ab5761010080835404028352918201916101cd565b820191906000526020600020905b8154815290600101906020018083116101b9575b505082805190602001908083835b60208310151561020057805182526020820191506020810190506020830392506101db565b6001836020036101000a038019825116818451168082178552505050505050905001807f2e6a736f6e000000000000000000000000000000000000000000000000000000815250600501925050506040516020818303038152906040529050919050565b61026d816103e9565b50565b61027981610606565b50565b6102868282610620565b5050565b606060008214156102d2576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506103e4565b6000829050600083905060005b600083141515610305578080600101915050600a838115156102fd57fe5b0492506102df565b6060816040519080825280601f01601f19166020018201604052801561033a5781602001600182028038833980820191505090505b50905060006001830390505b6000841415156103db57600a8481151561035c57fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561039757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848115156103d357fe5b049350610346565b81955050505050505b919050565b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b50505050509050606060008090505b835181101561060057826104ba85838151811015156104ab57fe5b9060200190602002015161028a565b6040516020018083805190602001908083835b6020831015156104f257805182526020820191506020810190506020830392506104cd565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b6020831015156105455780518252602082019150602081019050602083039250610520565b6001836020036101000a038019825116818451168082178552505050505050905001807f2e6a736f6e00000000000000000000000000000000000000000000000000000081525060050192505050604051602081830303815290604052915083818151811015156105b257fe5b906020019060200201517f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b836040516105eb9190610bac565b60405180910390a28080600101915050610490565b50505050565b806000908051906020019061061c9291906106ed565b5050565b80518251141515610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90610bee565b60405180910390fd5b60008090505b82518110156106e857828181518110151561068357fe5b906020019060200201517f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b83838151811015156106bc57fe5b906020019060200201516040516106d39190610b8a565b60405180910390a2808060010191505061066c565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061072e57805160ff191683800117855561075c565b8280016001018555821561075c579182015b8281111561075b578251825591602001919060010190610740565b5b509050610769919061076d565b5090565b61078f91905b8082111561078b576000816000905550600101610773565b5090565b90565b600082601f83011215156107a557600080fd5b81356107b86107b382610c3b565b610c0e565b9150818183526020840193506020810190508360005b838110156107fe57813586016107e4888261088d565b8452602084019350602083019250506001810190506107ce565b5050505092915050565b600082601f830112151561081b57600080fd5b813561082e61082982610c63565b610c0e565b9150818183526020840193506020810190508385602084028201111561085357600080fd5b60005b8381101561088357816108698882610939565b845260208401935060208301925050600181019050610856565b5050505092915050565b600082601f83011215156108a057600080fd5b81356108b36108ae82610c8b565b610c0e565b915080825260208301602083018583830111156108cf57600080fd5b6108da838284610d03565b50505092915050565b600082601f83011215156108f657600080fd5b813561090961090482610cb7565b610c0e565b9150808252602083016020830185838301111561092557600080fd5b610930838284610d03565b50505092915050565b60006109458235610cf9565b905092915050565b60006020828403121561095f57600080fd5b600082013567ffffffffffffffff81111561097957600080fd5b61098584828501610808565b91505092915050565b600080604083850312156109a157600080fd5b600083013567ffffffffffffffff8111156109bb57600080fd5b6109c785828601610808565b925050602083013567ffffffffffffffff8111156109e457600080fd5b6109f085828601610792565b9150509250929050565b600060208284031215610a0c57600080fd5b600082013567ffffffffffffffff811115610a2657600080fd5b610a32848285016108e3565b91505092915050565b600060208284031215610a4d57600080fd5b6000610a5b84828501610939565b91505092915050565b6000610a6f82610cee565b808452610a83816020860160208601610d12565b610a8c81610d45565b602085010191505092915050565b6000610aa582610ce3565b808452610ab9816020860160208601610d12565b610ac281610d45565b602085010191505092915050565b6000602382527f455243313135354d657461646174614d6f636b3a20494e56414c49445f4d455460208301527f484f4400000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602f82527f455243313135354d65746164617461235f6c6f67555249733a20494e56414c4960208301527f445f4152524159535f4c454e47544800000000000000000000000000000000006040830152606082019050919050565b60006020820190508181036000830152610ba48184610a9a565b905092915050565b60006020820190508181036000830152610bc68184610a64565b905092915050565b60006020820190508181036000830152610be781610ad0565b9050919050565b60006020820190508181036000830152610c0781610b2d565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610c3157600080fd5b8060405250919050565b600067ffffffffffffffff821115610c5257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115610c7a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115610ca257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610cce57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d30578082015181840152602081019050610d15565b83811115610d3f576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058203d5ce50339720de97f5b8086719f11526224cba48862408efff7aab48137e2946c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e89341c146100aa5780631ea430d4146100e75780637e518ec814610110578063e01a6caa14610139575b34801561006e57600080fd5b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a190610bce565b60405180910390fd5b3480156100b657600080fd5b506100d160048036036100cc9190810190610a3b565b610162565b6040516100de9190610bac565b60405180910390f35b3480156100f357600080fd5b5061010e6004803603610109919081019061094d565b610264565b005b34801561011c57600080fd5b50610137600480360361013291908101906109fa565b610270565b005b34801561014557600080fd5b50610160600480360361015b919081019061098e565b61027c565b005b6060600061016f8361028a565b60405160200180838054600181600116156101000203166002900480156101cd5780601f106101ab5761010080835404028352918201916101cd565b820191906000526020600020905b8154815290600101906020018083116101b9575b505082805190602001908083835b60208310151561020057805182526020820191506020810190506020830392506101db565b6001836020036101000a038019825116818451168082178552505050505050905001807f2e6a736f6e000000000000000000000000000000000000000000000000000000815250600501925050506040516020818303038152906040529050919050565b61026d816103e9565b50565b61027981610606565b50565b6102868282610620565b5050565b606060008214156102d2576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506103e4565b6000829050600083905060005b600083141515610305578080600101915050600a838115156102fd57fe5b0492506102df565b6060816040519080825280601f01601f19166020018201604052801561033a5781602001600182028038833980820191505090505b50905060006001830390505b6000841415156103db57600a8481151561035c57fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561039757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848115156103d357fe5b049350610346565b81955050505050505b919050565b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b50505050509050606060008090505b835181101561060057826104ba85838151811015156104ab57fe5b9060200190602002015161028a565b6040516020018083805190602001908083835b6020831015156104f257805182526020820191506020810190506020830392506104cd565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b6020831015156105455780518252602082019150602081019050602083039250610520565b6001836020036101000a038019825116818451168082178552505050505050905001807f2e6a736f6e00000000000000000000000000000000000000000000000000000081525060050192505050604051602081830303815290604052915083818151811015156105b257fe5b906020019060200201517f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b836040516105eb9190610bac565b60405180910390a28080600101915050610490565b50505050565b806000908051906020019061061c9291906106ed565b5050565b80518251141515610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90610bee565b60405180910390fd5b60008090505b82518110156106e857828181518110151561068357fe5b906020019060200201517f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b83838151811015156106bc57fe5b906020019060200201516040516106d39190610b8a565b60405180910390a2808060010191505061066c565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061072e57805160ff191683800117855561075c565b8280016001018555821561075c579182015b8281111561075b578251825591602001919060010190610740565b5b509050610769919061076d565b5090565b61078f91905b8082111561078b576000816000905550600101610773565b5090565b90565b600082601f83011215156107a557600080fd5b81356107b86107b382610c3b565b610c0e565b9150818183526020840193506020810190508360005b838110156107fe57813586016107e4888261088d565b8452602084019350602083019250506001810190506107ce565b5050505092915050565b600082601f830112151561081b57600080fd5b813561082e61082982610c63565b610c0e565b9150818183526020840193506020810190508385602084028201111561085357600080fd5b60005b8381101561088357816108698882610939565b845260208401935060208301925050600181019050610856565b5050505092915050565b600082601f83011215156108a057600080fd5b81356108b36108ae82610c8b565b610c0e565b915080825260208301602083018583830111156108cf57600080fd5b6108da838284610d03565b50505092915050565b600082601f83011215156108f657600080fd5b813561090961090482610cb7565b610c0e565b9150808252602083016020830185838301111561092557600080fd5b610930838284610d03565b50505092915050565b60006109458235610cf9565b905092915050565b60006020828403121561095f57600080fd5b600082013567ffffffffffffffff81111561097957600080fd5b61098584828501610808565b91505092915050565b600080604083850312156109a157600080fd5b600083013567ffffffffffffffff8111156109bb57600080fd5b6109c785828601610808565b925050602083013567ffffffffffffffff8111156109e457600080fd5b6109f085828601610792565b9150509250929050565b600060208284031215610a0c57600080fd5b600082013567ffffffffffffffff811115610a2657600080fd5b610a32848285016108e3565b91505092915050565b600060208284031215610a4d57600080fd5b6000610a5b84828501610939565b91505092915050565b6000610a6f82610cee565b808452610a83816020860160208601610d12565b610a8c81610d45565b602085010191505092915050565b6000610aa582610ce3565b808452610ab9816020860160208601610d12565b610ac281610d45565b602085010191505092915050565b6000602382527f455243313135354d657461646174614d6f636b3a20494e56414c49445f4d455460208301527f484f4400000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602f82527f455243313135354d65746164617461235f6c6f67555249733a20494e56414c4960208301527f445f4152524159535f4c454e47544800000000000000000000000000000000006040830152606082019050919050565b60006020820190508181036000830152610ba48184610a9a565b905092915050565b60006020820190508181036000830152610bc68184610a64565b905092915050565b60006020820190508181036000830152610be781610ad0565b9050919050565b60006020820190508181036000830152610c0781610b2d565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610c3157600080fd5b8060405250919050565b600067ffffffffffffffff821115610c5257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115610c7a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115610ca257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610cce57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d30578082015181840152602081019050610d15565b83811115610d3f576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058203d5ce50339720de97f5b8086719f11526224cba48862408efff7aab48137e2946c6578706572696d656e74616cf50037",
  "sourceMap": "109:1342:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;109:1342:7;;;;;;;",
  "deployedSourceMap": "109:1342:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;109:1342:7;1398:45;;;;;;;;;;;;;;;;;;;895:146:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:146:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;812:92:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;812:92:7;;;;;;;;;;;;;;;;;;;410:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;410:127:7;;;;;;;;;;;;;;;;;;;1122:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1122:123:7;;;;;;;;;;;;;;;;;;;895:146:14;942:13;994:15;1011:14;1021:3;1011:9;:14::i;:::-;977:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;977:58:14;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;977:58:14;;;963:73;;895:146;;;:::o;812:92:7:-;874:25;889:9;874:14;:25::i;:::-;812:92;:::o;410:127::-;486:46;512:19;486:25;:46::i;:::-;410:127;:::o;1122:123::-;1208:32;1223:9;1234:5;1208:14;:32::i;:::-;1122:123;;:::o;2617:517:14:-;2671:27;2716:1;2710:2;:7;2706:38;;;2727:10;;;;;;;;;;;;;;;;;;;;;;2706:38;2750:9;2762:2;2750:14;;2770:10;2783:2;2770:15;;2791:11;2840:50;2852:1;2847;:6;;2840:50;;;2863:5;;;;;;;2881:2;2876:7;;;;;;;;;;;2840:50;;;2896:17;2926:3;2916:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;2916:14:14;;;;2896:34;;2936:9;2954:1;2948:3;:7;2936:19;;2995:84;3008:1;3002:2;:7;;2995:84;;;3052:2;3047;:7;;;;;;;;3042:2;:12;3031:25;;3019:4;3024:3;;;;;;;3019:9;;;;;;;;;;;;;;:37;;;;;;;;;;;3070:2;3064:8;;;;;;;;;;;2995:84;;;3124:4;3110:19;;;;;;;2617:517;;;;:::o;1316:319::-;1377:21;1401:15;1377:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:22;1456:9;1468:1;1456:13;;1451:180;1475:9;:16;1471:1;:20;1451:180;;;1541:7;1550:23;1560:9;1570:1;1560:12;;;;;;;;;;;;;;;;;;1550:9;:23::i;:::-;1524:59;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1524:59:14;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1524:59:14;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1524:59:14;;;1506:78;;1611:9;1621:1;1611:12;;;;;;;;;;;;;;;;;;1597:27;1601:8;1597:27;;;;;;;;;;;;;;;1493:3;;;;;;;1451:180;;;;1316:319;;;:::o;2264:121::-;2361:19;2343:15;:37;;;;;;;;;;;;:::i;:::-;;2264:121;:::o;1853:280::-;1965:5;:12;1945:9;:16;:32;1937:92;;;;;;;;;;;;;;;;;;;;;;;;2040:9;2052:1;2040:13;;2035:94;2059:9;:16;2055:1;:20;2035:94;;;2109:9;2119:1;2109:12;;;;;;;;;;;;;;;;;;2095:27;2099:5;2105:1;2099:8;;;;;;;;;;;;;;;;;;2095:27;;;;;;;;;;;;;;;2077:3;;;;;;;2035:94;;;;1853:280;;:::o;109:1342:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;22:696:-1:-;;145:3;138:4;130:6;126:17;122:27;115:35;112:2;;;163:1;160;153:12;112:2;200:6;187:20;222:86;237:70;300:6;237:70;;;222:86;;;213:95;;325:5;350:6;343:5;336:21;380:4;372:6;368:17;358:27;;402:4;397:3;393:14;386:21;;455:6;488:1;473:239;498:6;495:1;492:13;473:239;;;581:3;568:17;560:6;556:30;605:43;644:3;632:10;605:43;;;600:3;593:56;672:4;667:3;663:14;656:21;;700:4;695:3;691:14;684:21;;530:182;520:1;517;513:9;508:14;;473:239;;;477:14;105:613;;;;;;;;744:707;;861:3;854:4;846:6;842:17;838:27;831:35;828:2;;;879:1;876;869:12;828:2;916:6;903:20;938:80;953:64;1010:6;953:64;;;938:80;;;929:89;;1035:5;1060:6;1053:5;1046:21;1090:4;1082:6;1078:17;1068:27;;1112:4;1107:3;1103:14;1096:21;;1165:6;1212:3;1204:4;1196:6;1192:17;1187:3;1183:27;1180:36;1177:2;;;1229:1;1226;1219:12;1177:2;1254:1;1239:206;1264:6;1261:1;1258:13;1239:206;;;1322:3;1344:37;1377:3;1365:10;1344:37;;;1339:3;1332:50;1405:4;1400:3;1396:14;1389:21;;1433:4;1428:3;1424:14;1417:21;;1296:149;1286:1;1283;1279:9;1274:14;;1239:206;;;1243:14;821:630;;;;;;;;1460:434;;1558:3;1551:4;1543:6;1539:17;1535:27;1528:35;1525:2;;;1576:1;1573;1566:12;1525:2;1613:6;1600:20;1635:61;1650:45;1688:6;1650:45;;;1635:61;;;1626:70;;1716:6;1709:5;1702:21;1752:4;1744:6;1740:17;1785:4;1778:5;1774:16;1820:3;1811:6;1806:3;1802:16;1799:25;1796:2;;;1837:1;1834;1827:12;1796:2;1847:41;1881:6;1876:3;1871;1847:41;;;1518:376;;;;;;;;1903:442;;2005:3;1998:4;1990:6;1986:17;1982:27;1975:35;1972:2;;;2023:1;2020;2013:12;1972:2;2060:6;2047:20;2082:65;2097:49;2139:6;2097:49;;;2082:65;;;2073:74;;2167:6;2160:5;2153:21;2203:4;2195:6;2191:17;2236:4;2229:5;2225:16;2271:3;2262:6;2257:3;2253:16;2250:25;2247:2;;;2288:1;2285;2278:12;2247:2;2298:41;2332:6;2327:3;2322;2298:41;;;1965:380;;;;;;;;2353:118;;2420:46;2458:6;2445:20;2420:46;;;2411:55;;2405:66;;;;;2478:377;;2607:2;2595:9;2586:7;2582:23;2578:32;2575:2;;;2623:1;2620;2613:12;2575:2;2686:1;2675:9;2671:17;2658:31;2709:18;2701:6;2698:30;2695:2;;;2741:1;2738;2731:12;2695:2;2761:78;2831:7;2822:6;2811:9;2807:22;2761:78;;;2751:88;;2637:208;2569:286;;;;;2862:650;;;3039:2;3027:9;3018:7;3014:23;3010:32;3007:2;;;3055:1;3052;3045:12;3007:2;3118:1;3107:9;3103:17;3090:31;3141:18;3133:6;3130:30;3127:2;;;3173:1;3170;3163:12;3127:2;3193:78;3263:7;3254:6;3243:9;3239:22;3193:78;;;3183:88;;3069:208;3336:2;3325:9;3321:18;3308:32;3360:18;3352:6;3349:30;3346:2;;;3392:1;3389;3382:12;3346:2;3412:84;3488:7;3479:6;3468:9;3464:22;3412:84;;;3402:94;;3287:215;3001:511;;;;;;3519:347;;3633:2;3621:9;3612:7;3608:23;3604:32;3601:2;;;3649:1;3646;3639:12;3601:2;3712:1;3701:9;3697:17;3684:31;3735:18;3727:6;3724:30;3721:2;;;3767:1;3764;3757:12;3721:2;3787:63;3842:7;3833:6;3822:9;3818:22;3787:63;;;3777:73;;3663:193;3595:271;;;;;3873:241;;3977:2;3965:9;3956:7;3952:23;3948:32;3945:2;;;3993:1;3990;3983:12;3945:2;4028:1;4045:53;4090:7;4081:6;4070:9;4066:22;4045:53;;;4035:63;;4007:97;3939:175;;;;;4121:300;;4223:39;4256:5;4223:39;;;4279:6;4274:3;4267:19;4291:63;4347:6;4340:4;4335:3;4331:14;4324:4;4317:5;4313:16;4291:63;;;4386:29;4408:6;4386:29;;;4379:4;4374:3;4370:14;4366:50;4359:57;;4203:218;;;;;;4428:292;;4526:35;4555:5;4526:35;;;4578:6;4573:3;4566:19;4590:63;4646:6;4639:4;4634:3;4630:14;4623:4;4616:5;4612:16;4590:63;;;4685:29;4707:6;4685:29;;;4678:4;4673:3;4669:14;4665:50;4658:57;;4506:214;;;;;;4728:397;;4883:2;4878:3;4871:15;4920:66;4915:2;4910:3;4906:12;4899:88;5021:66;5016:2;5011:3;5007:12;5000:88;5116:2;5111:3;5107:12;5100:19;;4864:261;;;;5134:397;;5289:2;5284:3;5277:15;5326:66;5321:2;5316:3;5312:12;5305:88;5427:66;5422:2;5417:3;5413:12;5406:88;5522:2;5517:3;5513:12;5506:19;;5270:261;;;;5539:273;;5663:2;5652:9;5648:18;5640:26;;5713:9;5707:4;5703:20;5699:1;5688:9;5684:17;5677:47;5738:64;5797:4;5788:6;5738:64;;;5730:72;;5634:178;;;;;5819:281;;5947:2;5936:9;5932:18;5924:26;;5997:9;5991:4;5987:20;5983:1;5972:9;5968:17;5961:47;6022:68;6085:4;6076:6;6022:68;;;6014:76;;5918:182;;;;;6107:387;;6288:2;6277:9;6273:18;6265:26;;6338:9;6332:4;6328:20;6324:1;6313:9;6309:17;6302:47;6363:121;6479:4;6363:121;;;6355:129;;6259:235;;;;6501:387;;6682:2;6671:9;6667:18;6659:26;;6732:9;6726:4;6722:20;6718:1;6707:9;6703:17;6696:47;6757:121;6873:4;6757:121;;;6749:129;;6653:235;;;;6895:256;;6957:2;6951:9;6941:19;;6995:4;6987:6;6983:17;7094:6;7082:10;7079:22;7058:18;7046:10;7043:34;7040:62;7037:2;;;7115:1;7112;7105:12;7037:2;7135:10;7131:2;7124:22;6935:216;;;;;7158:264;;7323:18;7315:6;7312:30;7309:2;;;7355:1;7352;7345:12;7309:2;7384:4;7376:6;7372:17;7364:25;;7412:4;7406;7402:15;7394:23;;7246:176;;;;7429:258;;7588:18;7580:6;7577:30;7574:2;;;7620:1;7617;7610:12;7574:2;7649:4;7641:6;7637:17;7629:25;;7677:4;7671;7667:15;7659:23;;7511:176;;;;7694:255;;7834:18;7826:6;7823:30;7820:2;;;7866:1;7863;7856:12;7820:2;7910:4;7906:9;7899:4;7891:6;7887:17;7883:33;7875:41;;7939:4;7933;7929:15;7921:23;;7757:192;;;;7956:259;;8100:18;8092:6;8089:30;8086:2;;;8132:1;8129;8122:12;8086:2;8176:4;8172:9;8165:4;8157:6;8153:17;8149:33;8141:41;;8205:4;8199;8195:15;8187:23;;8023:192;;;;8222:88;;8299:5;8293:12;8283:22;;8277:33;;;;8317:92;;8398:5;8392:12;8382:22;;8376:33;;;;8416:79;;8485:5;8474:16;;8468:27;;;;8503:145;8584:6;8579:3;8574;8561:30;8640:1;8631:6;8626:3;8622:16;8615:27;8554:94;;;;8657:268;8722:1;8729:101;8743:6;8740:1;8737:13;8729:101;;;8819:1;8814:3;8810:11;8804:18;8800:1;8795:3;8791:11;8784:39;8765:2;8762:1;8758:10;8753:15;;8729:101;;;8845:6;8842:1;8839:13;8836:2;;;8910:1;8901:6;8896:3;8892:16;8885:27;8836:2;8706:219;;;;;8933:97;;9021:2;9017:7;9012:2;9005:5;9001:14;8997:28;8987:38;;8981:49;;;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"../tokens/ERC1155/ERC1155Metadata.sol\";\n\n\ncontract ERC1155MetadataMock is ERC1155Metadata {\n\n  /***********************************|\n  |         Base URI Functions        |\n  |__________________________________*/\n\n  /** \n   * @notice Will update the base URL of token's URI\n   * @param _newBaseMetadataURI New base URL of token's URI\n   */ \n  function setBaseMetadataURI(string memory _newBaseMetadataURI) public {\n    super._setBaseMetadataURI(_newBaseMetadataURI);\n  }\n\n\n  /***********************************|\n  |         Log URI Functions         |\n  |__________________________________*/\n\n  /**\n   * @notice Will emit default URI log event for corresponding token _id\n   * @param _tokenIDs Array of IDs of tokens to log default URI\n   */\n  function logURIsMock(uint256[] memory _tokenIDs) public {\n    super._logURIs(_tokenIDs);\n  }\n\n  /**\n   * @notice Will emit a specific URI log event for corresponding token\n   * @param _tokenIDs IDs of the token corresponding to the _uris logged\n   * @param _URIs    The URIs of the specified _tokenIDs\n   */\n  function logURIsMock2(uint256[] memory _tokenIDs, string[] memory _URIs) public {\n    super._logURIs(_tokenIDs, _URIs);\n  }\n\n\n  /***********************************|\n  |       Unsupported Functions       |\n  |__________________________________*/\n\n  function () external {\n    revert('ERC1155MetadataMock: INVALID_METHOD');\n  } \n}",
  "sourcePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetadataMock.sol",
  "ast": {
    "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetadataMock.sol",
    "exportedSymbols": {
      "ERC1155MetadataMock": [
        498
      ]
    },
    "id": 499,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 443,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "id": 444,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:7"
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Metadata.sol",
        "file": "../tokens/ERC1155/ERC1155Metadata.sol",
        "id": 445,
        "nodeType": "ImportDirective",
        "scope": 499,
        "sourceUnit": 2671,
        "src": "59:47:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 446,
              "name": "ERC1155Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2670,
              "src": "141:15:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Metadata_$2670",
                "typeString": "contract ERC1155Metadata"
              }
            },
            "id": 447,
            "nodeType": "InheritanceSpecifier",
            "src": "141:15:7"
          }
        ],
        "contractDependencies": [
          2670
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 498,
        "linearizedBaseContracts": [
          498,
          2670
        ],
        "name": "ERC1155MetadataMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 458,
              "nodeType": "Block",
              "src": "480:57:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "_newBaseMetadataURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "512:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 452,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5774,
                        "src": "486:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetadataMock_$498",
                          "typeString": "contract super ERC1155MetadataMock"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setBaseMetadataURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2590,
                      "src": "486:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "486:46:7"
                }
              ]
            },
            "documentation": "@notice Will update the base URL of token's URI\n@param _newBaseMetadataURI New base URL of token's URI",
            "id": 459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBaseMetadataURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "name": "_newBaseMetadataURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "438:33:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "437:35:7"
            },
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:0:7"
            },
            "scope": 498,
            "src": "410:127:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "868:36:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 468,
                        "name": "_tokenIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "889:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 465,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5774,
                        "src": "874:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetadataMock_$498",
                          "typeString": "contract super ERC1155MetadataMock"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_logURIs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2539,
                      "src": "874:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[] memory)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "874:25:7"
                }
              ]
            },
            "documentation": "@notice Will emit default URI log event for corresponding token _id\n@param _tokenIDs Array of IDs of tokens to log default URI",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logURIsMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "name": "_tokenIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "833:26:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 460,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "833:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 461,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "833:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "832:28:7"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:7"
            },
            "scope": 498,
            "src": "812:92:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 488,
              "nodeType": "Block",
              "src": "1202:43:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "_tokenIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "1223:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "_URIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "1234:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5774,
                        "src": "1208:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetadataMock_$498",
                          "typeString": "contract super ERC1155MetadataMock"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_logURIs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2580,
                      "src": "1208:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[] memory,string memory[] memory)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:32:7"
                }
              ]
            },
            "documentation": "@notice Will emit a specific URI log event for corresponding token\n@param _tokenIDs IDs of the token corresponding to the _uris logged\n@param _URIs    The URIs of the specified _tokenIDs",
            "id": 489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logURIsMock2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "name": "_tokenIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1144:26:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 473,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1144:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 474,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1144:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 478,
                  "name": "_URIs",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1172:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 476,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1172:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 477,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1172:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1143:51:7"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:7"
            },
            "scope": 498,
            "src": "1122:123:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "1392:56:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313135354d657461646174614d6f636b3a20494e56414c49445f4d4554484f44",
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1405:37:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6eae07edeb9b35d3be1e583f801a201410fcfe23eb21aaa403808ef33bdd25fb",
                          "typeString": "literal_string \"ERC1155MetadataMock: INVALID_METHOD\""
                        },
                        "value": "ERC1155MetadataMock: INVALID_METHOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6eae07edeb9b35d3be1e583f801a201410fcfe23eb21aaa403808ef33bdd25fb",
                          "typeString": "literal_string \"ERC1155MetadataMock: INVALID_METHOD\""
                        }
                      ],
                      "id": 492,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1398:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:45:7"
                }
              ]
            },
            "documentation": "*********************************|\n|       Unsupported Functions       |\n|__________________________________",
            "id": 497,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:2:7"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1392:0:7"
            },
            "scope": 498,
            "src": "1371:77:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 499,
        "src": "109:1342:7"
      }
    ],
    "src": "0:1451:7"
  },
  "legacyAST": {
    "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetadataMock.sol",
    "exportedSymbols": {
      "ERC1155MetadataMock": [
        498
      ]
    },
    "id": 499,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 443,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "id": 444,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:7"
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Metadata.sol",
        "file": "../tokens/ERC1155/ERC1155Metadata.sol",
        "id": 445,
        "nodeType": "ImportDirective",
        "scope": 499,
        "sourceUnit": 2671,
        "src": "59:47:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 446,
              "name": "ERC1155Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2670,
              "src": "141:15:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Metadata_$2670",
                "typeString": "contract ERC1155Metadata"
              }
            },
            "id": 447,
            "nodeType": "InheritanceSpecifier",
            "src": "141:15:7"
          }
        ],
        "contractDependencies": [
          2670
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 498,
        "linearizedBaseContracts": [
          498,
          2670
        ],
        "name": "ERC1155MetadataMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 458,
              "nodeType": "Block",
              "src": "480:57:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "_newBaseMetadataURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "512:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 452,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5774,
                        "src": "486:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetadataMock_$498",
                          "typeString": "contract super ERC1155MetadataMock"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setBaseMetadataURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2590,
                      "src": "486:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "486:46:7"
                }
              ]
            },
            "documentation": "@notice Will update the base URL of token's URI\n@param _newBaseMetadataURI New base URL of token's URI",
            "id": 459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBaseMetadataURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "name": "_newBaseMetadataURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "438:33:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "437:35:7"
            },
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:0:7"
            },
            "scope": 498,
            "src": "410:127:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "868:36:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 468,
                        "name": "_tokenIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "889:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 465,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5774,
                        "src": "874:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetadataMock_$498",
                          "typeString": "contract super ERC1155MetadataMock"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_logURIs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2539,
                      "src": "874:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[] memory)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "874:25:7"
                }
              ]
            },
            "documentation": "@notice Will emit default URI log event for corresponding token _id\n@param _tokenIDs Array of IDs of tokens to log default URI",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logURIsMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "name": "_tokenIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "833:26:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 460,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "833:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 461,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "833:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "832:28:7"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:7"
            },
            "scope": 498,
            "src": "812:92:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 488,
              "nodeType": "Block",
              "src": "1202:43:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "_tokenIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "1223:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "_URIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "1234:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5774,
                        "src": "1208:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetadataMock_$498",
                          "typeString": "contract super ERC1155MetadataMock"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_logURIs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2580,
                      "src": "1208:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[] memory,string memory[] memory)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:32:7"
                }
              ]
            },
            "documentation": "@notice Will emit a specific URI log event for corresponding token\n@param _tokenIDs IDs of the token corresponding to the _uris logged\n@param _URIs    The URIs of the specified _tokenIDs",
            "id": 489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logURIsMock2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "name": "_tokenIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1144:26:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 473,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1144:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 474,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1144:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 478,
                  "name": "_URIs",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "1172:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 476,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1172:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 477,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1172:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1143:51:7"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:7"
            },
            "scope": 498,
            "src": "1122:123:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "1392:56:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313135354d657461646174614d6f636b3a20494e56414c49445f4d4554484f44",
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1405:37:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6eae07edeb9b35d3be1e583f801a201410fcfe23eb21aaa403808ef33bdd25fb",
                          "typeString": "literal_string \"ERC1155MetadataMock: INVALID_METHOD\""
                        },
                        "value": "ERC1155MetadataMock: INVALID_METHOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6eae07edeb9b35d3be1e583f801a201410fcfe23eb21aaa403808ef33bdd25fb",
                          "typeString": "literal_string \"ERC1155MetadataMock: INVALID_METHOD\""
                        }
                      ],
                      "id": 492,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1398:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:45:7"
                }
              ]
            },
            "documentation": "*********************************|\n|       Unsupported Functions       |\n|__________________________________",
            "id": 497,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:2:7"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1392:0:7"
            },
            "scope": 498,
            "src": "1371:77:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 499,
        "src": "109:1342:7"
      }
    ],
    "src": "0:1451:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-09T12:46:33.246Z",
  "devdoc": {
    "methods": {
      "logURIsMock(uint256[])": {
        "params": {
          "_tokenIDs": "Array of IDs of tokens to log default URI"
        }
      },
      "logURIsMock2(uint256[],string[])": {
        "params": {
          "_URIs": "The URIs of the specified _tokenIDs",
          "_tokenIDs": "IDs of the token corresponding to the _uris logged"
        }
      },
      "setBaseMetadataURI(string)": {
        "params": {
          "_newBaseMetadataURI": "New base URL of token's URI"
        }
      },
      "uri(uint256)": {
        "details": "URIs are defined in RFC 3986.     URIs are assumed to be deterministically generated based on token ID     Token IDs are assumed to be represented in their hex format in URIs ",
        "return": "URI string"
      }
    }
  },
  "userdoc": {
    "methods": {
      "logURIsMock(uint256[])": {
        "notice": "Will emit default URI log event for corresponding token _id"
      },
      "logURIsMock2(uint256[],string[])": {
        "notice": "Will emit a specific URI log event for corresponding token"
      },
      "setBaseMetadataURI(string)": {
        "notice": "Will update the base URL of token's URI"
      },
      "uri(uint256)": {
        "notice": "A distinct Uniform Resource Identifier (URI) for a given token."
      }
    }
  }
}