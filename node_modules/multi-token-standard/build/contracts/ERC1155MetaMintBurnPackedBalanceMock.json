{
  "contractName": "ERC1155MetaMintBurnPackedBalanceMock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owners",
          "type": "address[]"
        },
        {
          "name": "_ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_binAmount",
          "type": "uint256"
        },
        {
          "name": "_index",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "writeValueInBin",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_signerAddress",
          "type": "address"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getIDBinIndex",
      "outputs": [
        {
          "name": "bin",
          "type": "uint256"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "isOperator",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_binAmount",
          "type": "uint256"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getValueInBin",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        },
        {
          "name": "_isGasReimbursed",
          "type": "bool"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "metaSetApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_uri",
          "type": "string"
        },
        {
          "indexed": true,
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mintMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "batchMintMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "batchBurnMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchMintMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mintMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_binAmount\",\"type\":\"uint256\"},{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"writeValueInBin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchBurnMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_signerAddress\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getIDBinIndex\",\"outputs\":[{\"name\":\"bin\",\"type\":\"uint256\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"isOperator\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_binAmount\",\"type\":\"uint256\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getValueInBin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"},{\"name\":\"_isGasReimbursed\",\"type\":\"bool\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"metaSetApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_uri\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"return\":\"The _owner's balance of the Token type requested\"},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"return\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"},\"batchBurnMock(address,uint256[],uint256[])\":{\"details\":\"burn _value of tokens of a given token id \",\"params\":{\"_from\":\"The address to burn tokens from.\",\"_ids\":\"Array of token ids to burn\",\"_values\":\"Array of the amount to be burned\"}},\"batchMintMock(address,uint256[],uint256[])\":{\"details\":\"Mint tokens for each ids in _ids\",\"params\":{\"_ids\":\"Array of ids to mint\",\"_to\":\"The address to mint tokens to.\",\"_values\":\"Array of amount of tokens to mint per id\"}},\"burnMock(address,uint256,uint256)\":{\"details\":\"burn _value of tokens of a given token id \",\"params\":{\"_from\":\"The address to burn tokens from.\",\"_id\":\"token id to burn\",\"_value\":\"The amount to be burned\"}},\"getIDBinIndex(uint256)\":{\"params\":{\"_id\":\"Token id\"},\"return\":\"(Bin number, ID\\\"s index within that bin)\"},\"getNonce(address)\":{\"params\":{\"_signer\":\"Address to query signature nonce for\"}},\"getValueInBin(uint256,uint256)\":{\"params\":{\"_binAmount\":\"uint256 containing the balances of IDS_PER_UINT256 ids\",\"_index\":\"Index at which to retrieve amount\"},\"return\":\"amount at given _index in _bin\"},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"return\":\"True if the operator is approved, false if not\"},\"isValidSignature(address,bytes,bytes)\":{\"details\":\"Verifies that a hash has been signed by the given signer.\",\"params\":{\"_data\":\"Data structure that was hashed and signed\",\"_sig\":\"Proof that the hash has been signed by signer.\",\"_signerAddress\":\"Address that should have signed the given hash.        \"},\"return\":\"True if the address recovered from the provided signature matches the input signer address.\"},\"metaSetApprovalForAll(address,address,bool,bool,bytes)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_data\":\"Encodes signature and gas payment receipt  _data should be encoded as ((bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g))  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array\",\"_isGasReimbursed\":\"Whether gas will be reimbursed or not, with vlid signature\",\"_operator\":\"Address to add to the set of authorized operators\",\"_owner\":\"Address that wants to set operator status  _spender\"}},\"mintMock(address,uint256,uint256)\":{\"details\":\"Mint _value of tokens of a given id \",\"params\":{\"_id\":\"token id to mint\",\"_to\":\"The address to mint tokens to.\",\"_value\":\"The amount to be minted\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (bytes4 METATRANSFER_FLAG, (bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g, bytes data))  i.e. high level encoding should be (bytes4, bytes, bytes), where the latter bytes array is a nested bytes array  METATRANSFER_FLAG should be 0xebc71fa5 for meta transfer with gas reimbursement  METATRANSFER_FLAG should be 0x3fed7708 for meta transfer WITHOUT gas reimbursement (and hence without gasReceipt)\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (bytes4 METATRANSFER_FLAG, (bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g, bytes data))  i.e. high level encoding should be (bytes4, bytes, bytes), where the latter bytes array is a nested bytes array  METATRANSFER_FLAG should be 0xebc71fa5 for meta transfer with gas reimbursement  METATRANSFER_FLAG should be 0x3fed7708 for meta transfer WITHOUT gas reimbursement (and hence without gasReceipt)\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"return\":\"`true` if the contract implements `_interfaceID` and\"},\"writeValueInBin(uint256,uint256,uint256)\":{\"params\":{\"_amount\":\"amount to store at _index in _bin\",\"_binAmount\":\"uint256 containing the balances of IDS_PER_UINT256 ids\",\"_index\":\"Index at which to retrieve amount\"},\"return\":\"amount at given _index in _bin\"}}},\"userdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"getIDBinIndex(uint256)\":{\"notice\":\"Return the bin number and index within that bin where ID is\"},\"getNonce(address)\":{\"notice\":\"Returns the current nonce associated with a given address\"},\"getValueInBin(uint256,uint256)\":{\"notice\":\"Return amount in _binAmount at position _index\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"metaSetApprovalForAll(address,address,bool,bool,bytes)\":{\"notice\":\"Approve the passed address to spend on behalf of _from if valid signature is provided\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Allows anyone with a valid signature to transfer multiple types of tokens on the bahalf of _from\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Allows anyone with a valid signature to transfer _amount amount of a token _id on the bahalf of _from\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"writeValueInBin(uint256,uint256,uint256)\":{\"notice\":\"Return the updated _binAmount after writing _amount at _index\"}}}},\"settings\":{\"compilationTarget\":{\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnPackedBalanceMock.sol\":\"ERC1155MetaMintBurnPackedBalanceMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x439cac989c2f04c3b296643145b4a3f8a43a54d0fc80cfeef9b076d709b8c0f4\",\"urls\":[\"bzzr://e9990fdda7fc53b63bf696a90c168f862c8a6b5f2a90e7738f33b84c8b9e74d2\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0xcc96af370cd86d4ea716c59b1b7bc6f71df259aa23f6f3300bb496bd4972925d\",\"urls\":[\"bzzr://fa3f4c1893cefb5d317cf505654f4407ee1a6d7dcd118f0d436699d3e7fbc514\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x54d558bbb476b54a299d5fd89447cd6e1575e4efdec67c3d162407b82ed6e547\",\"urls\":[\"bzzr://7bef3b4625d9f986615a8d4b156b7e46f235b9157d0e328d42705467683756dc\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xe67bf738622feabcaef08544e99ad3a2ef20cca5c990d5c7ab3b7dfa81d16bf5\",\"urls\":[\"bzzr://802c9167fbf5a040ea54576ddda72b35d56eda6604b4425d122ad8d860c94c50\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6e8d37f345903d97f47ee9181c2a6264894068b78ed462c54855f5cbd610ca55\",\"urls\":[\"bzzr://e16cd412e8670b0bf1b8461eac456097267d9fa531439b140e11e8a654c85245\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnPackedBalanceMock.sol\":{\"keccak256\":\"0x48c8fb84f37903e52720069acf278bdb54f77595c7cb2b6d19cc982c4eb26525\",\"urls\":[\"bzzr://68defacbad7451afbae1a9861e4088407c5896164a31a094472f0c92c6570211\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155PackedBalance/ERC1155MetaPackedBalance.sol\":{\"keccak256\":\"0x2910248bdbd89527a820bf3a4039a7cc8aa6e71b9a73753b0377544260cfbed4\",\"urls\":[\"bzzr://9a9ef451bbf1bf3a479849d436adaf239d67aad9b00d103933d809d08f00916a\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155PackedBalance/ERC1155MintBurnPackedBalance.sol\":{\"keccak256\":\"0x84859d9d10ca8b4d6840ebe41a10f5b640bbad14419f9fcfc940623270290b76\",\"urls\":[\"bzzr://1aef6c9ea48b5a01468770b9b43f94a2ccf1e1b488cc26532863f74d2eecfef8\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155PackedBalance/ERC1155PackedBalance.sol\":{\"keccak256\":\"0xde7c02c07ab06d6d2a0cb114306c0e0265bd2df757e7b968e8f9292d7b38d782\",\"urls\":[\"bzzr://6b6cb0a3d8d1050f27e00a64b3e23ce730f2bf97e51d5857138925a4b1fb7b3d\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/utils/Address.sol\":{\"keccak256\":\"0xff191c897966205716a8c184f8a1fc47b32c7c8102d5da6198fc7bce74039939\",\"urls\":[\"bzzr://a1ab329b64605dfd8bd4bca90bca8da859d065f895d5e70d2de98804db3baa3f\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xc75733200e02eb7f30a81f0c7deacea7e9d8c54776e48f4167b85fd324b7d88f\",\"urls\":[\"bzzr://e73fc3248927638bf9c6ee585c1e79a3e8f445fcb955d9008c9906b87d08d774\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x91f2a078aa0157749e3de6ae60b36539cb87e92c24caa5e6796a612780ba4227\",\"urls\":[\"bzzr://bb8ccf5c74d03bb73df1e596317554199a852530d026cea909acfe84c75307c1\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0xe27603fb6f9e6058d6090658fdcc282e892c59984b77cc62e59e1ae673233d07\",\"urls\":[\"bzzr://e92374c211de4f3b92468e962ee5eca24f5180df0a41c45a742d4d79c407f31a\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "205:1750:6:-;;;314:24;8:9:-1;5:2;;;30:1;27;20:12;5:2;314:24:6;205:1750;;;;;;",
  "deployedSourceMap": "205:1750:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;205:1750:6;1885:62;;;;;;;;;;;;;;;;;;;9494:256:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9494:256:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15587:234;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15587:234:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:147:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;873:147:6;;;;;;;;;;;;;;;;;;;13191:112:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13191:112:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5402:1522;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5402:1522:16;;;;;;;;;;;;;;;;;;;1246:119:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1246:119:6;;;;;;;;;;;;;;;;;;;553:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;553:115:6;;;;;;;;;;;;;;;;;;;10024:605:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10024:605:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14028:579;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14028:579:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8527:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8527:223:18;;;;;;;;;;;;;;;;;;;1582:151:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1582:151:6;;;;;;;;;;;;;;;;;;;1691:3260:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1691:3260:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12913:195:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12913:195:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9001:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9001:153:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13365:333;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13365:333:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3157:1358:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3157:1358:16;;;;;;;;;;;;;;;;;;;7791:843;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7791:843:16;;;;;;;;;;;;;;;;;;;9494:256:18;9570:7;9588:11;9605:13;9671:18;9685:3;9671:13;:18::i;:::-;9656:33;;;;;;;;9702:43;9716:8;:16;9725:6;9716:16;;;;;;;;;;;;;;;:21;9733:3;9716:21;;;;;;;;;;;;9739:5;9702:13;:43::i;:::-;9695:50;;;;9494:256;;;;:::o;15587:234::-;15658:4;14880:10;15690:26;;15674:42;;;:12;:42;;;;:97;;;;15361:10;15744:27;;15728:43;;;:12;:43;;;;15674:97;15670:129;;;15788:4;15781:11;;;;15670:129;15811:5;15804:12;;15587:234;;;;:::o;873:147:6:-;979:36;996:3;1001:4;1007:7;979:16;:36::i;:::-;873:147;;;:::o;13191:112:16:-;13253:13;13283:6;:15;13290:7;13283:15;;;;;;;;;;;;;;;;13276:22;;13191:112;;;:::o;5402:1522::-;5575:1;5560:17;;:3;:17;;;;5552:82;;;;;;;;;;;;;;;;;;;;;;;;5668:16;5687:9;5668:28;;5722:1;5707:5;:12;:16;5703:1217;;;5733:62;5761:5;5768:3;5773:4;5779:8;5789:5;5733:27;:62::i;:::-;5703:1217;;;5850:14;5867:19;5884:1;5867:5;:16;;:19;;;;:::i;:::-;5850:36;;1902:10;5958:17;;5947:28;;;:7;:28;;;;;:80;;;;;2142:10;5990:37;;5979:48;;;:7;:48;;;;;5947:80;5943:971;;;6039:62;6067:5;6074:3;6079:4;6085:8;6095:5;6039:27;:62::i;:::-;5943:971;;;6133:23;6166:25;6201:28;;:::i;:::-;1902:10;6297:17;;6286:28;;;:7;:28;;;;6282:624;;;6341:66;6373:5;6380:3;6385:4;6391:8;6401:5;6341:31;:66::i;:::-;6328:79;;6459:10;6448:43;;;;;;;;;;;;;;6419:72;;;;;;;;;;;;;;6533:64;6556:5;6563:3;6568:4;6574:8;6584:12;6533:22;:64::i;:::-;6656:44;6672:5;6679:8;6689:10;6656:15;:44::i;:::-;6282:624;;;6753:66;6785:5;6792:3;6797:4;6803:8;6813:5;6753:31;:66::i;:::-;6738:81;;6831:64;6854:5;6861:3;6866:4;6872:8;6882:12;6831:22;:64::i;:::-;6282:624;5943:971;;;;5703:1217;;5402:1522;;;;;;:::o;1246:119:6:-;1329:31;1341:5;1348:3;1353:6;1329:11;:31::i;:::-;1246:119;;;:::o;553:115::-;634:29;646:3;651;656:6;634:11;:29::i;:::-;553:115;;;:::o;10024:605:18:-;10129:16;10181:4;;:11;;10163:7;;:14;;:29;10155:99;;;;;;;;;;;;;;;;;;;;;;;;10278:30;10325:7;;:14;;10311:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;10311:29:18;;;;10278:62;;10346:11;10363:13;10432:9;10444:1;10432:13;;10427:171;10451:7;;:14;;10447:1;:18;10427:171;;;10495:22;10509:4;;10514:1;10509:7;;;;;;;;;;;;;;;10495:13;:22::i;:::-;10480:37;;;;;;;;10544:47;10558:8;:20;10567:7;;10575:1;10567:10;;;;;;;;;;;;;;;;;10558:20;;;;;;;;;;;;;;;:25;10579:3;10558:25;;;;;;;;;;;;10585:5;10544:13;:47::i;:::-;10525:13;10539:1;10525:16;;;;;;;;;;;;;;;;;:66;;;;;10467:3;;;;;;;10427:171;;;;10611:13;10604:20;;;;;10024:605;;;;;;:::o;14028:579::-;14132:7;14169:1;14158:7;:12;;14150:77;;;;;;;;;;;;;;;;;;;;;;;;1455:2;14278:1;:16;14268:7;:26;14260:85;;;;;;;;;;;;;;;;;;;;;;;;14401:12;14448:1;1455:2;14425:1;14417:27;;;;14416:33;14401:48;;14476:17;14526:1;14517:6;:10;1455:2;14502:26;14496:3;:32;14476:52;;14592:9;14581:7;:20;;;;14565:9;14557:4;:17;;;;14555:20;14542:10;:33;14541:61;14534:68;;;;14028:579;;;;;:::o;8527:223::-;8677:9;8642;:21;8652:10;8642:21;;;;;;;;;;;;;;;:32;8664:9;8642:32;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;8724:9;8697:48;;8712:10;8697:48;;;8735:9;8697:48;;;;;;;;;;;;;;;8527:223;;:::o;1582:151:6:-;1690:38;1707:5;1714:4;1720:7;1690:16;:38::i;:::-;1582:151;;;:::o;1691:3260:23:-;1829:12;1880:1;1866:4;:11;:15;1851:114;;;;;;;;;;;;;;;;;;;;;;;;2013:3;1987:30;;:14;:30;;;;1972:112;;;;;;;;;;;;;;;;;;;;;;;;2196:12;2221:5;2211:16;;;;;;2196:31;;2284:22;2315:18;:4;:16;:18::i;:::-;2309:25;;;2284:50;;2418:29;2412:36;;;;;;;;2393:55;;:16;:55;;;2378:144;;;;;;;;;;;;;;;;;;;;;;;;2559:27;2603:16;2589:31;;;;;;;;;;2559:61;;2672:7;2685:9;2700;2715:17;3058:21;3041:38;;;;;;;;:13;:38;;;;;;;;;3037:1553;;;3089:64;;;;;;;;;;;;;;;;;;;3037:1553;3219:20;3202:37;;;;;;;;:13;:37;;;;;;;;;3198:1392;;;3281:2;3266:4;:11;:17;3249:109;;;;;;;;;;;;;;;;;;;;;;;;3370:19;3387:1;3370:4;:16;;:19;;;;:::i;:::-;3366:23;;3401:20;3418:2;3401:4;:16;;:20;;;;:::i;:::-;3397:24;;3439:4;3444:2;3439:8;;;;;;;;;;;;;;;;;;;;3433:15;;;3429:19;;3468:24;3478:4;3484:1;3487;3490;3468:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3468:24:23;;;;;;;;3456:36;;3528:9;3510:27;;:14;:27;;;3500:37;;3552:7;3545:14;;;;;;;;;;;3198:1392;3629:21;3612:38;;;;;;;;:13;:38;;;;;;;;;3608:982;;;3692:2;3677:4;:11;:17;3660:109;;;;;;;;;;;;;;;;;;;;;;;;3781:19;3798:1;3781:4;:16;;:19;;;;:::i;:::-;3777:23;;3812:20;3829:2;3812:4;:16;;:20;;;;:::i;:::-;3808:24;;3850:4;3855:2;3850:8;;;;;;;;;;;;;;;;;;;;3844:15;;;3840:19;;3879:129;3961:4;3908:58;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3908:58:23;;;3898:69;;;;;;3977:1;3988;3999;3879:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3879:129:23;;;;;;;;3867:141;;4044:9;4026:27;;:14;:27;;;4016:37;;4068:7;4061:14;;;;;;;;;;;3608:982;4178:25;4161:42;;;;;;;;:13;:42;;;;;;;;;4157:433;;;4260:14;4245:47;;;4293:5;4300:4;4245:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4245:60:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4245:60:23;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4245:60:23;;;;;;;;;4223:82;;;714:10;4223:18;;:82;;;;4213:92;;4320:7;4313:14;;;;;;;;;;;4157:433;4433:27;4416:44;;;;;;;;:13;:44;;;;;;;;;4412:178;;;4517:14;4502:47;;;4550:4;4556;4502:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4502:59:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4502:59:23;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4502:59:23;;;;;;;;;4480:81;;;714:10;4480:18;;:81;;;;4470:91;;4576:7;4569:14;;;;;;;;;;;4412:178;4878:68;;;;;;;;;;;;;;;;;;;1691:3260;;;;;;:::o;12913:195:18:-;12975:11;12988:13;13040:3;1455:2;13018:3;:19;:25;;;;;;;;13012:31;;1455:2;1551:3;:19;;;;;;;;13057:3;:21;;;;;;;;13049:29;;13092:3;13097:5;13084:19;;;;12913:195;;;:::o;9001:153::-;9089:15;9121:9;:17;9131:6;9121:17;;;;;;;;;;;;;;;:28;9139:9;9121:28;;;;;;;;;;;;;;;;;;;;;;;;;9114:35;;9001:153;;;;:::o;13365:333::-;13450:7;13517:12;13564:1;1455:2;13541:1;13533:27;;;;13532:33;13517:48;;13592:18;13645:1;13636:6;:10;1455:2;13619:28;13613:3;:34;13592:55;;13689:4;13675:10;13661;:24;52:12:-1;49:1;45:20;29:14;25:41;7:59;;13661:24:18;13660:33;13653:40;;;;13365:333;;;;:::o;3157:1358:16:-;3303:1;3288:17;;:3;:17;;;;3280:77;;;;;;;;;;;;;;;;;;;;;;;;3391:16;3410:9;3391:28;;3445:1;3430:5;:12;:16;3426:1085;;;3456:55;3479:5;3486:3;3491;3496:7;3505:5;3456:22;:55::i;:::-;3426:1085;;;3566:14;3583:19;3600:1;3583:5;:16;;:19;;;;:::i;:::-;3566:36;;1902:10;3674:17;;3663:28;;;:7;:28;;;;;:80;;;;;2142:10;3706:37;;3695:48;;;:7;:48;;;;;3663:80;3659:846;;;3755:55;3778:5;3785:3;3790;3795:7;3804:5;3755:22;:55::i;:::-;3659:846;;;3836:23;3869:25;3904:28;;:::i;:::-;1902:10;4000:17;;3989:28;;;:7;:28;;;;3985:512;;;4044:59;4071:5;4078:3;4083;4088:7;4097:5;4044:26;:59::i;:::-;4031:72;;4155:10;4144:43;;;;;;;;;;;;;;4115:72;;;;;;;;;;;;;;4200:57;4218:5;4225:3;4230;4235:7;4244:12;4200:17;:57::i;:::-;4269:44;4285:5;4292:8;4302:10;4269:15;:44::i;:::-;3985:512;;;4358:59;4385:5;4392:3;4397;4402:7;4411:5;4358:26;:59::i;:::-;4343:74;;4429:57;4447:5;4454:3;4459;4464:7;4473:12;4429:17;:57::i;:::-;3985:512;3659:846;;;;3426:1085;;3157:1358;;;;;;:::o;7791:843::-;7987:16;8006:9;7987:28;;8021;;:::i;:::-;8095:16;8091:268;;;8121:23;8147:63;8174:6;8182:9;8193;8204:5;8147:26;:63::i;:::-;8121:89;;8242:10;8231:36;;;;;;;;;;;;;;8218:49;;8091:268;;;;8289:63;8316:6;8324:9;8335;8346:5;8289:26;:63::i;:::-;;8091:268;8426:9;8395;:17;8405:6;8395:17;;;;;;;;;;;;;;;:28;8413:9;8395:28;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;8488:9;8465:44;;8480:6;8465:44;;;8499:9;8465:44;;;;;;;;;;;;;;;8552:16;8548:82;;;8578:45;8594:6;8602:8;8612:10;8578:15;:45::i;:::-;8548:82;7791:843;;;;;;;:::o;1182:591:17:-;1311:8;:15;1296:4;:11;:30;1288:104;;;;;;;;;;;;;;;;;;;;;;;;1433:13;1449:4;:11;1433:27;;1502:9;1514:1;1502:13;;1497:171;1521:5;1517:1;:9;1497:171;;;1573:61;1590:3;1597:4;1602:1;1597:7;;;;;;;;;;;;;;;;;;1606:8;1615:1;1606:11;;;;;;;;;;;;;;;;;;1619:14;1573:16;:61::i;:::-;1528:3;;;;;;;1497:171;;;;1748:3;1708:60;;1742:3;1708:60;;1722:10;1708:60;;;1753:4;1759:8;1708:60;;;;;;;;;;;;;;;;1182:591;;;;:::o;3801:456:18:-;3994:5;3980:19;;:10;:19;;;3979:53;;;;4004:9;:16;4014:5;4004:16;;;;;;;;;;;;;;;:28;4021:10;4004:28;;;;;;;;;;;;;;;;;;;;;;;;;3979:53;3971:126;;;;;;;;;;;;;;;;;;;;;;;;4126:1;4111:17;;:3;:17;;;;4103:85;;;;;;;;;;;;;;;;;;;;;;;;4195:57;4218:5;4225:3;4230:4;4236:8;4246:5;4195:22;:57::i;:::-;3801:456;;;;;:::o;13884:614:20:-;13982:13;14040:1;14032:5;:9;14020:1;:8;:21;;14005:110;;;;;;;;;;;;;;;;;;;;;;;;14184:2;14175:11;;;;14274:5;14271:1;14267:13;14261:20;14251:30;;14402:66;14394:6;14390:79;14380:89;;14487:6;14480:13;;13884:614;;;;:::o;10850:821:16:-;11034:23;11068:10;11084:16;11181:5;11170:41;;;;;;;;;;;;;;11145:66;;;;;;;;;;;;;;;;;;11264:13;11280:6;:13;11287:5;11280:13;;;;;;;;;;;;;;;;11264:29;;11337:17;11382:4;11389:5;11396:3;11401:4;11407:8;11417:5;11424:10;11357:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11357:78:16;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11357:78:16;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;11357:78:16;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11357:78:16;;;11337:98;;11487:34;11504:5;11511:4;11517:3;11487:16;:34::i;:::-;11479:109;;;;;;;;;;;;;;;;;;;;;;;;11641:1;11624:6;:13;11631:5;11624:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;11656:10;11649:17;;;;;;10850:821;;;;;;;:::o;5978:2152:18:-;6153:8;:15;6138:4;:11;:30;6130:109;;;;;;;;;;;;;;;;;;;;;;;;6313:11;6326:13;6343:22;6357:4;6362:1;6357:7;;;;;;;;;;;;;;;;;;6343:13;:22::i;:::-;6312:53;;;;6447:15;6465:78;6486:8;:15;6495:5;6486:15;;;;;;;;;;;;;;;:20;6502:3;6486:20;;;;;;;;;;;;6508:5;6515:8;6524:1;6515:11;;;;;;;;;;;;;;;;;;6528:14;6465:20;:78::i;:::-;6447:96;;6549:13;6565:76;6586:8;:13;6595:3;6586:13;;;;;;;;;;;;;;;:18;6600:3;6586:18;;;;;;;;;;;;6606:5;6613:8;6622:1;6613:11;;;;;;;;;;;;;;;;;;6626:14;6565:20;:76::i;:::-;6549:92;;6685:17;6705:4;:11;6685:31;;6747:15;6765:3;6747:21;;6780:9;6792:1;6780:13;;6775:849;6799:9;6795:1;:13;6775:849;;;6838:22;6852:4;6857:1;6852:7;;;;;;;;;;;;;;;;;;6838:13;:22::i;:::-;6823:37;;;;;;;;6900:7;6893:3;:14;;6889:353;;;6996:7;6969:8;:15;6978:5;6969:15;;;;;;;;;;;;;;;:24;6985:7;6969:24;;;;;;;;;;;:34;;;;7038:5;7013:8;:13;7022:3;7013:13;;;;;;;;;;;;;;;:22;7027:7;7013:22;;;;;;;;;;;:30;;;;7110:8;:15;7119:5;7110:15;;;;;;;;;;;;;;;:20;7126:3;7110:20;;;;;;;;;;;;7100:30;;7148:8;:13;7157:3;7148:13;;;;;;;;;;;;;;;:18;7162:3;7148:18;;;;;;;;;;;;7140:26;;7230:3;7220:13;;6889:353;7468:65;7489:7;7498:5;7505:8;7514:1;7505:11;;;;;;;;;;;;;;;;;;7518:14;7468:20;:65::i;:::-;7458:75;;7549:63;7570:5;7577;7584:8;7593:1;7584:11;;;;;;;;;;;;;;;;;;7597:14;7549:20;:63::i;:::-;7541:71;;6810:3;;;;;;;6775:849;;;;7699:7;7676:8;:15;7685:5;7676:15;;;;;;;;;;;;;;;:20;7692:3;7676:20;;;;;;;;;;;:30;;;;7733:5;7712:8;:13;7721:3;7712:13;;;;;;;;;;;;;;;:18;7726:3;7712:18;;;;;;;;;;;:26;;;;7791:16;:3;:14;;;:16::i;:::-;7787:274;;;7817:13;7855:3;7833:49;;;7883:10;7895:5;7902:4;7908:8;7918:5;7833:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7833:91:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7833:91:18;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7833:91:18;;;;;;;;;7817:107;;1332:10;7950:28;;7940:38;;;:6;:38;;;;7932:122;;;;;;;;;;;;;;;;;;;;;;;;7787:274;;8105:3;8072:53;;8098:5;8072:53;;8086:10;8072:53;;;8110:4;8116:8;8072:53;;;;;;;;;;;;;;;;5978:2152;;;;;;;;;;;:::o;13823:1792:16:-;13970:21;14000:29;:2;:15;;;:27;:29::i;:::-;13994:36;;;13970:60;;14111:19;14105:26;;;;;;;;14087:44;;:15;:44;;;14072:122;;;;;;;;;;;;;;;;;;;;;;;;14252:25;14293:15;14280:29;;;;;;;;;;14252:57;;14336:20;14362:28;14396:15;14417;14438:11;14496:40;14525:2;:10;;;14496:24;14510:9;14496;:13;;:24;;;;:::i;:::-;:28;;:40;;;;:::i;:::-;14486:50;;14615:2;:11;;;14605:7;:21;:78;;14659:24;14671:2;:11;;;14659:7;:11;;:24;;;;:::i;:::-;14605:78;;;14629:28;14645:2;:11;;;14629:2;:11;;;:15;;:28;;;;:::i;:::-;14605:78;14599:84;;14823:1;14796:29;;:2;:15;;;:29;;;:59;;14840:2;:15;;;14796:59;;;14828:9;14796:59;14781:74;;14910:20;14894:36;;;;;;;;:12;:36;;;;;;;;;14890:719;;;14978:2;:15;;;14967:47;;;;;;;;;;;;;;14941:73;;;;;;;;;;;15099:4;15075:29;;:12;:29;;;15071:272;;;15115:56;15133:5;15140:12;15154:7;15163:3;15115:56;;;;;;;;;;;;;:17;:56::i;:::-;15071:272;;;15265:12;15256:39;;;15296:5;15303:12;15317:7;15326:3;15256:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15256:78:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15256:78:16;;;;15071:272;14890:719;;;15420:2;:15;;;15409:38;;;;;;;;;;;;;;15394:53;;15479:12;15472:33;;;15506:5;15513:12;15527:3;15472:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15472:59:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15472:59:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15472:59:16;;;;;;;;;15455:147;;;;;;;;;;;;;;;;;;;;;;;;14890:719;13823:1792;;;;;;;;;;:::o;2119:260:17:-;2229:53;2246:5;2253:3;2258:7;2267:14;2229:16;:53::i;:::-;2355:3;2313:61;;2340:5;2313:61;;2328:10;2313:61;;;2361:3;2366:7;2313:61;;;;;;;;;;;;;;;;2119:260;;;:::o;669:276::-;771:53;788:3;795;800:7;809:14;771:16;:53::i;:::-;922:3;881:59;;916:3;881:59;;896:10;881:59;;;927:3;932:7;881:59;;;;;;;;;;;;;;;;669:276;;;:::o;2635:597::-;2766:8;:15;2751:4;:11;:30;2743:104;;;;;;;;;;;;;;;;;;;;;;;;2888:13;2904:4;:11;2888:27;;2957:9;2969:1;2957:13;;2952:173;2976:5;2972:1;:9;2952:173;;;3028:63;3045:5;3054:4;3059:1;3054:7;;;;;;;;;;;;;;;;;;3063:8;3072:1;3063:11;;;;;;;;;;;;;;;;;;3076:14;3028:16;:63::i;:::-;2983:3;;;;;;;2952:173;;;;3206:3;3165:62;;3191:5;3165:62;;3179:10;3165:62;;;3212:4;3218:8;3165:62;;;;;;;;;;;;;;;;2635:597;;;;:::o;7239:396:20:-;7311:13;7360:1;7349;:8;:12;7334:98;;;;;;;;;;;;;;;;;;;;;;;;7472:1;7485;7474;:8;:12;7472:15;;;;;;;;;;;;;;;;;;;;7463:24;;7580:1;7576;7570:8;7566:16;7599:6;7596:1;7589:17;7503:109;7624:6;7617:13;;7239:396;;;:::o;11788:436::-;11887:14;11946:2;11938:5;:10;11926:1;:8;:22;;11911:113;;;;;;;;;;;;;;;;;;;;;;;;12097:2;12088:11;;;;12188:5;12185:1;12181:13;12175:20;12165:30;;12213:6;12206:13;;11788:436;;;;:::o;2794:521:18:-;2964:5;2950:19;;:10;:19;;;2949:53;;;;2974:9;:16;2984:5;2974:16;;;;;;;;;;;;;;;:28;2991:10;2974:28;;;;;;;;;;;;;;;;;;;;;;;;;2949:53;2941:121;;;;;;;;;;;;;;;;;;;;;;;;3091:1;3076:17;;:3;:17;;;;3068:85;;;;;;;;;;;;;;;;;;;;;;;;3260:50;3278:5;3285:3;3290;3295:7;3304:5;3260:17;:50::i;:::-;2794:521;;;;;:::o;9401:788:16:-;9558:23;9592:10;9608:16;9705:5;9694:41;;;;;;;;;;;;;;9669:66;;;;;;;;;;;;;;;;;;9788:13;9804:6;:13;9811:5;9804:13;;;;;;;;;;;;;;;;9788:29;;9861:17;9906:4;9913:5;9920:3;9925;9931:7;9940:5;9947:10;9881:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;9881:77:16;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9881:77:16;;;9861:97;;10010:34;10027:5;10034:4;10040:3;10010:16;:34::i;:::-;10002:104;;;;;;;;;;;;;;;;;;;;;;;;10159:1;10142:6;:13;10149:5;10142:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;10174:10;10167:17;;;;;;9401:788;;;;;;;:::o;4733:759:18:-;4881:53;4898:5;4905:3;4910:7;4919:14;4881:16;:53::i;:::-;4971;4988:3;4995;5000:7;5009:14;4971:16;:53::i;:::-;5109:16;:3;:14;;;:16::i;:::-;5105:301;;;5180:13;5218:3;5196:44;;;5241:10;5253:5;5260:3;5265:7;5274:5;5196:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5196:84:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5196:84:18;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5196:84:18;;;;;;;;;5180:100;;1262:10;5306:22;;5296:32;;;:6;:32;;;;5288:111;;;;;;;;;;;;;;;;;;;;;;;;5105:301;;5469:3;5435:52;;5462:5;5435:52;;5450:10;5435:52;;;5474:3;5479:7;5435:52;;;;;;;;;;;;;;;;4733:759;;;;;:::o;12292:755:16:-;12438:23;12472:16;12564:5;12553:33;;;;;;;;;;;;;;12533:53;;;;;;;;;;;;;;12639:13;12655:6;:14;12662:6;12655:14;;;;;;;;;;;;;;;;12639:30;;12713:17;12758:4;12765:6;12773:9;12784;12795:5;12802:10;12733:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12733:80:16;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12733:80:16;;;12713:100;;12866:35;12883:6;12891:4;12897:3;12866:16;:35::i;:::-;12858:105;;;;;;;;;;;;;;;;;;;;;;;;13017:1;12999:6;:14;13006:6;12999:14;;;;;;;;;;;;;;;;:19;;;;;;;;;;;13032:10;13025:17;;;;;12292:755;;;;;;:::o;11143:354:18:-;11262:11;11279:13;11346:18;11360:3;11346:13;:18::i;:::-;11331:33;;;;;;;;11419:73;11440:8;:18;11449:8;11440:18;;;;;;;;;;;;;;;:23;11459:3;11440:23;;;;;;;;;;;;11465:5;11472:7;11481:10;11419:20;:73::i;:::-;11393:8;:18;11402:8;11393:18;;;;;;;;;;;;;;;:23;11412:3;11393:23;;;;;;;;;;;:99;;;;11143:354;;;;;;:::o;11939:809::-;12074:21;12105;12192:14;12178:28;;;;;;;;:10;:28;;;;;;;;;12174:543;;;12233:35;12247:12;12261:6;12233:13;:35::i;:::-;12217:51;;12292:62;12308:12;12322:6;12346:7;12330:13;:23;12292:15;:62::i;:::-;12276:78;;12174:543;;;12426:14;12412:28;;;;;;;;:10;:28;;;;;;;;;12408:309;;;12467:35;12481:12;12495:6;12467:13;:35::i;:::-;12451:51;;12526:65;12542:12;12556:6;12564:26;12582:7;12564:13;:17;;:26;;;;:::i;:::-;12526:15;:65::i;:::-;12510:81;;12408:309;;;12613:80;;;;;;;;;;;;;;;;;;;12408:309;12174:543;12730:13;12723:20;;;11939:809;;;;;;:::o;1042:582:19:-;1102:4;1114:12;1589:7;1577:20;1569:28;;1618:1;1611:4;:8;1604:15;;;1042:582;;;:::o;1185:158:22:-;1243:7;1271:1;1266;:6;;1258:42;;;;;;;;;;;;;;;;;;;;;;;;1306:9;1322:1;1318;:5;1306:17;;1337:1;1330:8;;;1185:158;;;;:::o;1418:::-;1476:7;1491:9;1507:1;1503;:5;1491:17;;1527:1;1522;:6;;1514:41;;;;;;;;;;;;;;;;;;;;;;;;1569:1;1562:8;;;1418:158;;;;:::o;225:407::-;283:7;512:1;507;:6;503:35;;;530:1;523:8;;;;503:35;544:9;560:1;556;:5;544:17;;584:1;579;575;:5;;;;;;;;:10;567:45;;;;;;;;;;;;;;;;;;;;;;;;626:1;619:8;;;225:407;;;;;:::o;205:1750:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:138;;216:47;255:6;249:13;216:47;;;207:56;;201:67;;;;;293:352;;;423:3;416:4;408:6;404:17;400:27;393:35;390:2;;;441:1;438;431:12;390:2;474:6;461:20;451:30;;501:18;493:6;490:30;487:2;;;533:1;530;523:12;487:2;567:4;559:6;555:17;543:29;;618:3;610:4;602:6;598:17;588:8;584:32;581:41;578:2;;;635:1;632;625:12;578:2;383:262;;;;;;671:352;;;801:3;794:4;786:6;782:17;778:27;771:35;768:2;;;819:1;816;809:12;768:2;852:6;839:20;829:30;;879:18;871:6;868:30;865:2;;;911:1;908;901:12;865:2;945:4;937:6;933:17;921:29;;996:3;988:4;980:6;976:17;966:8;962:32;959:41;956:2;;;1013:1;1010;1003:12;956:2;761:262;;;;;;1049:707;;1166:3;1159:4;1151:6;1147:17;1143:27;1136:35;1133:2;;;1184:1;1181;1174:12;1133:2;1221:6;1208:20;1243:80;1258:64;1315:6;1258:64;;;1243:80;;;1234:89;;1340:5;1365:6;1358:5;1351:21;1395:4;1387:6;1383:17;1373:27;;1417:4;1412:3;1408:14;1401:21;;1470:6;1517:3;1509:4;1501:6;1497:17;1492:3;1488:27;1485:36;1482:2;;;1534:1;1531;1524:12;1482:2;1559:1;1544:206;1569:6;1566:1;1563:13;1544:206;;;1627:3;1649:37;1682:3;1670:10;1649:37;;;1644:3;1637:50;1710:4;1705:3;1701:14;1694:21;;1738:4;1733:3;1729:14;1722:21;;1601:149;1591:1;1588;1584:9;1579:14;;1544:206;;;1548:14;1126:630;;;;;;;;1764:112;;1828:43;1863:6;1850:20;1828:43;;;1819:52;;1813:63;;;;;1883:116;;1958:36;1986:6;1980:13;1958:36;;;1949:45;;1943:56;;;;;2006:116;;2072:45;2109:6;2096:20;2072:45;;;2063:54;;2057:65;;;;;2129:120;;2206:38;2236:6;2230:13;2206:38;;;2197:47;;2191:58;;;;;2257:434;;2365:3;2358:4;2350:6;2346:17;2342:27;2335:35;2332:2;;;2383:1;2380;2373:12;2332:2;2413:6;2407:13;2435:60;2450:44;2487:6;2450:44;;;2435:60;;;2426:69;;2515:6;2508:5;2501:21;2551:4;2543:6;2539:17;2584:4;2577:5;2573:16;2619:3;2610:6;2605:3;2601:16;2598:25;2595:2;;;2636:1;2633;2626:12;2595:2;2646:39;2678:6;2673:3;2668;2646:39;;;2325:366;;;;;;;;2700:440;;2801:3;2794:4;2786:6;2782:17;2778:27;2771:35;2768:2;;;2819:1;2816;2809:12;2768:2;2856:6;2843:20;2878:64;2893:48;2934:6;2893:48;;;2878:64;;;2869:73;;2962:6;2955:5;2948:21;2998:4;2990:6;2986:17;3031:4;3024:5;3020:16;3066:3;3057:6;3052:3;3048:16;3045:25;3042:2;;;3083:1;3080;3073:12;3042:2;3093:41;3127:6;3122:3;3117;3093:41;;;2761:379;;;;;;;;3197:1083;;3321:4;3309:9;3304:3;3300:19;3296:30;3293:2;;;3339:1;3336;3329:12;3293:2;3357:20;3372:4;3357:20;;;3348:29;;3431:1;3462:60;3518:3;3509:6;3498:9;3494:22;3462:60;;;3456:3;3449:5;3445:15;3438:85;3387:147;3587:2;3620:60;3676:3;3667:6;3656:9;3652:22;3620:60;;;3613:4;3606:5;3602:16;3595:86;3544:148;3746:2;3779:60;3835:3;3826:6;3815:9;3811:22;3779:60;;;3772:4;3765:5;3761:16;3754:86;3702:149;3909:2;3942:68;4006:3;3997:6;3986:9;3982:22;3942:68;;;3935:4;3928:5;3924:16;3917:94;3861:161;4101:3;4090:9;4086:19;4080:26;4126:18;4118:6;4115:30;4112:2;;;4158:1;4155;4148:12;4112:2;4193:65;4254:3;4245:6;4234:9;4230:22;4193:65;;;4186:4;4179:5;4175:16;4168:91;4032:238;3287:993;;;;;4287:118;;4354:46;4392:6;4379:20;4354:46;;;4345:55;;4339:66;;;;;4412:122;;4490:39;4521:6;4515:13;4490:39;;;4481:48;;4475:59;;;;;4541:241;;4645:2;4633:9;4624:7;4620:23;4616:32;4613:2;;;4661:1;4658;4651:12;4613:2;4696:1;4713:53;4758:7;4749:6;4738:9;4734:22;4713:53;;;4703:63;;4675:97;4607:175;;;;;4789:279;;4912:2;4900:9;4891:7;4887:23;4883:32;4880:2;;;4928:1;4925;4918:12;4880:2;4963:1;4980:72;5044:7;5035:6;5024:9;5020:22;4980:72;;;4970:82;;4942:116;4874:194;;;;;5075:415;;;5215:2;5203:9;5194:7;5190:23;5186:32;5183:2;;;5231:1;5228;5221:12;5183:2;5266:1;5283:72;5347:7;5338:6;5327:9;5323:22;5283:72;;;5273:82;;5245:116;5392:2;5410:64;5466:7;5457:6;5446:9;5442:22;5410:64;;;5400:74;;5371:109;5177:313;;;;;;5497:366;;;5618:2;5606:9;5597:7;5593:23;5589:32;5586:2;;;5634:1;5631;5624:12;5586:2;5669:1;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;;;5676:63;;5648:97;5776:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;;;5784:63;;5755:98;5580:283;;;;;;5870:1119;;;;;;6101:3;6089:9;6080:7;6076:23;6072:33;6069:2;;;6118:1;6115;6108:12;6069:2;6153:1;6170:53;6215:7;6206:6;6195:9;6191:22;6170:53;;;6160:63;;6132:97;6260:2;6278:53;6323:7;6314:6;6303:9;6299:22;6278:53;;;6268:63;;6239:98;6396:2;6385:9;6381:18;6368:32;6420:18;6412:6;6409:30;6406:2;;;6452:1;6449;6442:12;6406:2;6472:78;6542:7;6533:6;6522:9;6518:22;6472:78;;;6462:88;;6347:209;6615:2;6604:9;6600:18;6587:32;6639:18;6631:6;6628:30;6625:2;;;6671:1;6668;6661:12;6625:2;6691:78;6761:7;6752:6;6741:9;6737:22;6691:78;;;6681:88;;6566:209;6834:3;6823:9;6819:19;6806:33;6859:18;6851:6;6848:30;6845:2;;;6891:1;6888;6881:12;6845:2;6911:62;6965:7;6956:6;6945:9;6941:22;6911:62;;;6901:72;;6785:194;6063:926;;;;;;;;;6996:835;;;;;;7171:3;7159:9;7150:7;7146:23;7142:33;7139:2;;;7188:1;7185;7178:12;7139:2;7223:1;7240:53;7285:7;7276:6;7265:9;7261:22;7240:53;;;7230:63;;7202:97;7330:2;7348:53;7393:7;7384:6;7373:9;7369:22;7348:53;;;7338:63;;7309:98;7438:2;7456:50;7498:7;7489:6;7478:9;7474:22;7456:50;;;7446:60;;7417:95;7543:2;7561:50;7603:7;7594:6;7583:9;7579:22;7561:50;;;7551:60;;7522:95;7676:3;7665:9;7661:19;7648:33;7701:18;7693:6;7690:30;7687:2;;;7733:1;7730;7723:12;7687:2;7753:62;7807:7;7798:6;7787:9;7783:22;7753:62;;;7743:72;;7627:194;7133:698;;;;;;;;;7838:847;;;;;;8019:3;8007:9;7998:7;7994:23;7990:33;7987:2;;;8036:1;8033;8026:12;7987:2;8071:1;8088:53;8133:7;8124:6;8113:9;8109:22;8088:53;;;8078:63;;8050:97;8178:2;8196:53;8241:7;8232:6;8221:9;8217:22;8196:53;;;8186:63;;8157:98;8286:2;8304:53;8349:7;8340:6;8329:9;8325:22;8304:53;;;8294:63;;8265:98;8394:2;8412:53;8457:7;8448:6;8437:9;8433:22;8412:53;;;8402:63;;8373:98;8530:3;8519:9;8515:19;8502:33;8555:18;8547:6;8544:30;8541:2;;;8587:1;8584;8577:12;8541:2;8607:62;8661:7;8652:6;8641:9;8637:22;8607:62;;;8597:72;;8481:194;7981:704;;;;;;;;;8692:763;;;;8880:2;8868:9;8859:7;8855:23;8851:32;8848:2;;;8896:1;8893;8886:12;8848:2;8931:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;;;8938:63;;8910:97;9066:2;9055:9;9051:18;9038:32;9090:18;9082:6;9079:30;9076:2;;;9122:1;9119;9112:12;9076:2;9142:78;9212:7;9203:6;9192:9;9188:22;9142:78;;;9132:88;;9017:209;9285:2;9274:9;9270:18;9257:32;9309:18;9301:6;9298:30;9295:2;;;9341:1;9338;9331:12;9295:2;9361:78;9431:7;9422:6;9411:9;9407:22;9361:78;;;9351:88;;9236:209;8842:613;;;;;;9462:360;;;9580:2;9568:9;9559:7;9555:23;9551:32;9548:2;;;9596:1;9593;9586:12;9548:2;9631:1;9648:53;9693:7;9684:6;9673:9;9669:22;9648:53;;;9638:63;;9610:97;9738:2;9756:50;9798:7;9789:6;9778:9;9774:22;9756:50;;;9746:60;;9717:95;9542:280;;;;;;9829:699;;;;9985:2;9973:9;9964:7;9960:23;9956:32;9953:2;;;10001:1;9998;9991:12;9953:2;10036:1;10053:53;10098:7;10089:6;10078:9;10074:22;10053:53;;;10043:63;;10015:97;10171:2;10160:9;10156:18;10143:32;10195:18;10187:6;10184:30;10181:2;;;10227:1;10224;10217:12;10181:2;10247:62;10301:7;10292:6;10281:9;10277:22;10247:62;;;10237:72;;10122:193;10374:2;10363:9;10359:18;10346:32;10398:18;10390:6;10387:30;10384:2;;;10430:1;10427;10420:12;10384:2;10450:62;10504:7;10495:6;10484:9;10480:22;10450:62;;;10440:72;;10325:193;9947:581;;;;;;10535:366;;;10656:2;10644:9;10635:7;10631:23;10627:32;10624:2;;;10672:1;10669;10662:12;10624:2;10707:1;10724:53;10769:7;10760:6;10749:9;10745:22;10724:53;;;10714:63;;10686:97;10814:2;10832:53;10877:7;10868:6;10857:9;10853:22;10832:53;;;10822:63;;10793:98;10618:283;;;;;;10908:491;;;;11046:2;11034:9;11025:7;11021:23;11017:32;11014:2;;;11062:1;11059;11052:12;11014:2;11097:1;11114:53;11159:7;11150:6;11139:9;11135:22;11114:53;;;11104:63;;11076:97;11204:2;11222:53;11267:7;11258:6;11247:9;11243:22;11222:53;;;11212:63;;11183:98;11312:2;11330:53;11375:7;11366:6;11355:9;11351:22;11330:53;;;11320:63;;11291:98;11008:391;;;;;;11406:678;;;;;11597:2;11585:9;11576:7;11572:23;11568:32;11565:2;;;11613:1;11610;11603:12;11565:2;11676:1;11665:9;11661:17;11648:31;11699:18;11691:6;11688:30;11685:2;;;11731:1;11728;11721:12;11685:2;11759:80;11831:7;11822:6;11811:9;11807:22;11759:80;;;11741:98;;;;11627:218;11904:2;11893:9;11889:18;11876:32;11928:18;11920:6;11917:30;11914:2;;;11960:1;11957;11950:12;11914:2;11988:80;12060:7;12051:6;12040:9;12036:22;11988:80;;;11970:98;;;;11855:219;11559:525;;;;;;;;12091:257;;12203:2;12191:9;12182:7;12178:23;12174:32;12171:2;;;12219:1;12216;12209:12;12171:2;12254:1;12271:61;12324:7;12315:6;12304:9;12300:22;12271:61;;;12261:71;;12233:105;12165:183;;;;;12355:239;;12458:2;12446:9;12437:7;12433:23;12429:32;12426:2;;;12474:1;12471;12464:12;12426:2;12509:1;12526:52;12570:7;12561:6;12550:9;12546:22;12526:52;;;12516:62;;12488:96;12420:174;;;;;12601:261;;12715:2;12703:9;12694:7;12690:23;12686:32;12683:2;;;12731:1;12728;12721:12;12683:2;12766:1;12783:63;12838:7;12829:6;12818:9;12814:22;12783:63;;;12773:73;;12745:107;12677:185;;;;;12869:711;;;;13027:2;13015:9;13006:7;13002:23;12998:32;12995:2;;;13043:1;13040;13033:12;12995:2;13078:1;13095:63;13150:7;13141:6;13130:9;13126:22;13095:63;;;13085:73;;13057:107;13216:2;13205:9;13201:18;13195:25;13240:18;13232:6;13229:30;13226:2;;;13272:1;13269;13262:12;13226:2;13292:69;13353:7;13344:6;13333:9;13329:22;13292:69;;;13282:79;;13174:193;13419:2;13408:9;13404:18;13398:25;13443:18;13435:6;13432:30;13429:2;;;13475:1;13472;13465:12;13429:2;13495:69;13556:7;13547:6;13536:9;13532:22;13495:69;;;13485:79;;13377:193;12989:591;;;;;;13587:577;;;13729:2;13717:9;13708:7;13704:23;13700:32;13697:2;;;13745:1;13742;13735:12;13697:2;13801:1;13790:9;13786:17;13780:24;13824:18;13816:6;13813:30;13810:2;;;13856:1;13853;13846:12;13810:2;13876:69;13937:7;13928:6;13917:9;13913:22;13876:69;;;13866:79;;13759:192;14003:2;13992:9;13988:18;13982:25;14027:18;14019:6;14016:30;14013:2;;;14059:1;14056;14049:12;14013:2;14079:69;14140:7;14131:6;14120:9;14116:22;14079:69;;;14069:79;;13961:193;13691:473;;;;;;14171:390;;14310:2;14298:9;14289:7;14285:23;14281:32;14278:2;;;14326:1;14323;14316:12;14278:2;14382:1;14371:9;14367:17;14361:24;14405:18;14397:6;14394:30;14391:2;;;14437:1;14434;14427:12;14391:2;14457:88;14537:7;14528:6;14517:9;14513:22;14457:88;;;14447:98;;14340:211;14272:289;;;;;14568:615;;;14729:2;14717:9;14708:7;14704:23;14700:32;14697:2;;;14745:1;14742;14735:12;14697:2;14801:1;14790:9;14786:17;14780:24;14824:18;14816:6;14813:30;14810:2;;;14856:1;14853;14846:12;14810:2;14876:88;14956:7;14947:6;14936:9;14932:22;14876:88;;;14866:98;;14759:211;15022:2;15011:9;15007:18;15001:25;15046:18;15038:6;15035:30;15032:2;;;15078:1;15075;15068:12;15032:2;15098:69;15159:7;15150:6;15139:9;15135:22;15098:69;;;15088:79;;14980:193;14691:492;;;;;;15190:241;;15294:2;15282:9;15273:7;15269:23;15265:32;15262:2;;;15310:1;15307;15300:12;15262:2;15345:1;15362:53;15407:7;15398:6;15387:9;15383:22;15362:53;;;15352:63;;15324:97;15256:175;;;;;15438:366;;;15559:2;15547:9;15538:7;15534:23;15530:32;15527:2;;;15575:1;15572;15565:12;15527:2;15610:1;15627:53;15672:7;15663:6;15652:9;15648:22;15627:53;;;15617:63;;15589:97;15717:2;15735:53;15780:7;15771:6;15760:9;15756:22;15735:53;;;15725:63;;15696:98;15521:283;;;;;;15811:491;;;;15949:2;15937:9;15928:7;15924:23;15920:32;15917:2;;;15965:1;15962;15955:12;15917:2;16000:1;16017:53;16062:7;16053:6;16042:9;16038:22;16017:53;;;16007:63;;15979:97;16107:2;16125:53;16170:7;16161:6;16150:9;16146:22;16125:53;;;16115:63;;16086:98;16215:2;16233:53;16278:7;16269:6;16258:9;16254:22;16233:53;;;16223:63;;16194:98;15911:391;;;;;;16309:132;16390:45;16429:5;16390:45;;;16385:3;16378:58;16372:69;;;16448:110;16521:31;16546:5;16521:31;;;16516:3;16509:44;16503:55;;;16596:590;;16731:54;16779:5;16731:54;;;16803:6;16798:3;16791:19;16827:4;16822:3;16818:14;16811:21;;16872:56;16922:5;16872:56;;;16949:1;16934:230;16959:6;16956:1;16953:13;16934:230;;;16999:53;17048:3;17039:6;17033:13;16999:53;;;17069:60;17122:6;17069:60;;;17059:70;;17152:4;17147:3;17143:14;17136:21;;16981:1;16978;16974:9;16969:14;;16934:230;;;16938:14;17177:3;17170:10;;16710:476;;;;;;;17194:101;17261:28;17283:5;17261:28;;;17256:3;17249:41;17243:52;;;17302:110;17375:31;17400:5;17375:31;;;17370:3;17363:44;17357:55;;;17419:297;;17519:38;17551:5;17519:38;;;17574:6;17569:3;17562:19;17586:63;17642:6;17635:4;17630:3;17626:14;17619:4;17612:5;17608:16;17586:63;;;17681:29;17703:6;17681:29;;;17674:4;17669:3;17665:14;17661:50;17654:57;;17499:217;;;;;;17724:397;;17879:2;17874:3;17867:15;17916:66;17911:2;17906:3;17902:12;17895:88;18017:66;18012:2;18007:3;18003:12;17996:88;18112:2;18107:3;18103:12;18096:19;;17860:261;;;;18130:499;;18285:2;18280:3;18273:15;18322:66;18317:2;18312:3;18308:12;18301:88;18423:66;18418:2;18413:3;18409:12;18402:88;18524:66;18519:2;18514:3;18510:12;18503:88;18619:3;18614;18610:13;18603:20;;18266:363;;;;18638:397;;18793:2;18788:3;18781:15;18830:66;18825:2;18820:3;18816:12;18809:88;18931:66;18926:2;18921:3;18917:12;18910:88;19026:2;19021:3;19017:12;19010:19;;18774:261;;;;19044:397;;19199:2;19194:3;19187:15;19236:66;19231:2;19226:3;19222:12;19215:88;19337:66;19332:2;19327:3;19323:12;19316:88;19432:2;19427:3;19423:12;19416:19;;19180:261;;;;19450:397;;19605:2;19600:3;19593:15;19642:66;19637:2;19632:3;19628:12;19621:88;19743:66;19738:2;19733:3;19729:12;19722:88;19838:2;19833:3;19829:12;19822:19;;19586:261;;;;19856:296;;20011:2;20006:3;19999:15;20048:66;20043:2;20038:3;20034:12;20027:88;20143:2;20138:3;20134:12;20127:19;;19992:160;;;;20161:397;;20316:2;20311:3;20304:15;20353:66;20348:2;20343:3;20339:12;20332:88;20454:66;20449:2;20444:3;20440:12;20433:88;20549:2;20544:3;20540:12;20533:19;;20297:261;;;;20567:397;;20722:2;20717:3;20710:15;20759:66;20754:2;20749:3;20745:12;20738:88;20860:66;20855:2;20850:3;20846:12;20839:88;20955:2;20950:3;20946:12;20939:19;;20703:261;;;;20973:397;;21128:2;21123:3;21116:15;21165:66;21160:2;21155:3;21151:12;21144:88;21266:66;21261:2;21256:3;21252:12;21245:88;21361:2;21356:3;21352:12;21345:19;;21109:261;;;;21379:397;;21534:2;21529:3;21522:15;21571:66;21566:2;21561:3;21557:12;21550:88;21672:66;21667:2;21662:3;21658:12;21651:88;21767:2;21762:3;21758:12;21751:19;;21515:261;;;;21785:397;;21940:2;21935:3;21928:15;21977:66;21972:2;21967:3;21963:12;21956:88;22078:66;22073:2;22068:3;22064:12;22057:88;22173:2;22168:3;22164:12;22157:19;;21921:261;;;;22191:499;;22346:2;22341:3;22334:15;22383:66;22378:2;22373:3;22369:12;22362:88;22484:66;22479:2;22474:3;22470:12;22463:88;22585:66;22580:2;22575:3;22571:12;22564:88;22680:3;22675;22671:13;22664:20;;22327:363;;;;22699:296;;22854:2;22849:3;22842:15;22891:66;22886:2;22881:3;22877:12;22870:88;22986:2;22981:3;22977:12;22970:19;;22835:160;;;;23004:397;;23159:2;23154:3;23147:15;23196:66;23191:2;23186:3;23182:12;23175:88;23297:66;23292:2;23287:3;23283:12;23276:88;23392:2;23387:3;23383:12;23376:19;;23140:261;;;;23410:397;;23565:2;23560:3;23553:15;23602:66;23597:2;23592:3;23588:12;23581:88;23703:66;23698:2;23693:3;23689:12;23682:88;23798:2;23793:3;23789:12;23782:19;;23546:261;;;;23816:397;;23971:2;23966:3;23959:15;24008:66;24003:2;23998:3;23994:12;23987:88;24109:66;24104:2;24099:3;24095:12;24088:88;24204:2;24199:3;24195:12;24188:19;;23952:261;;;;24222:397;;24377:2;24372:3;24365:15;24414:66;24409:2;24404:3;24400:12;24393:88;24515:66;24510:2;24505:3;24501:12;24494:88;24610:2;24605:3;24601:12;24594:19;;24358:261;;;;24628:397;;24783:2;24778:3;24771:15;24820:66;24815:2;24810:3;24806:12;24799:88;24921:66;24916:2;24911:3;24907:12;24900:88;25016:2;25011:3;25007:12;25000:19;;24764:261;;;;25034:397;;25189:2;25184:3;25177:15;25226:66;25221:2;25216:3;25212:12;25205:88;25327:66;25322:2;25317:3;25313:12;25306:88;25422:2;25417:3;25413:12;25406:19;;25170:261;;;;25440:397;;25595:2;25590:3;25583:15;25632:66;25627:2;25622:3;25618:12;25611:88;25733:66;25728:2;25723:3;25719:12;25712:88;25828:2;25823:3;25819:12;25812:19;;25576:261;;;;25846:499;;26001:2;25996:3;25989:15;26038:66;26033:2;26028:3;26024:12;26017:88;26139:66;26134:2;26129:3;26125:12;26118:88;26240:66;26235:2;26230:3;26226:12;26219:88;26335:3;26330;26326:13;26319:20;;25982:363;;;;26354:499;;26509:2;26504:3;26497:15;26546:66;26541:2;26536:3;26532:12;26525:88;26647:66;26642:2;26637:3;26633:12;26626:88;26748:66;26743:2;26738:3;26734:12;26727:88;26843:3;26838;26834:13;26827:20;;26490:363;;;;26862:193;;27016:1;27011:3;27004:14;27046:2;27041:3;27037:12;27030:19;;26997:58;;;;27064:397;;27219:2;27214:3;27207:15;27256:66;27251:2;27246:3;27242:12;27235:88;27357:66;27352:2;27347:3;27343:12;27336:88;27452:2;27447:3;27443:12;27436:19;;27200:261;;;;27470:397;;27625:2;27620:3;27613:15;27662:66;27657:2;27652:3;27648:12;27641:88;27763:66;27758:2;27753:3;27749:12;27742:88;27858:2;27853:3;27849:12;27842:19;;27606:261;;;;27876:397;;28031:2;28026:3;28019:15;28068:66;28063:2;28058:3;28054:12;28047:88;28169:66;28164:2;28159:3;28155:12;28148:88;28264:2;28259:3;28255:12;28248:19;;28012:261;;;;28282:397;;28437:2;28432:3;28425:15;28474:66;28469:2;28464:3;28460:12;28453:88;28575:66;28570:2;28565:3;28561:12;28554:88;28670:2;28665:3;28661:12;28654:19;;28418:261;;;;28688:397;;28843:2;28838:3;28831:15;28880:66;28875:2;28870:3;28866:12;28859:88;28981:66;28976:2;28971:3;28967:12;28960:88;29076:2;29071:3;29067:12;29060:19;;28824:261;;;;29094:296;;29249:2;29244:3;29237:15;29286:66;29281:2;29276:3;29272:12;29265:88;29381:2;29376:3;29372:12;29365:19;;29230:160;;;;29399:499;;29554:2;29549:3;29542:15;29591:66;29586:2;29581:3;29577:12;29570:88;29692:66;29687:2;29682:3;29678:12;29671:88;29793:66;29788:2;29783:3;29779:12;29772:88;29888:3;29883;29879:13;29872:20;;29535:363;;;;29907:397;;30062:2;30057:3;30050:15;30099:66;30094:2;30089:3;30085:12;30078:88;30200:66;30195:2;30190:3;30186:12;30179:88;30295:2;30290:3;30286:12;30279:19;;30043:261;;;;30313:397;;30468:2;30463:3;30456:15;30505:66;30500:2;30495:3;30491:12;30484:88;30606:66;30601:2;30596:3;30592:12;30585:88;30701:2;30696:3;30692:12;30685:19;;30449:261;;;;30718:110;30791:31;30816:5;30791:31;;;30786:3;30779:44;30773:55;;;30835:995;;31181:3;31170:9;31166:19;31158:27;;31196:69;31262:1;31251:9;31247:17;31238:6;31196:69;;;31276:62;31334:2;31323:9;31319:18;31310:6;31276:62;;;31386:9;31380:4;31376:20;31371:2;31360:9;31356:18;31349:48;31411:98;31504:4;31495:6;31411:98;;;31403:106;;31557:9;31551:4;31547:20;31542:2;31531:9;31527:18;31520:48;31582:98;31675:4;31666:6;31582:98;;;31574:106;;31729:9;31723:4;31719:20;31713:3;31702:9;31698:19;31691:49;31754:66;31815:4;31806:6;31754:66;;;31746:74;;31152:678;;;;;;;;;31837:699;;32083:3;32072:9;32068:19;32060:27;;32098:69;32164:1;32153:9;32149:17;32140:6;32098:69;;;32178:62;32236:2;32225:9;32221:18;32212:6;32178:62;;;32251;32309:2;32298:9;32294:18;32285:6;32251:62;;;32324;32382:2;32371:9;32367:18;32358:6;32324:62;;;32435:9;32429:4;32425:20;32419:3;32408:9;32404:19;32397:49;32460:66;32521:4;32512:6;32460:66;;;32452:74;;32054:482;;;;;;;;;32543:411;;32715:2;32704:9;32700:18;32692:26;;32729:61;32787:1;32776:9;32772:17;32763:6;32729:61;;;32801:70;32867:2;32856:9;32852:18;32843:6;32801:70;;;32882:62;32940:2;32929:9;32925:18;32916:6;32882:62;;;32686:268;;;;;;;32961:807;;33261:3;33250:9;33246:19;33238:27;;33276:61;33334:1;33323:9;33319:17;33310:6;33276:61;;;33348:70;33414:2;33403:9;33399:18;33390:6;33348:70;;;33429:62;33487:2;33476:9;33472:18;33463:6;33429:62;;;33502;33560:2;33549:9;33545:18;33536:6;33502:62;;;33613:9;33607:4;33603:20;33597:3;33586:9;33582:19;33575:49;33638:120;33753:4;33638:120;;;33630:128;;33232:536;;;;;;;;33775:341;;33933:2;33922:9;33918:18;33910:26;;33983:9;33977:4;33973:20;33969:1;33958:9;33954:17;33947:47;34008:98;34101:4;34092:6;34008:98;;;34000:106;;33904:212;;;;;34123:590;;34359:2;34348:9;34344:18;34336:26;;34409:9;34403:4;34399:20;34395:1;34384:9;34380:17;34373:47;34434:98;34527:4;34518:6;34434:98;;;34426:106;;34580:9;34574:4;34570:20;34565:2;34554:9;34550:18;34543:48;34605:98;34698:4;34689:6;34605:98;;;34597:106;;34330:383;;;;;;34720:181;;34822:2;34811:9;34807:18;34799:26;;34836:55;34888:1;34877:9;34873:17;34864:6;34836:55;;;34793:108;;;;;34908:378;;35062:2;35051:9;35047:18;35039:26;;35076:61;35134:1;35123:9;35119:17;35110:6;35076:61;;;35185:9;35179:4;35175:20;35170:2;35159:9;35155:18;35148:48;35210:66;35271:4;35262:6;35210:66;;;35202:74;;35033:253;;;;;;35293:462;;35465:2;35454:9;35450:18;35442:26;;35515:9;35509:4;35505:20;35501:1;35490:9;35486:17;35479:47;35540:66;35601:4;35592:6;35540:66;;;35532:74;;35654:9;35648:4;35644:20;35639:2;35628:9;35624:18;35617:48;35679:66;35740:4;35731:6;35679:66;;;35671:74;;35436:319;;;;;;35762:387;;35943:2;35932:9;35928:18;35920:26;;35993:9;35987:4;35983:20;35979:1;35968:9;35964:17;35957:47;36018:121;36134:4;36018:121;;;36010:129;;35914:235;;;;36156:387;;36337:2;36326:9;36322:18;36314:26;;36387:9;36381:4;36377:20;36373:1;36362:9;36358:17;36351:47;36412:121;36528:4;36412:121;;;36404:129;;36308:235;;;;36550:387;;36731:2;36720:9;36716:18;36708:26;;36781:9;36775:4;36771:20;36767:1;36756:9;36752:17;36745:47;36806:121;36922:4;36806:121;;;36798:129;;36702:235;;;;36944:387;;37125:2;37114:9;37110:18;37102:26;;37175:9;37169:4;37165:20;37161:1;37150:9;37146:17;37139:47;37200:121;37316:4;37200:121;;;37192:129;;37096:235;;;;37338:387;;37519:2;37508:9;37504:18;37496:26;;37569:9;37563:4;37559:20;37555:1;37544:9;37540:17;37533:47;37594:121;37710:4;37594:121;;;37586:129;;37490:235;;;;37732:387;;37913:2;37902:9;37898:18;37890:26;;37963:9;37957:4;37953:20;37949:1;37938:9;37934:17;37927:47;37988:121;38104:4;37988:121;;;37980:129;;37884:235;;;;38126:387;;38307:2;38296:9;38292:18;38284:26;;38357:9;38351:4;38347:20;38343:1;38332:9;38328:17;38321:47;38382:121;38498:4;38382:121;;;38374:129;;38278:235;;;;38520:387;;38701:2;38690:9;38686:18;38678:26;;38751:9;38745:4;38741:20;38737:1;38726:9;38722:17;38715:47;38776:121;38892:4;38776:121;;;38768:129;;38672:235;;;;38914:387;;39095:2;39084:9;39080:18;39072:26;;39145:9;39139:4;39135:20;39131:1;39120:9;39116:17;39109:47;39170:121;39286:4;39170:121;;;39162:129;;39066:235;;;;39308:387;;39489:2;39478:9;39474:18;39466:26;;39539:9;39533:4;39529:20;39525:1;39514:9;39510:17;39503:47;39564:121;39680:4;39564:121;;;39556:129;;39460:235;;;;39702:387;;39883:2;39872:9;39868:18;39860:26;;39933:9;39927:4;39923:20;39919:1;39908:9;39904:17;39897:47;39958:121;40074:4;39958:121;;;39950:129;;39854:235;;;;40096:387;;40277:2;40266:9;40262:18;40254:26;;40327:9;40321:4;40317:20;40313:1;40302:9;40298:17;40291:47;40352:121;40468:4;40352:121;;;40344:129;;40248:235;;;;40490:387;;40671:2;40660:9;40656:18;40648:26;;40721:9;40715:4;40711:20;40707:1;40696:9;40692:17;40685:47;40746:121;40862:4;40746:121;;;40738:129;;40642:235;;;;40884:387;;41065:2;41054:9;41050:18;41042:26;;41115:9;41109:4;41105:20;41101:1;41090:9;41086:17;41079:47;41140:121;41256:4;41140:121;;;41132:129;;41036:235;;;;41278:387;;41459:2;41448:9;41444:18;41436:26;;41509:9;41503:4;41499:20;41495:1;41484:9;41480:17;41473:47;41534:121;41650:4;41534:121;;;41526:129;;41430:235;;;;41672:387;;41853:2;41842:9;41838:18;41830:26;;41903:9;41897:4;41893:20;41889:1;41878:9;41874:17;41867:47;41928:121;42044:4;41928:121;;;41920:129;;41824:235;;;;42066:387;;42247:2;42236:9;42232:18;42224:26;;42297:9;42291:4;42287:20;42283:1;42272:9;42268:17;42261:47;42322:121;42438:4;42322:121;;;42314:129;;42218:235;;;;42460:387;;42641:2;42630:9;42626:18;42618:26;;42691:9;42685:4;42681:20;42677:1;42666:9;42662:17;42655:47;42716:121;42832:4;42716:121;;;42708:129;;42612:235;;;;42854:387;;43035:2;43024:9;43020:18;43012:26;;43085:9;43079:4;43075:20;43071:1;43060:9;43056:17;43049:47;43110:121;43226:4;43110:121;;;43102:129;;43006:235;;;;43248:387;;43429:2;43418:9;43414:18;43406:26;;43479:9;43473:4;43469:20;43465:1;43454:9;43450:17;43443:47;43504:121;43620:4;43504:121;;;43496:129;;43400:235;;;;43642:387;;43823:2;43812:9;43808:18;43800:26;;43873:9;43867:4;43863:20;43859:1;43848:9;43844:17;43837:47;43898:121;44014:4;43898:121;;;43890:129;;43794:235;;;;44036:387;;44217:2;44206:9;44202:18;44194:26;;44267:9;44261:4;44257:20;44253:1;44242:9;44238:17;44231:47;44292:121;44408:4;44292:121;;;44284:129;;44188:235;;;;44430:387;;44611:2;44600:9;44596:18;44588:26;;44661:9;44655:4;44651:20;44647:1;44636:9;44632:17;44625:47;44686:121;44802:4;44686:121;;;44678:129;;44582:235;;;;44824:387;;45005:2;44994:9;44990:18;44982:26;;45055:9;45049:4;45045:20;45041:1;45030:9;45026:17;45019:47;45080:121;45196:4;45080:121;;;45072:129;;44976:235;;;;45218:387;;45399:2;45388:9;45384:18;45376:26;;45449:9;45443:4;45439:20;45435:1;45424:9;45420:17;45413:47;45474:121;45590:4;45474:121;;;45466:129;;45370:235;;;;45612:387;;45793:2;45782:9;45778:18;45770:26;;45843:9;45837:4;45833:20;45829:1;45818:9;45814:17;45807:47;45868:121;45984:4;45868:121;;;45860:129;;45764:235;;;;46006:387;;46187:2;46176:9;46172:18;46164:26;;46237:9;46231:4;46227:20;46223:1;46212:9;46208:17;46201:47;46262:121;46378:4;46262:121;;;46254:129;;46158:235;;;;46400:387;;46581:2;46570:9;46566:18;46558:26;;46631:9;46625:4;46621:20;46617:1;46606:9;46602:17;46595:47;46656:121;46772:4;46656:121;;;46648:129;;46552:235;;;;46794:387;;46975:2;46964:9;46960:18;46952:26;;47025:9;47019:4;47015:20;47011:1;47000:9;46996:17;46989:47;47050:121;47166:4;47050:121;;;47042:129;;46946:235;;;;47188:387;;47369:2;47358:9;47354:18;47346:26;;47419:9;47413:4;47409:20;47405:1;47394:9;47390:17;47383:47;47444:121;47560:4;47444:121;;;47436:129;;47340:235;;;;47582:387;;47763:2;47752:9;47748:18;47740:26;;47813:9;47807:4;47803:20;47799:1;47788:9;47784:17;47777:47;47838:121;47954:4;47838:121;;;47830:129;;47734:235;;;;47976:193;;48084:2;48073:9;48069:18;48061:26;;48098:61;48156:1;48145:9;48141:17;48132:6;48098:61;;;48055:114;;;;;48176:294;;48312:2;48301:9;48297:18;48289:26;;48326:61;48384:1;48373:9;48369:17;48360:6;48326:61;;;48398:62;48456:2;48445:9;48441:18;48432:6;48398:62;;;48283:187;;;;;;48477:256;;48539:2;48533:9;48523:19;;48577:4;48569:6;48565:17;48676:6;48664:10;48661:22;48640:18;48628:10;48625:34;48622:62;48619:2;;;48697:1;48694;48687:12;48619:2;48717:10;48713:2;48706:22;48517:216;;;;;48740:258;;48899:18;48891:6;48888:30;48885:2;;;48931:1;48928;48921:12;48885:2;48960:4;48952:6;48948:17;48940:25;;48988:4;48982;48978:15;48970:23;;48822:176;;;;49005:254;;49144:18;49136:6;49133:30;49130:2;;;49176:1;49173;49166:12;49130:2;49220:4;49216:9;49209:4;49201:6;49197:17;49193:33;49185:41;;49249:4;49243;49239:15;49231:23;;49067:192;;;;49266:258;;49409:18;49401:6;49398:30;49395:2;;;49441:1;49438;49431:12;49395:2;49485:4;49481:9;49474:4;49466:6;49462:17;49458:33;49450:41;;49514:4;49508;49504:15;49496:23;;49332:192;;;;49533:121;;49642:4;49634:6;49630:17;49619:28;;49611:43;;;;49663:107;;49759:5;49753:12;49743:22;;49737:33;;;;49777:91;;49857:5;49851:12;49841:22;;49835:33;;;;49876:122;;49987:4;49979:6;49975:17;49964:28;;49957:41;;;;50006:105;;50075:31;50100:5;50075:31;;;50064:42;;50058:53;;;;50118:92;;50198:5;50191:13;50184:21;50173:32;;50167:43;;;;50217:79;;50286:5;50275:16;;50269:27;;;;50303:128;;50383:42;50376:5;50372:54;50361:65;;50355:76;;;;50438:79;;50507:5;50496:16;;50490:27;;;;50524:105;;50593:31;50618:5;50593:31;;;50582:42;;50576:53;;;;50636:113;;50713:31;50738:5;50713:31;;;50702:42;;50696:53;;;;50756:92;;50836:5;50829:13;50822:21;50811:32;;50805:43;;;;50855:151;;50934:66;50927:5;50923:78;50912:89;;50906:100;;;;51013:79;;51082:5;51071:16;;51065:27;;;;51099:129;;51186:37;51217:5;51186:37;;;51173:50;;51167:61;;;;51235:121;;51314:37;51345:5;51314:37;;;51301:50;;51295:61;;;;51363:115;;51442:31;51467:5;51442:31;;;51429:44;;51423:55;;;;51486:145;51567:6;51562:3;51557;51544:30;51623:1;51614:6;51609:3;51605:16;51598:27;51537:94;;;;51640:268;51705:1;51712:101;51726:6;51723:1;51720:13;51712:101;;;51802:1;51797:3;51793:11;51787:18;51783:1;51778:3;51774:11;51767:39;51748:2;51745:1;51741:10;51736:15;;51712:101;;;51828:6;51825:1;51822:13;51819:2;;;51893:1;51884:6;51879:3;51875:16;51868:27;51819:2;51689:219;;;;;51916:97;;52004:2;52000:7;51995:2;51988:5;51984:14;51980:28;51970:38;;51964:49;;;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"../tokens/ERC1155PackedBalance/ERC1155MetaPackedBalance.sol\";\nimport \"../tokens/ERC1155PackedBalance/ERC1155MintBurnPackedBalance.sol\";\n\n\ncontract ERC1155MetaMintBurnPackedBalanceMock is ERC1155MetaPackedBalance, ERC1155MintBurnPackedBalance {\n\n  constructor() public { }\n\n  // ---- Minting functions\n\n  /**\n   * @dev Mint _value of tokens of a given id \n   * @param _to The address to mint tokens to.\n   * @param _id token id to mint\n   * @param _value The amount to be minted\n   */\n  function mintMock(address _to, uint256 _id, uint256 _value) \n    public \n  {\n    super._mint(_to, _id, _value);\n  }\n\n  /**\n   * @dev Mint tokens for each ids in _ids\n   * @param _to The address to mint tokens to.\n   * @param _ids Array of ids to mint\n   * @param _values Array of amount of tokens to mint per id\n   */\n  function batchMintMock(address _to, uint256[] memory _ids, uint256[] memory _values) \n    public \n  {\n    super._batchMint(_to, _ids, _values);\n  }\n\n  // ---- Burning functions \n\n  /**\n   * @dev burn _value of tokens of a given token id \n   * @param _from The address to burn tokens from.\n   * @param _id token id to burn\n   * @param _value The amount to be burned\n   */\n  function burnMock(address _from, uint256 _id, uint256 _value) \n    public\n  { \n    super._burn(_from, _id, _value);\n  }\n\n  /**\n   * @dev burn _value of tokens of a given token id \n   * @param _from The address to burn tokens from.\n   * @param _ids Array of token ids to burn\n   * @param _values Array of the amount to be burned\n   */\n  function batchBurnMock(address _from, uint256[] memory _ids, uint256[] memory _values) \n    public \n  {\n    super._batchBurn(_from, _ids, _values);\n  }\n\n  /***********************************|\n  |       Unsupported Functions       |\n  |__________________________________*/\n\n  function () external {\n    revert('ERC1155MetaMintBurnPackedBalanceMock: INVALID_METHOD');\n  }\n\n}",
  "sourcePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnPackedBalanceMock.sol",
  "ast": {
    "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnPackedBalanceMock.sol",
    "exportedSymbols": {
      "ERC1155MetaMintBurnPackedBalanceMock": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 345,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "id": 346,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:6"
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155PackedBalance/ERC1155MetaPackedBalance.sol",
        "file": "../tokens/ERC1155PackedBalance/ERC1155MetaPackedBalance.sol",
        "id": 347,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 3681,
        "src": "59:69:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155PackedBalance/ERC1155MintBurnPackedBalance.sol",
        "file": "../tokens/ERC1155PackedBalance/ERC1155MintBurnPackedBalance.sol",
        "id": 348,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 3868,
        "src": "129:73:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 349,
              "name": "ERC1155MetaPackedBalance",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3680,
              "src": "254:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MetaPackedBalance_$3680",
                "typeString": "contract ERC1155MetaPackedBalance"
              }
            },
            "id": 350,
            "nodeType": "InheritanceSpecifier",
            "src": "254:24:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 351,
              "name": "ERC1155MintBurnPackedBalance",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3867,
              "src": "280:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MintBurnPackedBalance_$3867",
                "typeString": "contract ERC1155MintBurnPackedBalance"
              }
            },
            "id": 352,
            "nodeType": "InheritanceSpecifier",
            "src": "280:28:6"
          }
        ],
        "contractDependencies": [
          173,
          3680,
          3867,
          4751,
          5709
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441,
          3867,
          3680,
          5709,
          4751,
          173
        ],
        "name": "ERC1155MetaMintBurnPackedBalanceMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "335:3:6",
              "statements": []
            },
            "documentation": null,
            "id": 356,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:6"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:6"
            },
            "scope": 441,
            "src": "314:24:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "628:40:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 368,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "646:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "651:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "656:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5772,
                        "src": "634:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnPackedBalanceMock_$441",
                          "typeString": "contract super ERC1155MetaMintBurnPackedBalanceMock"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3715,
                      "src": "634:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "634:29:6"
                }
              ]
            },
            "documentation": "@dev Mint _value of tokens of a given id \n@param _to The address to mint tokens to.\n@param _id token id to mint\n@param _value The amount to be minted",
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "571:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 360,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "584:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "597:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "570:42:6"
            },
            "returnParameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:6"
            },
            "scope": 441,
            "src": "553:115:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "973:47:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "996:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "1001:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 390,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "1007:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 385,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5772,
                        "src": "979:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnPackedBalanceMock_$441",
                          "typeString": "contract super ERC1155MetaMintBurnPackedBalanceMock"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3776,
                      "src": "979:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "979:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "979:36:6"
                }
              ]
            },
            "documentation": "@dev Mint tokens for each ids in _ids\n@param _to The address to mint tokens to.\n@param _ids Array of ids to mint\n@param _values Array of amount of tokens to mint per id",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "896:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "909:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 377,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "909:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 378,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "909:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "932:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 380,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "932:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 381,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "932:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "895:62:6"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:0:6"
            },
            "scope": 441,
            "src": "873:147:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "1322:43:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "1341:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 407,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "1348:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "1353:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5772,
                        "src": "1329:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnPackedBalanceMock_$441",
                          "typeString": "contract super ERC1155MetaMintBurnPackedBalanceMock"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3805,
                      "src": "1329:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:31:6"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id \n@param _from The address to burn tokens from.\n@param _id token id to burn\n@param _value The amount to be burned",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1264:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 398,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1279:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 400,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1292:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1263:44:6"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:6"
            },
            "scope": 441,
            "src": "1246:119:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "1684:49:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "1707:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "1714:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "1720:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5772,
                        "src": "1690:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnPackedBalanceMock_$441",
                          "typeString": "contract super ERC1155MetaMintBurnPackedBalanceMock"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3866,
                      "src": "1690:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:38:6"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id \n@param _from The address to burn tokens from.\n@param _ids Array of token ids to burn\n@param _values Array of the amount to be burned",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchBurnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1605:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1620:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 415,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1620:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 416,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1620:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1643:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 418,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1643:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 419,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1643:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1604:64:6"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1684:0:6"
            },
            "scope": 441,
            "src": "1582:151:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "1879:73:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313135354d6574614d696e744275726e5061636b656442616c616e63654d6f636b3a20494e56414c49445f4d4554484f44",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1892:54:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd3528a478237acd768e367188bd6147b1a4b40dbf3a30af8b1cf6e449468a07",
                          "typeString": "literal_string \"ERC1155MetaMintBurnPackedBalanceMock: INVALID_METHOD\""
                        },
                        "value": "ERC1155MetaMintBurnPackedBalanceMock: INVALID_METHOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dd3528a478237acd768e367188bd6147b1a4b40dbf3a30af8b1cf6e449468a07",
                          "typeString": "literal_string \"ERC1155MetaMintBurnPackedBalanceMock: INVALID_METHOD\""
                        }
                      ],
                      "id": 435,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1885:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1885:62:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "1885:62:6"
                }
              ]
            },
            "documentation": "*********************************|\n|       Unsupported Functions       |\n|__________________________________",
            "id": 440,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1867:2:6"
            },
            "returnParameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:6"
            },
            "scope": 441,
            "src": "1858:94:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 442,
        "src": "205:1750:6"
      }
    ],
    "src": "0:1955:6"
  },
  "legacyAST": {
    "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnPackedBalanceMock.sol",
    "exportedSymbols": {
      "ERC1155MetaMintBurnPackedBalanceMock": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 345,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "id": 346,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:6"
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155PackedBalance/ERC1155MetaPackedBalance.sol",
        "file": "../tokens/ERC1155PackedBalance/ERC1155MetaPackedBalance.sol",
        "id": 347,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 3681,
        "src": "59:69:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155PackedBalance/ERC1155MintBurnPackedBalance.sol",
        "file": "../tokens/ERC1155PackedBalance/ERC1155MintBurnPackedBalance.sol",
        "id": 348,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 3868,
        "src": "129:73:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 349,
              "name": "ERC1155MetaPackedBalance",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3680,
              "src": "254:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MetaPackedBalance_$3680",
                "typeString": "contract ERC1155MetaPackedBalance"
              }
            },
            "id": 350,
            "nodeType": "InheritanceSpecifier",
            "src": "254:24:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 351,
              "name": "ERC1155MintBurnPackedBalance",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3867,
              "src": "280:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MintBurnPackedBalance_$3867",
                "typeString": "contract ERC1155MintBurnPackedBalance"
              }
            },
            "id": 352,
            "nodeType": "InheritanceSpecifier",
            "src": "280:28:6"
          }
        ],
        "contractDependencies": [
          173,
          3680,
          3867,
          4751,
          5709
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441,
          3867,
          3680,
          5709,
          4751,
          173
        ],
        "name": "ERC1155MetaMintBurnPackedBalanceMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "335:3:6",
              "statements": []
            },
            "documentation": null,
            "id": 356,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:6"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:6"
            },
            "scope": 441,
            "src": "314:24:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "628:40:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 368,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "646:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "651:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "656:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5772,
                        "src": "634:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnPackedBalanceMock_$441",
                          "typeString": "contract super ERC1155MetaMintBurnPackedBalanceMock"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3715,
                      "src": "634:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "634:29:6"
                }
              ]
            },
            "documentation": "@dev Mint _value of tokens of a given id \n@param _to The address to mint tokens to.\n@param _id token id to mint\n@param _value The amount to be minted",
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "571:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 360,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "584:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "597:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "570:42:6"
            },
            "returnParameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:6"
            },
            "scope": 441,
            "src": "553:115:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "973:47:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "996:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "1001:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 390,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "1007:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 385,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5772,
                        "src": "979:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnPackedBalanceMock_$441",
                          "typeString": "contract super ERC1155MetaMintBurnPackedBalanceMock"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3776,
                      "src": "979:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "979:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "979:36:6"
                }
              ]
            },
            "documentation": "@dev Mint tokens for each ids in _ids\n@param _to The address to mint tokens to.\n@param _ids Array of ids to mint\n@param _values Array of amount of tokens to mint per id",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "896:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "909:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 377,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "909:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 378,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "909:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "932:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 380,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "932:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 381,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "932:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "895:62:6"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:0:6"
            },
            "scope": 441,
            "src": "873:147:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "1322:43:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "1341:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 407,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "1348:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "1353:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5772,
                        "src": "1329:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnPackedBalanceMock_$441",
                          "typeString": "contract super ERC1155MetaMintBurnPackedBalanceMock"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3805,
                      "src": "1329:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:31:6"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id \n@param _from The address to burn tokens from.\n@param _id token id to burn\n@param _value The amount to be burned",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1264:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 398,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1279:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 400,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "1292:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1263:44:6"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:6"
            },
            "scope": 441,
            "src": "1246:119:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "1684:49:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "1707:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "1714:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "1720:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5772,
                        "src": "1690:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnPackedBalanceMock_$441",
                          "typeString": "contract super ERC1155MetaMintBurnPackedBalanceMock"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3866,
                      "src": "1690:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:38:6"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id \n@param _from The address to burn tokens from.\n@param _ids Array of token ids to burn\n@param _values Array of the amount to be burned",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchBurnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1605:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1620:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 415,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1620:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 416,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1620:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1643:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 418,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1643:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 419,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1643:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1604:64:6"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1684:0:6"
            },
            "scope": 441,
            "src": "1582:151:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "1879:73:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313135354d6574614d696e744275726e5061636b656442616c616e63654d6f636b3a20494e56414c49445f4d4554484f44",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1892:54:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd3528a478237acd768e367188bd6147b1a4b40dbf3a30af8b1cf6e449468a07",
                          "typeString": "literal_string \"ERC1155MetaMintBurnPackedBalanceMock: INVALID_METHOD\""
                        },
                        "value": "ERC1155MetaMintBurnPackedBalanceMock: INVALID_METHOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dd3528a478237acd768e367188bd6147b1a4b40dbf3a30af8b1cf6e449468a07",
                          "typeString": "literal_string \"ERC1155MetaMintBurnPackedBalanceMock: INVALID_METHOD\""
                        }
                      ],
                      "id": 435,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1885:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1885:62:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "1885:62:6"
                }
              ]
            },
            "documentation": "*********************************|\n|       Unsupported Functions       |\n|__________________________________",
            "id": 440,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1867:2:6"
            },
            "returnParameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:6"
            },
            "scope": 441,
            "src": "1858:94:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 442,
        "src": "205:1750:6"
      }
    ],
    "src": "0:1955:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-09T12:46:33.242Z",
  "devdoc": {
    "methods": {
      "balanceOf(address,uint256)": {
        "params": {
          "_id": "ID of the Token",
          "_owner": "The address of the token holder"
        },
        "return": "The _owner's balance of the Token type requested"
      },
      "balanceOfBatch(address[],uint256[])": {
        "params": {
          "_ids": "ID of the Tokens",
          "_owners": "The addresses of the token holders"
        },
        "return": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
      },
      "batchBurnMock(address,uint256[],uint256[])": {
        "details": "burn _value of tokens of a given token id ",
        "params": {
          "_from": "The address to burn tokens from.",
          "_ids": "Array of token ids to burn",
          "_values": "Array of the amount to be burned"
        }
      },
      "batchMintMock(address,uint256[],uint256[])": {
        "details": "Mint tokens for each ids in _ids",
        "params": {
          "_ids": "Array of ids to mint",
          "_to": "The address to mint tokens to.",
          "_values": "Array of amount of tokens to mint per id"
        }
      },
      "burnMock(address,uint256,uint256)": {
        "details": "burn _value of tokens of a given token id ",
        "params": {
          "_from": "The address to burn tokens from.",
          "_id": "token id to burn",
          "_value": "The amount to be burned"
        }
      },
      "getIDBinIndex(uint256)": {
        "params": {
          "_id": "Token id"
        },
        "return": "(Bin number, ID\"s index within that bin)"
      },
      "getNonce(address)": {
        "params": {
          "_signer": "Address to query signature nonce for"
        }
      },
      "getValueInBin(uint256,uint256)": {
        "params": {
          "_binAmount": "uint256 containing the balances of IDS_PER_UINT256 ids",
          "_index": "Index at which to retrieve amount"
        },
        "return": "amount at given _index in _bin"
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "_operator": "Address of authorized operator",
          "_owner": "The owner of the Tokens"
        },
        "return": "True if the operator is approved, false if not"
      },
      "isValidSignature(address,bytes,bytes)": {
        "details": "Verifies that a hash has been signed by the given signer.",
        "params": {
          "_data": "Data structure that was hashed and signed",
          "_sig": "Proof that the hash has been signed by signer.",
          "_signerAddress": "Address that should have signed the given hash.        "
        },
        "return": "True if the address recovered from the provided signature matches the input signer address."
      },
      "metaSetApprovalForAll(address,address,bool,bool,bytes)": {
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_data": "Encodes signature and gas payment receipt  _data should be encoded as ((bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g))  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array",
          "_isGasReimbursed": "Whether gas will be reimbursed or not, with vlid signature",
          "_operator": "Address to add to the set of authorized operators",
          "_owner": "Address that wants to set operator status  _spender"
        }
      },
      "mintMock(address,uint256,uint256)": {
        "details": "Mint _value of tokens of a given id ",
        "params": {
          "_id": "token id to mint",
          "_to": "The address to mint tokens to.",
          "_value": "The amount to be minted"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "params": {
          "_amounts": "Transfer amounts per token type",
          "_data": "Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (bytes4 METATRANSFER_FLAG, (bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g, bytes data))  i.e. high level encoding should be (bytes4, bytes, bytes), where the latter bytes array is a nested bytes array  METATRANSFER_FLAG should be 0xebc71fa5 for meta transfer with gas reimbursement  METATRANSFER_FLAG should be 0x3fed7708 for meta transfer WITHOUT gas reimbursement (and hence without gasReceipt)",
          "_from": "Source addresses",
          "_ids": "IDs of each token type",
          "_to": "Target addresses"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "params": {
          "_amount": "Transfered amount",
          "_data": "Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (bytes4 METATRANSFER_FLAG, (bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g, bytes data))  i.e. high level encoding should be (bytes4, bytes, bytes), where the latter bytes array is a nested bytes array  METATRANSFER_FLAG should be 0xebc71fa5 for meta transfer with gas reimbursement  METATRANSFER_FLAG should be 0x3fed7708 for meta transfer WITHOUT gas reimbursement (and hence without gasReceipt)",
          "_from": "Source address",
          "_id": "ID of the token type",
          "_to": "Target address"
        }
      },
      "setApprovalForAll(address,bool)": {
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_operator": "Address to add to the set of authorized operators"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "return": "`true` if the contract implements `_interfaceID` and"
      },
      "writeValueInBin(uint256,uint256,uint256)": {
        "params": {
          "_amount": "amount to store at _index in _bin",
          "_binAmount": "uint256 containing the balances of IDS_PER_UINT256 ids",
          "_index": "Index at which to retrieve amount"
        },
        "return": "amount at given _index in _bin"
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf(address,uint256)": {
        "notice": "Get the balance of an account's Tokens"
      },
      "balanceOfBatch(address[],uint256[])": {
        "notice": "Get the balance of multiple account/token pairs"
      },
      "getIDBinIndex(uint256)": {
        "notice": "Return the bin number and index within that bin where ID is"
      },
      "getNonce(address)": {
        "notice": "Returns the current nonce associated with a given address"
      },
      "getValueInBin(uint256,uint256)": {
        "notice": "Return amount in _binAmount at position _index"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given owner"
      },
      "metaSetApprovalForAll(address,address,bool,bool,bytes)": {
        "notice": "Approve the passed address to spend on behalf of _from if valid signature is provided"
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "notice": "Allows anyone with a valid signature to transfer multiple types of tokens on the bahalf of _from"
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "notice": "Allows anyone with a valid signature to transfer _amount amount of a token _id on the bahalf of _from"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "writeValueInBin(uint256,uint256,uint256)": {
        "notice": "Return the updated _binAmount after writing _amount at _index"
      }
    }
  }
}