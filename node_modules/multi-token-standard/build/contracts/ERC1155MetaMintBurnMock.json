{
  "contractName": "ERC1155MetaMintBurnMock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owners",
          "type": "address[]"
        },
        {
          "name": "_ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_signerAddress",
          "type": "address"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "isOperator",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        },
        {
          "name": "_isGasReimbursed",
          "type": "bool"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "metaSetApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_uri",
          "type": "string"
        },
        {
          "indexed": true,
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mintMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "batchMintMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "batchBurnMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchMintMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mintMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchBurnMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_signerAddress\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"isOperator\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"},{\"name\":\"_isGasReimbursed\",\"type\":\"bool\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"metaSetApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_uri\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"return\":\"The _owner's balance of the Token type requested\"},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"return\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"},\"batchBurnMock(address,uint256[],uint256[])\":{\"details\":\"burn _value of tokens of a given token id \",\"params\":{\"_from\":\"The address to burn tokens from.\",\"_ids\":\"Array of token ids to burn\",\"_values\":\"Array of the amount to be burned\"}},\"batchMintMock(address,uint256[],uint256[])\":{\"details\":\"Mint tokens for each ids in _ids\",\"params\":{\"_ids\":\"Array of ids to mint\",\"_to\":\"The address to mint tokens to.\",\"_values\":\"Array of amount of tokens to mint per id\"}},\"burnMock(address,uint256,uint256)\":{\"details\":\"burn _value of tokens of a given token id \",\"params\":{\"_from\":\"The address to burn tokens from.\",\"_id\":\"token id to burn\",\"_value\":\"The amount to be burned\"}},\"getNonce(address)\":{\"params\":{\"_signer\":\"Address to query signature nonce for\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"return\":\"True if the operator is approved, false if not\"},\"isValidSignature(address,bytes,bytes)\":{\"details\":\"Verifies that a hash has been signed by the given signer.\",\"params\":{\"_data\":\"Data structure that was hashed and signed\",\"_sig\":\"Proof that the hash has been signed by signer.\",\"_signerAddress\":\"Address that should have signed the given hash.        \"},\"return\":\"True if the address recovered from the provided signature matches the input signer address.\"},\"metaSetApprovalForAll(address,address,bool,bool,bytes)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_data\":\"Encodes signature and gas payment receipt  _data should be encoded as ((bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g))  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array\",\"_isGasReimbursed\":\"Whether gas will be reimbursed or not, with vlid signature\",\"_operator\":\"Address to add to the set of authorized operators\",\"_owner\":\"Address that wants to set operator status  _spender\"}},\"mintMock(address,uint256,uint256)\":{\"details\":\"Mint _value of tokens of a given id \",\"params\":{\"_id\":\"token id to mint\",\"_to\":\"The address to mint tokens to.\",\"_value\":\"The amount to be minted\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (bytes4 METATRANSFER_FLAG, (bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g, bytes data))  i.e. high level encoding should be (bytes4, bytes, bytes), where the latter bytes array is a nested bytes array  METATRANSFER_FLAG should be 0xebc71fa5 for meta transfer with gas reimbursement  METATRANSFER_FLAG should be 0x3fed7708 for meta transfer WITHOUT gas reimbursement (and hence without gasReceipt)\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (bytes4 METATRANSFER_FLAG, (bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g, bytes data))  i.e. high level encoding should be (bytes4, bytes, bytes), where the latter bytes array is a nested bytes array  METATRANSFER_FLAG should be 0xebc71fa5 for meta transfer with gas reimbursement  METATRANSFER_FLAG should be 0x3fed7708 for meta transfer WITHOUT gas reimbursement (and hence without gasReceipt)\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"return\":\"`true` if the contract implements `_interfaceID` and\"},\"uri(uint256)\":{\"details\":\"URIs are defined in RFC 3986.     URIs are assumed to be deterministically generated based on token ID     Token IDs are assumed to be represented in their hex format in URIs \",\"return\":\"URI string\"}}},\"userdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"getNonce(address)\":{\"notice\":\"Returns the current nonce associated with a given address\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"metaSetApprovalForAll(address,address,bool,bool,bytes)\":{\"notice\":\"Approve the passed address to spend on behalf of _from if valid signature is provided\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Allows anyone with a valid signature to transfer multiple types of tokens on the bahalf of _from\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Allows anyone with a valid signature to transfer _amount amount of a token _id on the bahalf of _from\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"uri(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given token.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnMock.sol\":\"ERC1155MetaMintBurnMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x439cac989c2f04c3b296643145b4a3f8a43a54d0fc80cfeef9b076d709b8c0f4\",\"urls\":[\"bzzr://e9990fdda7fc53b63bf696a90c168f862c8a6b5f2a90e7738f33b84c8b9e74d2\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0xcc96af370cd86d4ea716c59b1b7bc6f71df259aa23f6f3300bb496bd4972925d\",\"urls\":[\"bzzr://fa3f4c1893cefb5d317cf505654f4407ee1a6d7dcd118f0d436699d3e7fbc514\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x54d558bbb476b54a299d5fd89447cd6e1575e4efdec67c3d162407b82ed6e547\",\"urls\":[\"bzzr://7bef3b4625d9f986615a8d4b156b7e46f235b9157d0e328d42705467683756dc\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xe67bf738622feabcaef08544e99ad3a2ef20cca5c990d5c7ab3b7dfa81d16bf5\",\"urls\":[\"bzzr://802c9167fbf5a040ea54576ddda72b35d56eda6604b4425d122ad8d860c94c50\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6e8d37f345903d97f47ee9181c2a6264894068b78ed462c54855f5cbd610ca55\",\"urls\":[\"bzzr://e16cd412e8670b0bf1b8461eac456097267d9fa531439b140e11e8a654c85245\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnMock.sol\":{\"keccak256\":\"0x00883a102057d61948bd09bd1f210634f5dde1998a4672efed6e29c90929ee26\",\"urls\":[\"bzzr://7b3e2c33ae5d22f60cc52556ef91c05dfa319f5ba20d7d7f7d234ae83aab742a\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xe843e01d8b154fb90af8f9b0ad7c8fbcb4773f91492780eb73b0ba0594a6df43\",\"urls\":[\"bzzr://58205972c6d9667619a32ce8935e7342afaf47dde874a8a044a8c5762ec9c37c\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol\":{\"keccak256\":\"0x5d3ef450e03410824db3b8316da2e98a1cd57d637b115877eefa09fa53e0142c\",\"urls\":[\"bzzr://9ef33d743977208e15175cf8a95e5edf2c703b112059c34e0a8bab4f8d754864\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Metadata.sol\":{\"keccak256\":\"0xa74b6c4912725c41d0c22185e561e586afce0958a2cab082474cce7459c98f6b\",\"urls\":[\"bzzr://060c392655c57c80f546a625358a220adff3ccf6d471310c4a3696e73f2045ac\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol\":{\"keccak256\":\"0xa4705c662e715b1849c5f87b5cc8126015e5ce3636072359d4398da6d3b8c054\",\"urls\":[\"bzzr://f69aab3467e4f0776dcbbde8b322ae21aa130649f7b0a2e1df16dd1e7b27627d\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/utils/Address.sol\":{\"keccak256\":\"0xff191c897966205716a8c184f8a1fc47b32c7c8102d5da6198fc7bce74039939\",\"urls\":[\"bzzr://a1ab329b64605dfd8bd4bca90bca8da859d065f895d5e70d2de98804db3baa3f\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xc75733200e02eb7f30a81f0c7deacea7e9d8c54776e48f4167b85fd324b7d88f\",\"urls\":[\"bzzr://e73fc3248927638bf9c6ee585c1e79a3e8f445fcb955d9008c9906b87d08d774\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x91f2a078aa0157749e3de6ae60b36539cb87e92c24caa5e6796a612780ba4227\",\"urls\":[\"bzzr://bb8ccf5c74d03bb73df1e596317554199a852530d026cea909acfe84c75307c1\"]},\"/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0xe27603fb6f9e6058d6090658fdcc282e892c59984b77cc62e59e1ae673233d07\",\"urls\":[\"bzzr://e92374c211de4f3b92468e962ee5eca24f5180df0a41c45a742d4d79c407f31a\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100da576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062fdd58e1461012257806301ffc9a71461015f578063028f2ff21461019c5780630e89341c146101c55780632d0335ab146102025780632eb2c2d61461023f578063437ecbe9146102685780634523ac0a146102915780634e1273f4146102ba578063a22cb465146102f7578063bd7a6c4114610320578063c7205bce14610349578063e985e9c514610386578063f242432a146103c3578063f5d4c820146103ec575b3480156100e657600080fd5b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610119906152d2565b60405180910390fd5b34801561012e57600080fd5b5061014960048036036101449190810190614029565b610415565b60405161015691906154b2565b60405180910390f35b34801561016b57600080fd5b5061018660048036036101819190810190614152565b61046f565b604051610193919061506e565b60405180910390f35b3480156101a857600080fd5b506101c360048036036101be9190810190613eef565b610558565b005b3480156101d157600080fd5b506101ec60048036036101e7919081019061433c565b610568565b6040516101f991906150f0565b60405180910390f35b34801561020e57600080fd5b5061022960048036036102249190810190613c48565b61066a565b60405161023691906154b2565b60405180910390f35b34801561024b57600080fd5b5061026660048036036102619190810190613d12565b6106b3565b005b34801561027457600080fd5b5061028f600480360361028a9190810190614065565b610934565b005b34801561029d57600080fd5b506102b860048036036102b39190810190614065565b610944565b005b3480156102c657600080fd5b506102e160048036036102dc91908101906140b4565b610954565b6040516102ee9190615015565b60405180910390f35b34801561030357600080fd5b5061031e60048036036103199190810190613f6e565b610aac565b005b34801561032c57600080fd5b5061034760048036036103429190810190613eef565b610ba9565b005b34801561035557600080fd5b50610370600480360361036b9190810190613faa565b610bb9565b60405161037d919061506e565b60405180910390f35b34801561039257600080fd5b506103ad60048036036103a89190810190613cd6565b6113ec565b6040516103ba919061506e565b60405180910390f35b3480156103cf57600080fd5b506103ea60048036036103e59190810190613e60565b611480565b005b3480156103f857600080fd5b50610413600480360361040e9190810190613dd1565b611701565b005b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60006301ffc9a77c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610540575063d9b67a267c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561054e5760019050610553565b600090505b919050565b610563838383611862565b505050565b6060600361057583611a49565b60405160200180838054600181600116156101000203166002900480156105d35780601f106105b15761010080835404028352918201916105d3565b820191906000526020600020905b8154815290600101906020018083116105bf575b505082805190602001908083835b60208310151561060657805182526020820191506020810190506020830392506105e1565b6001836020036101000a038019825116818451168082178552505050505050905001807f2e6a736f6e000000000000000000000000000000000000000000000000000000815250600501925050506040516020818303038152906040529050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c906151b2565b60405180910390fd5b60005a9050600482511015610746576107418686868686611ba8565b61092c565b600061075c600084611d2f90919063ffffffff16565b905063ebc71fa57c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580156108305750633fed77087c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15610847576108428787878787611ba8565b61092a565b6060806108526138f9565b63ebc71fa57c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610909576108c88a8a8a8a8a611db4565b9250828060200190516108de91908101906142d0565b81915080905080935081925050506108f98a8a8a8a8661207a565b6109048a86836124da565b610926565b6109168a8a8a8a8a611db4565b91506109258a8a8a8a8661207a565b5b5050505b505b505050505050565b61093f838383612872565b505050565b61094f8383836129ab565b505050565b606082829050858590501415156109a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610997906152f2565b60405180910390fd5b6060858590506040519080825280602002602001820160405280156109d45781602001602082028038833980820191505090505b50905060008090505b86869050811015610a9f5760008088888481811015156109f957fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008686848181101515610a6057fe5b905060200201358152602001908152602001600020548282815181101515610a8457fe5b906020019060200201818152505080806001019150506109dd565b5080915050949350505050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b9d919061506e565b60405180910390a35050565b610bb4838383612ae4565b505050565b6000808251111515610c00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf790615392565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6990615332565b60405180910390fd5b6000838051906020012090506000610c8984612ccb565b7f010000000000000000000000000000000000000000000000000000000000000090049050600580811115610cba57fe5b60ff168160ff16101515610d03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfa906151f2565b60405180910390fd5b60008160ff166005811115610d1457fe5b905060008060008060006005811115610d2957fe5b856005811115610d3557fe5b1415610d76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6d90615232565b60405180910390fd5b60016005811115610d8357fe5b856005811115610d8f57fe5b1415610f2f5760418951141515610ddb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd290615452565b60405180910390fd5b610def60008a612d8290919063ffffffff16565b9250610e0560208a612d8290919063ffffffff16565b9150886040815181101515610e1657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004935060018785858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610ee3573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16149750879750505050505050506113e5565b60026005811115610f3c57fe5b856005811115610f4857fe5b14156111365760418951141515610f94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8b90615452565b60405180910390fd5b610fa860008a612d8290919063ffffffff16565b9250610fbe60208a612d8290919063ffffffff16565b9150886040815181101515610fcf57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004935060018760405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c018281526020019150506040516020818303038152906040528051906020012085858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156110ea573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16149750879750505050505050506113e5565b6003600581111561114357fe5b85600581111561114f57fe5b1415611270578a73ffffffffffffffffffffffffffffffffffffffff166320c13b0b8b8b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111ac9291906150b9565b60206040518083038186803b1580156111c457600080fd5b505afa1580156111d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111fc919081019061417b565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166320c13b0b7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149750879750505050505050506113e5565b6004600581111561127d57fe5b85600581111561128957fe5b14156113aa578a73ffffffffffffffffffffffffffffffffffffffff16631626ba7e888b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112e6929190615089565b60206040518083038186803b1580156112fe57600080fd5b505afa158015611312573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611336919081019061417b565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166320c13b0b7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149750879750505050505050506113e5565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dc906151f2565b60405180910390fd5b9392505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156114f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e990615212565b60405180910390fd5b60005a90506004825110156115135761150e8686868686612de2565b6116f9565b6000611529600084611d2f90919063ffffffff16565b905063ebc71fa57c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580156115fd5750633fed77087c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b156116145761160f8787878787612de2565b6116f7565b60608061161f6138f9565b63ebc71fa57c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156116d6576116958a8a8a8a8a612f69565b9250828060200190516116ab91908101906142d0565b81915080905080935081925050506116c68a8a8a8a866131d5565b6116d18a86836124da565b6116f3565b6116e38a8a8a8a8a612f69565b91506116f28a8a8a8a866131d5565b5b5050505b505b505050505050565b60005a905061170e6138f9565b831561174057606061172288888887613542565b905080806020019051611738919081019061428f565b91505061174e565b61174c87878786613542565b505b84600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318760405161183f919061506e565b60405180910390a38315611859576118588783836124da565b5b50505050505050565b805182511415156118a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189f906153b2565b60405180910390fd5b60008251905060008090505b818110156119c35761194c83828151811015156118cd57fe5b906020019060200201516000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878581518110151561192557fe5b906020019060200201518152602001908152602001600020546137c390919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868481518110151561199a57fe5b9060200190602002015181526020019081526020016000208190555080806001019150506118b4565b508373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611a3b929190615037565b60405180910390a450505050565b60606000821415611a91576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611ba3565b6000829050600083905060005b600083141515611ac4578080600101915050600a83811515611abc57fe5b049250611a9e565b6060816040519080825280601f01601f191660200182016040528015611af95781602001600182028038833980820191505090505b50905060006001830390505b600084141515611b9a57600a84811515611b1b57fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515611b5657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84811515611b9257fe5b049350611b05565b81955050505050505b919050565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611c685750600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515611ca9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca090615372565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d1290615292565b60405180910390fd5b611d28858585858561207a565b5050505050565b600060048201835110151515611d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d71906153d2565b60405180910390fd5b6020820191508183015190507fffffffff000000000000000000000000000000000000000000000000000000008116905080905092915050565b60606000606083806020019051611dce91908101906141a4565b8191508090508095508193508294505050506000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506060308a8a8a8a868a604051602001808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401858051906020019060200280838360005b83811015611f23578082015181840152602081019050611f08565b50505050905001848051906020019060200280838360005b83811015611f56578082015181840152602081019050611f3b565b5050505090500183815260200182805190602001908083835b602083101515611f945780518252602082019150602081019050602083039250611f6f565b6001836020036101000a0380198251168184511680821785525050505050509050019750505050505050506040516020818303038152906040529050611fdb8a8285610bb9565b151561201c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201390615272565b60405180910390fd5b6001600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508494505050505095945050505050565b815183511415156120c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b7906151d2565b60405180910390fd5b60008351905060008090505b818110156122d55761216484828151811015156120e557fe5b906020019060200201516000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888581518110151561213d57fe5b9060200190602002015181526020019081526020016000205461381a90919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087848151811015156121b257fe5b9060200190602002015181526020019081526020016000208190555061225e84828151811015156121df57fe5b906020019060200201516000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888581518110151561223757fe5b906020019060200201518152602001908152602001600020546137c390919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087848151811015156122ac57fe5b9060200190602002015181526020019081526020016000208190555080806001019150506120cc565b506122f58573ffffffffffffffffffffffffffffffffffffffff16613872565b156124545760008573ffffffffffffffffffffffffffffffffffffffff1663bc197c8133898888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612359959493929190614ec4565b602060405180830381600087803b15801561237357600080fd5b505af1158015612387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123ab919081019061417b565b905063bc197c817c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515612452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244990615472565b60405180910390fd5b505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516124ca929190615037565b60405180910390a4505050505050565b60006124e98260800151612ccb565b7f01000000000000000000000000000000000000000000000000000000000000009004905060028081111561251a57fe5b60ff168160ff16101515612563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255a90615492565b60405180910390fd5b60008160ff16600281111561257457fe5b905060008060008060006125a788602001516125995a8c61381a90919063ffffffff16565b6137c390919063ffffffff16565b9250876000015183116125d0576125cb88604001518461388590919063ffffffff16565b6125ec565b6125eb8860400151896000015161388590919063ffffffff16565b5b9050600073ffffffffffffffffffffffffffffffffffffffff16886060015173ffffffffffffffffffffffffffffffffffffffff1614612630578760600151612632565b325b93506000600281111561264157fe5b86600281111561264d57fe5b141561275f57876080015180602001905161266b9190810190613c9a565b81915080935081965050503073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156126cc576126c78a85848460206040519081016040528060008152506131d5565b61275a565b8473ffffffffffffffffffffffffffffffffffffffff1663f242432a8b8685856040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127279493929190614fbd565b600060405180830381600087803b15801561274157600080fd5b505af1158015612755573d6000803e3d6000fd5b505050505b612866565b87608001518060200190516127779190810190613c71565b94508473ffffffffffffffffffffffffffffffffffffffff166323b872dd8b86846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127d293929190614f86565b602060405180830381600087803b1580156127ec57600080fd5b505af1158015612800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128249190810190614129565b1515612865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161285c90615312565b60405180910390fd5b5b50505050505050505050565b6128d4816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205461381a90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161299e9291906154cd565b60405180910390a4505050565b612a0d816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020546137c390919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051612ad79291906154cd565b60405180910390a4505050565b80518251141515612b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b21906152b2565b60405180910390fd5b60008251905060008090505b81811015612c4557612bce8382815181101515612b4f57fe5b906020019060200201516000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008785815181101515612ba757fe5b9060200190602002015181526020019081526020016000205461381a90919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008684815181101515612c1c57fe5b906020019060200201518152602001908152602001600020819055508080600101915050612b36565b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051612cbd929190615037565b60405180910390a450505050565b6000808251111515612d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d0990615152565b60405180910390fd5b816001835103815181101515612d2457fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000029050600182510380835250809050919050565b600060208201835110151515612dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dc490615412565b60405180910390fd5b60208201915081830151905080905092915050565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612ea25750600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515612ee3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612eda90615172565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515612f55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f4c90615112565b60405180910390fd5b612f6285858585856131d5565b5050505050565b60606000606083806020019051612f8391908101906141a4565b8191508090508095508193508294505050506000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506060308a8a8a8a868a604051602001808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140185815260200184815260200183815260200182805190602001908083835b6020831015156130ef57805182526020820191506020810190506020830392506130ca565b6001836020036101000a03801982511681845116808217855250505050505090500197505050505050505060405160208183030381529060405290506131368a8285610bb9565b1515613177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161316e90615132565b60405180910390fd5b6001600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508494505050505095945050505050565b613237826000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000205461381a90919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020819055506132ec826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020546137c390919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000208190555061335e8473ffffffffffffffffffffffffffffffffffffffff16613872565b156134bd5760008473ffffffffffffffffffffffffffffffffffffffff1663f23a6e6133888787876040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016133c2959493929190614f2c565b602060405180830381600087803b1580156133dc57600080fd5b505af11580156133f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613414919081019061417b565b905063f23a6e617c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415156134bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134b290615352565b60405180910390fd5b505b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6286866040516135339291906154cd565b60405180910390a45050505050565b606080828060200190516135599190810190614223565b81915080905080935081925050506000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506060308888888588604051602001808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140184151515157f010000000000000000000000000000000000000000000000000000000000000002815260010183815260200182805190602001908083835b6020831015156136e057805182526020820191506020810190506020830392506136bb565b6001836020036101000a03801982511681845116808217855250505050505090500196505050505050506040516020818303038152906040529050613726888285610bb9565b1515613767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161375e906153f2565b60405180910390fd5b6001600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550839350505050949350505050565b6000808284019050838110151515613810576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161380790615432565b60405180910390fd5b8091505092915050565b6000828211151515613861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161385890615192565b60405180910390fd5b600082840390508091505092915050565b600080823b905060008111915050919050565b60008083141561389857600090506138f3565b600082840290508284828115156138ab57fe5b041415156138ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138e590615252565b60405180910390fd5b809150505b92915050565b60a060405190810160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600061394b8235615630565b905092915050565b600061395f8251615642565b905092915050565b60008083601f840112151561397b57600080fd5b8235905067ffffffffffffffff81111561399457600080fd5b6020830191508360208202830111156139ac57600080fd5b9250929050565b60008083601f84011215156139c757600080fd5b8235905067ffffffffffffffff8111156139e057600080fd5b6020830191508360208202830111156139f857600080fd5b9250929050565b600082601f8301121515613a1257600080fd5b8135613a25613a2082615523565b6154f6565b91508181835260208401935060208101905083856020840282011115613a4a57600080fd5b60005b83811015613a7a5781613a608882613c20565b845260208401935060208301925050600181019050613a4d565b5050505092915050565b6000613a908235615654565b905092915050565b6000613aa48251615654565b905092915050565b6000613ab88235615660565b905092915050565b6000613acc8251615660565b905092915050565b600082601f8301121515613ae757600080fd5b8151613afa613af58261554b565b6154f6565b91508082526020830160208301858383011115613b1657600080fd5b613b218382846156db565b50505092915050565b600082601f8301121515613b3d57600080fd5b8135613b50613b4b82615577565b6154f6565b91508082526020830160208301858383011115613b6c57600080fd5b613b778382846156cc565b50505092915050565b600060a08284031215613b9257600080fd5b613b9c60a06154f6565b90506000613bac84828501613c34565b6000830152506020613bc084828501613c34565b6020830152506040613bd484828501613c34565b6040830152506060613be884828501613953565b606083015250608082015167ffffffffffffffff811115613c0857600080fd5b613c1484828501613ad4565b60808301525092915050565b6000613c2c823561568c565b905092915050565b6000613c40825161568c565b905092915050565b600060208284031215613c5a57600080fd5b6000613c688482850161393f565b91505092915050565b600060208284031215613c8357600080fd5b6000613c9184828501613953565b91505092915050565b60008060408385031215613cad57600080fd5b6000613cbb85828601613953565b9250506020613ccc85828601613c34565b9150509250929050565b60008060408385031215613ce957600080fd5b6000613cf78582860161393f565b9250506020613d088582860161393f565b9150509250929050565b600080600080600060a08688031215613d2a57600080fd5b6000613d388882890161393f565b9550506020613d498882890161393f565b945050604086013567ffffffffffffffff811115613d6657600080fd5b613d72888289016139ff565b935050606086013567ffffffffffffffff811115613d8f57600080fd5b613d9b888289016139ff565b925050608086013567ffffffffffffffff811115613db857600080fd5b613dc488828901613b2a565b9150509295509295909350565b600080600080600060a08688031215613de957600080fd5b6000613df78882890161393f565b9550506020613e088882890161393f565b9450506040613e1988828901613a84565b9350506060613e2a88828901613a84565b925050608086013567ffffffffffffffff811115613e4757600080fd5b613e5388828901613b2a565b9150509295509295909350565b600080600080600060a08688031215613e7857600080fd5b6000613e868882890161393f565b9550506020613e978882890161393f565b9450506040613ea888828901613c20565b9350506060613eb988828901613c20565b925050608086013567ffffffffffffffff811115613ed657600080fd5b613ee288828901613b2a565b9150509295509295909350565b600080600060608486031215613f0457600080fd5b6000613f128682870161393f565b935050602084013567ffffffffffffffff811115613f2f57600080fd5b613f3b868287016139ff565b925050604084013567ffffffffffffffff811115613f5857600080fd5b613f64868287016139ff565b9150509250925092565b60008060408385031215613f8157600080fd5b6000613f8f8582860161393f565b9250506020613fa085828601613a84565b9150509250929050565b600080600060608486031215613fbf57600080fd5b6000613fcd8682870161393f565b935050602084013567ffffffffffffffff811115613fea57600080fd5b613ff686828701613b2a565b925050604084013567ffffffffffffffff81111561401357600080fd5b61401f86828701613b2a565b9150509250925092565b6000806040838503121561403c57600080fd5b600061404a8582860161393f565b925050602061405b85828601613c20565b9150509250929050565b60008060006060848603121561407a57600080fd5b60006140888682870161393f565b935050602061409986828701613c20565b92505060406140aa86828701613c20565b9150509250925092565b600080600080604085870312156140ca57600080fd5b600085013567ffffffffffffffff8111156140e457600080fd5b6140f087828801613967565b9450945050602085013567ffffffffffffffff81111561410f57600080fd5b61411b878288016139b3565b925092505092959194509250565b60006020828403121561413b57600080fd5b600061414984828501613a98565b91505092915050565b60006020828403121561416457600080fd5b600061417284828501613aac565b91505092915050565b60006020828403121561418d57600080fd5b600061419b84828501613ac0565b91505092915050565b6000806000606084860312156141b957600080fd5b60006141c786828701613ac0565b935050602084015167ffffffffffffffff8111156141e457600080fd5b6141f086828701613ad4565b925050604084015167ffffffffffffffff81111561420d57600080fd5b61421986828701613ad4565b9150509250925092565b6000806040838503121561423657600080fd5b600083015167ffffffffffffffff81111561425057600080fd5b61425c85828601613ad4565b925050602083015167ffffffffffffffff81111561427957600080fd5b61428585828601613ad4565b9150509250929050565b6000602082840312156142a157600080fd5b600082015167ffffffffffffffff8111156142bb57600080fd5b6142c784828501613b80565b91505092915050565b600080604083850312156142e357600080fd5b600083015167ffffffffffffffff8111156142fd57600080fd5b61430985828601613b80565b925050602083015167ffffffffffffffff81111561432657600080fd5b61433285828601613ad4565b9150509250929050565b60006020828403121561434e57600080fd5b600061435c84828501613c20565b91505092915050565b61436e81615696565b82525050565b61437d816155de565b82525050565b600061438e826155b0565b8084526020840193506143a0836155a3565b60005b828110156143d2576143b6868351614eb5565b6143bf826155d1565b91506020860195506001810190506143a3565b50849250505092915050565b6143e7816155f0565b82525050565b6143f6816155fc565b82525050565b6000614407826155bb565b80845261441b8160208601602086016156db565b6144248161570e565b602085010191505092915050565b600061443d826155c6565b8084526144518160208601602086016156db565b61445a8161570e565b602085010191505092915050565b6000602b82527f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960208301527f445f524543495049454e540000000000000000000000000000000000000000006040830152606082019050919050565b6000603982527f455243313135354d657461235f76616c69646174655472616e7366657253696760208301527f6e61747572653a20494e56414c49445f5349474e4154555245000000000000006040830152606082019050919050565b6000603782527f4c6962427974657323706f704c617374427974653a20475245415445525f544860208301527f414e5f5a45524f5f4c454e4754485f52455155495245440000000000000000006040830152606082019050919050565b6000602a82527f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960208301527f445f4f50455241544f52000000000000000000000000000000000000000000006040830152606082019050919050565b6000601782527f536166654d617468237375623a20554e444552464c4f570000000000000000006020830152604082019050919050565b6000603482527f455243313135354d657461237361666542617463685472616e7366657246726f60208301527f6d3a20494e56414c49445f524543495049454e540000000000000000000000006040830152606082019050919050565b6000603582527f45524331313535235f7361666542617463685472616e7366657246726f6d3a2060208301527f494e56414c49445f4152524159535f4c454e47544800000000000000000000006040830152606082019050919050565b6000603a82527f5369676e617475726556616c696461746f7223697356616c69645369676e617460208301527f7572653a20554e535550504f525445445f5349474e41545552450000000000006040830152606082019050919050565b6000602f82527f455243313135354d65746123736166655472616e7366657246726f6d3a20494e60208301527f56414c49445f524543495049454e5400000000000000000000000000000000006040830152606082019050919050565b6000603682527f5369676e617475726556616c696461746f7223697356616c69645369676e617460208301527f7572653a20494c4c4547414c5f5349474e4154555245000000000000000000006040830152606082019050919050565b6000601682527f536166654d617468236d756c3a204f564552464c4f57000000000000000000006020830152604082019050919050565b6000603e82527f455243313135354d657461235f76616c696461746542617463685472616e736660208301527f65725369676e61747572653a20494e56414c49445f5349474e415455524500006040830152606082019050919050565b6000603082527f45524331313535237361666542617463685472616e7366657246726f6d3a204960208301527f4e56414c49445f524543495049454e54000000000000000000000000000000006040830152606082019050919050565b6000603082527f455243313135354d696e744275726e2362617463684275726e3a20494e56414c60208301527f49445f4152524159535f4c454e475448000000000000000000000000000000006040830152606082019050919050565b6000602782527f455243313135354d6574614d696e744275726e4d6f636b3a20494e56414c494460208301527f5f4d4554484f44000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602c82527f455243313135352362616c616e63654f6642617463683a20494e56414c49445f60208301527f41525241595f4c454e47544800000000000000000000000000000000000000006040830152606082019050919050565b6000603282527f455243313135354d657461235f7472616e736665724761734665653a2045524360208301527f32305f5452414e534645525f4641494c454400000000000000000000000000006040830152606082019050919050565b6000603382527f5369676e617475726556616c696461746f7223697356616c69645369676e617460208301527f7572653a20494e56414c49445f5349474e4552000000000000000000000000006040830152606082019050919050565b6000603582527f45524331313535235f736166655472616e7366657246726f6d3a20494e56414c60208301527f49445f4f4e5f524543454956455f4d45535341474500000000000000000000006040830152606082019050919050565b6000602f82527f45524331313535237361666542617463685472616e7366657246726f6d3a204960208301527f4e56414c49445f4f50455241544f5200000000000000000000000000000000006040830152606082019050919050565b6000604382527f5369676e617475726556616c696461746f7223697356616c69645369676e617460208301527f7572653a204c454e4754485f475245415445525f5448414e5f305f524551554960408301527f52454400000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b6000603082527f455243313135354d696e744275726e2362617463684d696e743a20494e56414c60208301527f49445f4152524159535f4c454e475448000000000000000000000000000000006040830152606082019050919050565b6000808252602082019050919050565b6000603a82527f4c6962427974657323726561644279746573343a20475245415445525f4f525f60208301527f455155414c5f544f5f345f4c454e4754485f52455155495245440000000000006040830152606082019050919050565b6000603982527f455243313135354d657461235f76616c6964617465417070726f76616c53696760208301527f6e61747572653a20494e56414c49445f5349474e4154555245000000000000006040830152606082019050919050565b6000603c82527f4c696242797465732372656164427974657333323a20475245415445525f4f5260208301527f5f455155414c5f544f5f33325f4c454e4754485f5245515549524544000000006040830152606082019050919050565b6000601682527f536166654d617468236164643a204f564552464c4f57000000000000000000006020830152604082019050919050565b6000603782527f5369676e617475726556616c696461746f7223697356616c69645369676e617460208301527f7572653a204c454e4754485f36355f52455155495245440000000000000000006040830152606082019050919050565b6000603a82527f45524331313535235f7361666542617463685472616e7366657246726f6d3a2060208301527f494e56414c49445f4f4e5f524543454956455f4d4553534147450000000000006040830152606082019050919050565b6000602e82527f455243313135354d657461235f7472616e736665724761734665653a20554e5360208301527f5550504f525445445f544f4b454e0000000000000000000000000000000000006040830152606082019050919050565b614ebe81615626565b82525050565b600060a082019050614ed96000830188614365565b614ee66020830187614374565b8181036040830152614ef88186614383565b90508181036060830152614f0c8185614383565b90508181036080830152614f2081846143fc565b90509695505050505050565b600060a082019050614f416000830188614365565b614f4e6020830187614374565b614f5b6040830186614eb5565b614f686060830185614eb5565b8181036080830152614f7a81846143fc565b90509695505050505050565b6000606082019050614f9b6000830186614374565b614fa86020830185614365565b614fb56040830184614eb5565b949350505050565b600060a082019050614fd26000830187614374565b614fdf6020830186614365565b614fec6040830185614eb5565b614ff96060830184614eb5565b818103608083015261500a81614c40565b905095945050505050565b6000602082019050818103600083015261502f8184614383565b905092915050565b600060408201905081810360008301526150518185614383565b905081810360208301526150658184614383565b90509392505050565b600060208201905061508360008301846143de565b92915050565b600060408201905061509e60008301856143ed565b81810360208301526150b081846143fc565b90509392505050565b600060408201905081810360008301526150d381856143fc565b905081810360208301526150e781846143fc565b90509392505050565b6000602082019050818103600083015261510a8184614432565b905092915050565b6000602082019050818103600083015261512b81614468565b9050919050565b6000602082019050818103600083015261514b816144c5565b9050919050565b6000602082019050818103600083015261516b81614522565b9050919050565b6000602082019050818103600083015261518b8161457f565b9050919050565b600060208201905081810360008301526151ab816145dc565b9050919050565b600060208201905081810360008301526151cb81614613565b9050919050565b600060208201905081810360008301526151eb81614670565b9050919050565b6000602082019050818103600083015261520b816146cd565b9050919050565b6000602082019050818103600083015261522b8161472a565b9050919050565b6000602082019050818103600083015261524b81614787565b9050919050565b6000602082019050818103600083015261526b816147e4565b9050919050565b6000602082019050818103600083015261528b8161481b565b9050919050565b600060208201905081810360008301526152ab81614878565b9050919050565b600060208201905081810360008301526152cb816148d5565b9050919050565b600060208201905081810360008301526152eb81614932565b9050919050565b6000602082019050818103600083015261530b8161498f565b9050919050565b6000602082019050818103600083015261532b816149ec565b9050919050565b6000602082019050818103600083015261534b81614a49565b9050919050565b6000602082019050818103600083015261536b81614aa6565b9050919050565b6000602082019050818103600083015261538b81614b03565b9050919050565b600060208201905081810360008301526153ab81614b60565b9050919050565b600060208201905081810360008301526153cb81614be3565b9050919050565b600060208201905081810360008301526153eb81614c50565b9050919050565b6000602082019050818103600083015261540b81614cad565b9050919050565b6000602082019050818103600083015261542b81614d0a565b9050919050565b6000602082019050818103600083015261544b81614d67565b9050919050565b6000602082019050818103600083015261546b81614d9e565b9050919050565b6000602082019050818103600083015261548b81614dfb565b9050919050565b600060208201905081810360008301526154ab81614e58565b9050919050565b60006020820190506154c76000830184614eb5565b92915050565b60006040820190506154e26000830185614eb5565b6154ef6020830184614eb5565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561551957600080fd5b8060405250919050565b600067ffffffffffffffff82111561553a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561556257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561558e57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b60006155e982615606565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061563b82615606565b9050919050565b600061564d82615606565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60006156a1826156a8565b9050919050565b60006156b3826156ba565b9050919050565b60006156c582615606565b9050919050565b82818337600083830152505050565b60005b838110156156f95780820151818401526020810190506156de565b83811115615708576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820ecc7e8fa8f0af5d820b76a09e6e9e983f524a598551406e458d2908c657bea0c6c6578706572696d656e74616cf50037",
  "sourceMap": "201:1714:5:-;;;288:24;8:9:-1;5:2;;;30:1;27;20:12;5:2;288:24:5;201:1714;;;;;;",
  "deployedSourceMap": "201:1714:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;201:1714:5;1859:49;;;;;;;;;;;;;;;;;;;6946:125:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6946:125:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8876:234;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8876:234:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;847:147:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;847:147:5;;;;;;;;;;;;;;;;;;;895:146:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:146:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13387:112:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13387:112:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5598:1522;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5598:1522:13;;;;;;;;;;;;;;;;;;;1220:119:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1220:119:5;;;;;;;;;;;;;;;;;;;527:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;527:115:5;;;;;;;;;;;;;;;;;;;7351:492:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7351:492:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5981:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5981:221:12;;;;;;;;;;;;;;;;;;;1556:151:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1556:151:5;;;;;;;;;;;;;;;;;;;1691:3260:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1691:3260:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6453:153:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6453:153:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:1358:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3353:1358:13;;;;;;;;;;;;;;;;;;;7987:843;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7987:843:13;;;;;;;;;;;;;;;;;;;6946:125:12;7021:7;7045:8;:16;7054:6;7045:16;;;;;;;;;;;;;;;:21;7062:3;7045:21;;;;;;;;;;;;7038:28;;6946:125;;;;:::o;8876:234::-;8947:4;8116:10;8979:26;;8963:42;;;:12;:42;;;;:97;;;;8650:10;9033:27;;9017:43;;;:12;:43;;;;8963:97;8959:129;;;9077:4;9070:11;;;;8959:129;9100:5;9093:12;;8876:234;;;;:::o;847:147:5:-;953:36;970:3;975:4;981:7;953:16;:36::i;:::-;847:147;;;:::o;895:146:14:-;942:13;994:15;1011:14;1021:3;1011:9;:14::i;:::-;977:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;977:58:14;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;977:58:14;;;963:73;;895:146;;;:::o;13387:112:13:-;13449:13;13479:6;:15;13486:7;13479:15;;;;;;;;;;;;;;;;13472:22;;13387:112;;;:::o;5598:1522::-;5771:1;5756:17;;:3;:17;;;;5748:82;;;;;;;;;;;;;;;;;;;;;;;;5864:16;5883:9;5864:28;;5918:1;5903:5;:12;:16;5899:1217;;;5929:62;5957:5;5964:3;5969:4;5975:8;5985:5;5929:27;:62::i;:::-;5899:1217;;;6046:14;6063:19;6080:1;6063:5;:16;;:19;;;;:::i;:::-;6046:36;;2100:10;6154:17;;6143:28;;;:7;:28;;;;;:80;;;;;2338:10;6186:37;;6175:48;;;:7;:48;;;;;6143:80;6139:971;;;6235:62;6263:5;6270:3;6275:4;6281:8;6291:5;6235:27;:62::i;:::-;6139:971;;;6329:23;6362:25;6397:28;;:::i;:::-;2100:10;6493:17;;6482:28;;;:7;:28;;;;6478:624;;;6537:66;6569:5;6576:3;6581:4;6587:8;6597:5;6537:31;:66::i;:::-;6524:79;;6655:10;6644:43;;;;;;;;;;;;;;6615:72;;;;;;;;;;;;;;6729:64;6752:5;6759:3;6764:4;6770:8;6780:12;6729:22;:64::i;:::-;6852:44;6868:5;6875:8;6885:10;6852:15;:44::i;:::-;6478:624;;;6949:66;6981:5;6988:3;6993:4;6999:8;7009:5;6949:31;:66::i;:::-;6934:81;;7027:64;7050:5;7057:3;7062:4;7068:8;7078:12;7027:22;:64::i;:::-;6478:624;6139:971;;;;5899:1217;;5598:1522;;;;;;:::o;1220:119:5:-;1303:31;1315:5;1322:3;1327:6;1303:11;:31::i;:::-;1220:119;;;:::o;527:115::-;608:29;620:3;625;630:6;608:11;:29::i;:::-;527:115;;;:::o;7351:492:12:-;7455:16;7507:4;;:11;;7489:7;;:14;;:29;7481:86;;;;;;;;;;;;;;;;;;;;;;;;7591:30;7638:7;;:14;;7624:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;7624:29:12;;;;7591:62;;7709:9;7721:1;7709:13;;7704:108;7728:7;;:14;;7724:1;:18;7704:108;;;7776:8;:20;7785:7;;7793:1;7785:10;;;;;;;;;;;;;;;;;7776:20;;;;;;;;;;;;;;;:29;7797:4;;7802:1;7797:7;;;;;;;;;;;;;;;7776:29;;;;;;;;;;;;7757:13;7771:1;7757:16;;;;;;;;;;;;;;;;;:48;;;;;7744:3;;;;;;;7704:108;;;;7825:13;7818:20;;;7351:492;;;;;;:::o;5981:221::-;6129:9;6094;:21;6104:10;6094:21;;;;;;;;;;;;;;;:32;6116:9;6094:32;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;6176:9;6149:48;;6164:10;6149:48;;;6187:9;6149:48;;;;;;;;;;;;;;;5981:221;;:::o;1556:151:5:-;1664:38;1681:5;1688:4;1694:7;1664:16;:38::i;:::-;1556:151;;;:::o;1691:3260:23:-;1829:12;1880:1;1866:4;:11;:15;1851:114;;;;;;;;;;;;;;;;;;;;;;;;2013:3;1987:30;;:14;:30;;;;1972:112;;;;;;;;;;;;;;;;;;;;;;;;2196:12;2221:5;2211:16;;;;;;2196:31;;2284:22;2315:18;:4;:16;:18::i;:::-;2309:25;;;2284:50;;2418:29;2412:36;;;;;;;;2393:55;;:16;:55;;;2378:144;;;;;;;;;;;;;;;;;;;;;;;;2559:27;2603:16;2589:31;;;;;;;;;;2559:61;;2672:7;2685:9;2700;2715:17;3058:21;3041:38;;;;;;;;:13;:38;;;;;;;;;3037:1553;;;3089:64;;;;;;;;;;;;;;;;;;;3037:1553;3219:20;3202:37;;;;;;;;:13;:37;;;;;;;;;3198:1392;;;3281:2;3266:4;:11;:17;3249:109;;;;;;;;;;;;;;;;;;;;;;;;3370:19;3387:1;3370:4;:16;;:19;;;;:::i;:::-;3366:23;;3401:20;3418:2;3401:4;:16;;:20;;;;:::i;:::-;3397:24;;3439:4;3444:2;3439:8;;;;;;;;;;;;;;;;;;;;3433:15;;;3429:19;;3468:24;3478:4;3484:1;3487;3490;3468:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3468:24:23;;;;;;;;3456:36;;3528:9;3510:27;;:14;:27;;;3500:37;;3552:7;3545:14;;;;;;;;;;;3198:1392;3629:21;3612:38;;;;;;;;:13;:38;;;;;;;;;3608:982;;;3692:2;3677:4;:11;:17;3660:109;;;;;;;;;;;;;;;;;;;;;;;;3781:19;3798:1;3781:4;:16;;:19;;;;:::i;:::-;3777:23;;3812:20;3829:2;3812:4;:16;;:20;;;;:::i;:::-;3808:24;;3850:4;3855:2;3850:8;;;;;;;;;;;;;;;;;;;;3844:15;;;3840:19;;3879:129;3961:4;3908:58;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3908:58:23;;;3898:69;;;;;;3977:1;3988;3999;3879:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3879:129:23;;;;;;;;3867:141;;4044:9;4026:27;;:14;:27;;;4016:37;;4068:7;4061:14;;;;;;;;;;;3608:982;4178:25;4161:42;;;;;;;;:13;:42;;;;;;;;;4157:433;;;4260:14;4245:47;;;4293:5;4300:4;4245:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4245:60:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4245:60:23;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4245:60:23;;;;;;;;;4223:82;;;714:10;4223:18;;:82;;;;4213:92;;4320:7;4313:14;;;;;;;;;;;4157:433;4433:27;4416:44;;;;;;;;:13;:44;;;;;;;;;4412:178;;;4517:14;4502:47;;;4550:4;4556;4502:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4502:59:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4502:59:23;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4502:59:23;;;;;;;;;4480:81;;;714:10;4480:18;;:81;;;;4470:91;;4576:7;4569:14;;;;;;;;;;;4412:178;4878:68;;;;;;;;;;;;;;;;;;;1691:3260;;;;;;:::o;6453:153:12:-;6541:15;6573:9;:17;6583:6;6573:17;;;;;;;;;;;;;;;:28;6591:9;6573:28;;;;;;;;;;;;;;;;;;;;;;;;;6566:35;;6453:153;;;;:::o;3353:1358:13:-;3499:1;3484:17;;:3;:17;;;;3476:77;;;;;;;;;;;;;;;;;;;;;;;;3587:16;3606:9;3587:28;;3641:1;3626:5;:12;:16;3622:1085;;;3652:55;3675:5;3682:3;3687;3692:7;3701:5;3652:22;:55::i;:::-;3622:1085;;;3762:14;3779:19;3796:1;3779:5;:16;;:19;;;;:::i;:::-;3762:36;;2100:10;3870:17;;3859:28;;;:7;:28;;;;;:80;;;;;2338:10;3902:37;;3891:48;;;:7;:48;;;;;3859:80;3855:846;;;3951:55;3974:5;3981:3;3986;3991:7;4000:5;3951:22;:55::i;:::-;3855:846;;;4032:23;4065:25;4100:28;;:::i;:::-;2100:10;4196:17;;4185:28;;;:7;:28;;;;4181:512;;;4240:59;4267:5;4274:3;4279;4284:7;4293:5;4240:26;:59::i;:::-;4227:72;;4351:10;4340:43;;;;;;;;;;;;;;4311:72;;;;;;;;;;;;;;4396:57;4414:5;4421:3;4426;4431:7;4440:12;4396:17;:57::i;:::-;4465:44;4481:5;4488:8;4498:10;4465:15;:44::i;:::-;4181:512;;;4554:59;4581:5;4588:3;4593;4598:7;4607:5;4554:26;:59::i;:::-;4539:74;;4625:57;4643:5;4650:3;4655;4660:7;4669:12;4625:17;:57::i;:::-;4181:512;3855:846;;;;3622:1085;;3353:1358;;;;;;:::o;7987:843::-;8183:16;8202:9;8183:28;;8217;;:::i;:::-;8291:16;8287:268;;;8317:23;8343:63;8370:6;8378:9;8389;8400:5;8343:26;:63::i;:::-;8317:89;;8438:10;8427:36;;;;;;;;;;;;;;8414:49;;8287:268;;;;8485:63;8512:6;8520:9;8531;8542:5;8485:26;:63::i;:::-;;8287:268;8622:9;8591;:17;8601:6;8591:17;;;;;;;;;;;;;;;:28;8609:9;8591:28;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;8684:9;8661:44;;8676:6;8661:44;;;8695:9;8661:44;;;;;;;;;;;;;;;8748:16;8744:82;;;8774:45;8790:6;8798:8;8808:10;8774:15;:45::i;:::-;8744:82;7987:843;;;;;;;:::o;1097:554:15:-;1226:8;:15;1211:4;:11;:30;1203:91;;;;;;;;;;;;;;;;;;;;;;;;1335:13;1351:4;:11;1335:27;;1404:9;1416:1;1404:13;;1399:147;1423:5;1419:1;:9;1399:147;;;1500:39;1527:8;1536:1;1527:11;;;;;;;;;;;;;;;;;;1500:8;:13;1509:3;1500:13;;;;;;;;;;;;;;;:22;1514:4;1519:1;1514:7;;;;;;;;;;;;;;;;;;1500:22;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;1475:8;:13;1484:3;1475:13;;;;;;;;;;;;;;;:22;1489:4;1494:1;1489:7;;;;;;;;;;;;;;;;;;1475:22;;;;;;;;;;;:64;;;;1430:3;;;;;;;1399:147;;;;1626:3;1586:60;;1620:3;1586:60;;1600:10;1586:60;;;1631:4;1637:8;1586:60;;;;;;;;;;;;;;;;1097:554;;;;:::o;2617:517:14:-;2671:27;2716:1;2710:2;:7;2706:38;;;2727:10;;;;;;;;;;;;;;;;;;;;;;2706:38;2750:9;2762:2;2750:14;;2770:10;2783:2;2770:15;;2791:11;2840:50;2852:1;2847;:6;;2840:50;;;2863:5;;;;;;;2881:2;2876:7;;;;;;;;;;;2840:50;;;2896:17;2926:3;2916:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;2916:14:14;;;;2896:34;;2936:9;2954:1;2948:3;:7;2936:19;;2995:84;3008:1;3002:2;:7;;2995:84;;;3052:2;3047;:7;;;;;;;;3042:2;:12;3031:25;;3019:4;3024:3;;;;;;;3019:9;;;;;;;;;;;;;;:37;;;;;;;;;;;3070:2;3064:8;;;;;;;;;;;2995:84;;;3124:4;3110:19;;;;;;;2617:517;;;;:::o;2635:434:12:-;2826:5;2812:19;;:10;:19;;;2811:53;;;;2836:9;:16;2846:5;2836:16;;;;;;;;;;;;;;;:28;2853:10;2836:28;;;;;;;;;;;;;;;;;;;;;;;;;2811:53;2803:113;;;;;;;;;;;;;;;;;;;;;;;;2945:1;2930:17;;:3;:17;;;;2922:78;;;;;;;;;;;;;;;;;;;;;;;;3007:57;3030:5;3037:3;3042:4;3048:8;3058:5;3007:22;:57::i;:::-;2635:434;;;;;:::o;13884:614:20:-;13982:13;14040:1;14032:5;:9;14020:1;:8;:21;;14005:110;;;;;;;;;;;;;;;;;;;;;;;;14184:2;14175:11;;;;14274:5;14271:1;14267:13;14261:20;14251:30;;14402:66;14394:6;14390:79;14380:89;;14487:6;14480:13;;13884:614;;;;:::o;11046:821:13:-;11230:23;11264:10;11280:16;11377:5;11366:41;;;;;;;;;;;;;;11341:66;;;;;;;;;;;;;;;;;;11460:13;11476:6;:13;11483:5;11476:13;;;;;;;;;;;;;;;;11460:29;;11533:17;11578:4;11585:5;11592:3;11597:4;11603:8;11613:5;11620:10;11553:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11553:78:13;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11553:78:13;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;11553:78:13;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11553:78:13;;;11533:98;;11683:34;11700:5;11707:4;11713:3;11683:16;:34::i;:::-;11675:109;;;;;;;;;;;;;;;;;;;;;;;;11837:1;11820:6;:13;11827:5;11820:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;11852:10;11845:17;;;;;;11046:821;;;;;;;:::o;4601:983:12:-;4775:8;:15;4760:4;:11;:30;4752:96;;;;;;;;;;;;;;;;;;;;;;;;4892:17;4912:4;:11;4892:31;;4966:9;4978:1;4966:13;;4961:245;4985:9;4981:1;:13;4961:245;;;5084:41;5113:8;5122:1;5113:11;;;;;;;;;;;;;;;;;;5084:8;:15;5093:5;5084:15;;;;;;;;;;;;;;;:24;5100:4;5105:1;5100:7;;;;;;;;;;;;;;;;;;5084:24;;;;;;;;;;;;:28;;:41;;;;:::i;:::-;5057:8;:15;5066:5;5057:15;;;;;;;;;;;;;;;:24;5073:4;5078:1;5073:7;;;;;;;;;;;;;;;;;;5057:24;;;;;;;;;;;:68;;;;5160:39;5187:8;5196:1;5187:11;;;;;;;;;;;;;;;;;;5160:8;:13;5169:3;5160:13;;;;;;;;;;;;;;;:22;5174:4;5179:1;5174:7;;;;;;;;;;;;;;;;;;5160:22;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;5133:8;:13;5142:3;5133:13;;;;;;;;;;;;;;;:22;5147:4;5152:1;5147:7;;;;;;;;;;;;;;;;;;5133:22;;;;;;;;;;;:66;;;;4996:3;;;;;;;4961:245;;;;5258:16;:3;:14;;;:16::i;:::-;5254:261;;;5284:13;5322:3;5300:49;;;5350:10;5362:5;5369:4;5375:8;5385:5;5300:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5300:91:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5300:91:12;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5300:91:12;;;;;;;;;5284:107;;696:10;5417:28;;5407:38;;;:6;:38;;;;5399:109;;;;;;;;;;;;;;;;;;;;;;;;5254:261;;5559:3;5526:53;;5552:5;5526:53;;5540:10;5526:53;;;5564:4;5570:8;5526:53;;;;;;;;;;;;;;;;4601:983;;;;;;:::o;14019:1792:13:-;14166:21;14196:29;:2;:15;;;:27;:29::i;:::-;14190:36;;;14166:60;;14307:19;14301:26;;;;;;;;14283:44;;:15;:44;;;14268:122;;;;;;;;;;;;;;;;;;;;;;;;14448:25;14489:15;14476:29;;;;;;;;;;14448:57;;14532:20;14558:28;14592:15;14613;14634:11;14692:40;14721:2;:10;;;14692:24;14706:9;14692;:13;;:24;;;;:::i;:::-;:28;;:40;;;;:::i;:::-;14682:50;;14811:2;:11;;;14801:7;:21;:78;;14855:24;14867:2;:11;;;14855:7;:11;;:24;;;;:::i;:::-;14801:78;;;14825:28;14841:2;:11;;;14825:2;:11;;;:15;;:28;;;;:::i;:::-;14801:78;14795:84;;15019:1;14992:29;;:2;:15;;;:29;;;:59;;15036:2;:15;;;14992:59;;;15024:9;14992:59;14977:74;;15106:20;15090:36;;;;;;;;:12;:36;;;;;;;;;15086:719;;;15174:2;:15;;;15163:47;;;;;;;;;;;;;;15137:73;;;;;;;;;;;15295:4;15271:29;;:12;:29;;;15267:272;;;15311:56;15329:5;15336:12;15350:7;15359:3;15311:56;;;;;;;;;;;;;:17;:56::i;:::-;15267:272;;;15461:12;15452:39;;;15492:5;15499:12;15513:7;15522:3;15452:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15452:78:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15452:78:13;;;;15267:272;15086:719;;;15616:2;:15;;;15605:38;;;;;;;;;;;;;;15590:53;;15675:12;15668:33;;;15702:5;15709:12;15723:3;15668:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15668:59:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15668:59:13;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15668:59:13;;;;;;;;;15651:147;;;;;;;;;;;;;;;;;;;;;;;;15086:719;14019:1792;;;;;;;;;;:::o;1997:262:15:-;2130:33;2155:7;2130:8;:15;2139:5;2130:15;;;;;;;;;;;;;;;:20;2146:3;2130:20;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;2107:8;:15;2116:5;2107:15;;;;;;;;;;;;;;;:20;2123:3;2107:20;;;;;;;;;;;:56;;;;2235:3;2193:61;;2220:5;2193:61;;2208:10;2193:61;;;2241:3;2246:7;2193:61;;;;;;;;;;;;;;;;1997:262;;;:::o;629:248::-;752:31;775:7;752:8;:13;761:3;752:13;;;;;;;;;;;;;;;:18;766:3;752:18;;;;;;;;;;;;:22;;:31;;;;:::i;:::-;731:8;:13;740:3;731:13;;;;;;;;;;;;;;;:18;745:3;731:18;;;;;;;;;;;:52;;;;854:3;813:59;;848:3;813:59;;828:10;813:59;;;859:3;864:7;813:59;;;;;;;;;;;;;;;;629:248;;;:::o;2514:562::-;2645:8;:15;2630:4;:11;:30;2622:91;;;;;;;;;;;;;;;;;;;;;;;;2754:13;2770:4;:11;2754:27;;2823:9;2835:1;2823:13;;2818:151;2842:5;2838:1;:9;2818:151;;;2921:41;2950:8;2959:1;2950:11;;;;;;;;;;;;;;;;;;2921:8;:15;2930:5;2921:15;;;;;;;;;;;;;;;:24;2937:4;2942:1;2937:7;;;;;;;;;;;;;;;;;;2921:24;;;;;;;;;;;;:28;;:41;;;;:::i;:::-;2894:8;:15;2903:5;2894:15;;;;;;;;;;;;;;;:24;2910:4;2915:1;2910:7;;;;;;;;;;;;;;;;;;2894:24;;;;;;;;;;;:68;;;;2849:3;;;;;;;2818:151;;;;3050:3;3009:62;;3035:5;3009:62;;3023:10;3009:62;;;3056:4;3062:8;3009:62;;;;;;;;;;;;;;;;2514:562;;;;:::o;7239:396:20:-;7311:13;7360:1;7349;:8;:12;7334:98;;;;;;;;;;;;;;;;;;;;;;;;7472:1;7485;7474;:8;:12;7472:15;;;;;;;;;;;;;;;;;;;;7463:24;;7580:1;7576;7570:8;7566:16;7599:6;7596:1;7589:17;7503:109;7624:6;7617:13;;7239:396;;;:::o;11788:436::-;11887:14;11946:2;11938:5;:10;11926:1;:8;:22;;11911:113;;;;;;;;;;;;;;;;;;;;;;;;12097:2;12088:11;;;;12188:5;12185:1;12181:13;12175:20;12165:30;;12213:6;12206:13;;11788:436;;;;:::o;1777:475:12:-;1923:5;1909:19;;:10;:19;;;1908:53;;;;1933:9;:16;1943:5;1933:16;;;;;;;;;;;;;;;:28;1950:10;1933:28;;;;;;;;;;;;;;;;;;;;;;;;;1908:53;1900:108;;;;;;;;;;;;;;;;;;;;;;;;2037:1;2022:17;;:3;:17;;;;2014:72;;;;;;;;;;;;;;;;;;;;;;;;2197:50;2215:5;2222:3;2227;2232:7;2241:5;2197:17;:50::i;:::-;1777:475;;;;;:::o;9597:788:13:-;9754:23;9788:10;9804:16;9901:5;9890:41;;;;;;;;;;;;;;9865:66;;;;;;;;;;;;;;;;;;9984:13;10000:6;:13;10007:5;10000:13;;;;;;;;;;;;;;;;9984:29;;10057:17;10102:4;10109:5;10116:3;10121;10127:7;10136:5;10143:10;10077:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;10077:77:13;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10077:77:13;;;10057:97;;10206:34;10223:5;10230:4;10236:3;10206:16;:34::i;:::-;10198:104;;;;;;;;;;;;;;;;;;;;;;;;10355:1;10338:6;:13;10345:5;10338:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;10370:10;10363:17;;;;;;9597:788;;;;;;;:::o;3544:674:12:-;3716:33;3741:7;3716:8;:15;3725:5;3716:15;;;;;;;;;;;;;;;:20;3732:3;3716:20;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;3693:8;:15;3702:5;3693:15;;;;;;;;;;;;;;;:20;3709:3;3693:20;;;;;;;;;;;:56;;;;3795:31;3818:7;3795:8;:13;3804:3;3795:13;;;;;;;;;;;;;;;:18;3809:3;3795:18;;;;;;;;;;;;:22;;:31;;;;:::i;:::-;3774:8;:13;3783:3;3774:13;;;;;;;;;;;;;;;:18;3788:3;3774:18;;;;;;;;;;;:52;;;;3893:16;:3;:14;;;:16::i;:::-;3889:243;;;3919:13;3957:3;3935:44;;;3980:10;3992:5;3999:3;4004:7;4013:5;3935:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3935:84:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3935:84:12;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3935:84:12;;;;;;;;;3919:100;;626:10;4045:22;;4035:32;;;:6;:32;;;;4027:98;;;;;;;;;;;;;;;;;;;;;;;;3889:243;;4195:3;4161:52;;4188:5;4161:52;;4176:10;4161:52;;;4200:3;4205:7;4161:52;;;;;;;;;;;;;;;;3544:674;;;;;:::o;12488:755:13:-;12634:23;12668:16;12760:5;12749:33;;;;;;;;;;;;;;12729:53;;;;;;;;;;;;;;12835:13;12851:6;:14;12858:6;12851:14;;;;;;;;;;;;;;;;12835:30;;12909:17;12954:4;12961:6;12969:9;12980;12991:5;12998:10;12929:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12929:80:13;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12929:80:13;;;12909:100;;13062:35;13079:6;13087:4;13093:3;13062:16;:35::i;:::-;13054:105;;;;;;;;;;;;;;;;;;;;;;;;13213:1;13195:6;:14;13202:6;13195:14;;;;;;;;;;;;;;;;:19;;;;;;;;;;;13228:10;13221:17;;;;;12488:755;;;;;;:::o;1418:158:22:-;1476:7;1491:9;1507:1;1503;:5;1491:17;;1527:1;1522;:6;;1514:41;;;;;;;;;;;;;;;;;;;;;;;;1569:1;1562:8;;;1418:158;;;;:::o;1185:::-;1243:7;1271:1;1266;:6;;1258:42;;;;;;;;;;;;;;;;;;;;;;;;1306:9;1322:1;1318;:5;1306:17;;1337:1;1330:8;;;1185:158;;;;:::o;1042:582:19:-;1102:4;1114:12;1589:7;1577:20;1569:28;;1618:1;1611:4;:8;1604:15;;;1042:582;;;:::o;225:407:22:-;283:7;512:1;507;:6;503:35;;;530:1;523:8;;;;503:35;544:9;560:1;556;:5;544:17;;584:1;579;575;:5;;;;;;;;:10;567:45;;;;;;;;;;;;;;;;;;;;;;;;626:1;619:8;;;225:407;;;;;:::o;201:1714:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:138;;216:47;255:6;249:13;216:47;;;207:56;;201:67;;;;;293:352;;;423:3;416:4;408:6;404:17;400:27;393:35;390:2;;;441:1;438;431:12;390:2;474:6;461:20;451:30;;501:18;493:6;490:30;487:2;;;533:1;530;523:12;487:2;567:4;559:6;555:17;543:29;;618:3;610:4;602:6;598:17;588:8;584:32;581:41;578:2;;;635:1;632;625:12;578:2;383:262;;;;;;671:352;;;801:3;794:4;786:6;782:17;778:27;771:35;768:2;;;819:1;816;809:12;768:2;852:6;839:20;829:30;;879:18;871:6;868:30;865:2;;;911:1;908;901:12;865:2;945:4;937:6;933:17;921:29;;996:3;988:4;980:6;976:17;966:8;962:32;959:41;956:2;;;1013:1;1010;1003:12;956:2;761:262;;;;;;1049:707;;1166:3;1159:4;1151:6;1147:17;1143:27;1136:35;1133:2;;;1184:1;1181;1174:12;1133:2;1221:6;1208:20;1243:80;1258:64;1315:6;1258:64;;;1243:80;;;1234:89;;1340:5;1365:6;1358:5;1351:21;1395:4;1387:6;1383:17;1373:27;;1417:4;1412:3;1408:14;1401:21;;1470:6;1517:3;1509:4;1501:6;1497:17;1492:3;1488:27;1485:36;1482:2;;;1534:1;1531;1524:12;1482:2;1559:1;1544:206;1569:6;1566:1;1563:13;1544:206;;;1627:3;1649:37;1682:3;1670:10;1649:37;;;1644:3;1637:50;1710:4;1705:3;1701:14;1694:21;;1738:4;1733:3;1729:14;1722:21;;1601:149;1591:1;1588;1584:9;1579:14;;1544:206;;;1548:14;1126:630;;;;;;;;1764:112;;1828:43;1863:6;1850:20;1828:43;;;1819:52;;1813:63;;;;;1883:116;;1958:36;1986:6;1980:13;1958:36;;;1949:45;;1943:56;;;;;2006:116;;2072:45;2109:6;2096:20;2072:45;;;2063:54;;2057:65;;;;;2129:120;;2206:38;2236:6;2230:13;2206:38;;;2197:47;;2191:58;;;;;2257:434;;2365:3;2358:4;2350:6;2346:17;2342:27;2335:35;2332:2;;;2383:1;2380;2373:12;2332:2;2413:6;2407:13;2435:60;2450:44;2487:6;2450:44;;;2435:60;;;2426:69;;2515:6;2508:5;2501:21;2551:4;2543:6;2539:17;2584:4;2577:5;2573:16;2619:3;2610:6;2605:3;2601:16;2598:25;2595:2;;;2636:1;2633;2626:12;2595:2;2646:39;2678:6;2673:3;2668;2646:39;;;2325:366;;;;;;;;2700:440;;2801:3;2794:4;2786:6;2782:17;2778:27;2771:35;2768:2;;;2819:1;2816;2809:12;2768:2;2856:6;2843:20;2878:64;2893:48;2934:6;2893:48;;;2878:64;;;2869:73;;2962:6;2955:5;2948:21;2998:4;2990:6;2986:17;3031:4;3024:5;3020:16;3066:3;3057:6;3052:3;3048:16;3045:25;3042:2;;;3083:1;3080;3073:12;3042:2;3093:41;3127:6;3122:3;3117;3093:41;;;2761:379;;;;;;;;3184:1083;;3308:4;3296:9;3291:3;3287:19;3283:30;3280:2;;;3326:1;3323;3316:12;3280:2;3344:20;3359:4;3344:20;;;3335:29;;3418:1;3449:60;3505:3;3496:6;3485:9;3481:22;3449:60;;;3443:3;3436:5;3432:15;3425:85;3374:147;3574:2;3607:60;3663:3;3654:6;3643:9;3639:22;3607:60;;;3600:4;3593:5;3589:16;3582:86;3531:148;3733:2;3766:60;3822:3;3813:6;3802:9;3798:22;3766:60;;;3759:4;3752:5;3748:16;3741:86;3689:149;3896:2;3929:68;3993:3;3984:6;3973:9;3969:22;3929:68;;;3922:4;3915:5;3911:16;3904:94;3848:161;4088:3;4077:9;4073:19;4067:26;4113:18;4105:6;4102:30;4099:2;;;4145:1;4142;4135:12;4099:2;4180:65;4241:3;4232:6;4221:9;4217:22;4180:65;;;4173:4;4166:5;4162:16;4155:91;4019:238;3274:993;;;;;4274:118;;4341:46;4379:6;4366:20;4341:46;;;4332:55;;4326:66;;;;;4399:122;;4477:39;4508:6;4502:13;4477:39;;;4468:48;;4462:59;;;;;4528:241;;4632:2;4620:9;4611:7;4607:23;4603:32;4600:2;;;4648:1;4645;4638:12;4600:2;4683:1;4700:53;4745:7;4736:6;4725:9;4721:22;4700:53;;;4690:63;;4662:97;4594:175;;;;;4776:279;;4899:2;4887:9;4878:7;4874:23;4870:32;4867:2;;;4915:1;4912;4905:12;4867:2;4950:1;4967:72;5031:7;5022:6;5011:9;5007:22;4967:72;;;4957:82;;4929:116;4861:194;;;;;5062:415;;;5202:2;5190:9;5181:7;5177:23;5173:32;5170:2;;;5218:1;5215;5208:12;5170:2;5253:1;5270:72;5334:7;5325:6;5314:9;5310:22;5270:72;;;5260:82;;5232:116;5379:2;5397:64;5453:7;5444:6;5433:9;5429:22;5397:64;;;5387:74;;5358:109;5164:313;;;;;;5484:366;;;5605:2;5593:9;5584:7;5580:23;5576:32;5573:2;;;5621:1;5618;5611:12;5573:2;5656:1;5673:53;5718:7;5709:6;5698:9;5694:22;5673:53;;;5663:63;;5635:97;5763:2;5781:53;5826:7;5817:6;5806:9;5802:22;5781:53;;;5771:63;;5742:98;5567:283;;;;;;5857:1119;;;;;;6088:3;6076:9;6067:7;6063:23;6059:33;6056:2;;;6105:1;6102;6095:12;6056:2;6140:1;6157:53;6202:7;6193:6;6182:9;6178:22;6157:53;;;6147:63;;6119:97;6247:2;6265:53;6310:7;6301:6;6290:9;6286:22;6265:53;;;6255:63;;6226:98;6383:2;6372:9;6368:18;6355:32;6407:18;6399:6;6396:30;6393:2;;;6439:1;6436;6429:12;6393:2;6459:78;6529:7;6520:6;6509:9;6505:22;6459:78;;;6449:88;;6334:209;6602:2;6591:9;6587:18;6574:32;6626:18;6618:6;6615:30;6612:2;;;6658:1;6655;6648:12;6612:2;6678:78;6748:7;6739:6;6728:9;6724:22;6678:78;;;6668:88;;6553:209;6821:3;6810:9;6806:19;6793:33;6846:18;6838:6;6835:30;6832:2;;;6878:1;6875;6868:12;6832:2;6898:62;6952:7;6943:6;6932:9;6928:22;6898:62;;;6888:72;;6772:194;6050:926;;;;;;;;;6983:835;;;;;;7158:3;7146:9;7137:7;7133:23;7129:33;7126:2;;;7175:1;7172;7165:12;7126:2;7210:1;7227:53;7272:7;7263:6;7252:9;7248:22;7227:53;;;7217:63;;7189:97;7317:2;7335:53;7380:7;7371:6;7360:9;7356:22;7335:53;;;7325:63;;7296:98;7425:2;7443:50;7485:7;7476:6;7465:9;7461:22;7443:50;;;7433:60;;7404:95;7530:2;7548:50;7590:7;7581:6;7570:9;7566:22;7548:50;;;7538:60;;7509:95;7663:3;7652:9;7648:19;7635:33;7688:18;7680:6;7677:30;7674:2;;;7720:1;7717;7710:12;7674:2;7740:62;7794:7;7785:6;7774:9;7770:22;7740:62;;;7730:72;;7614:194;7120:698;;;;;;;;;7825:847;;;;;;8006:3;7994:9;7985:7;7981:23;7977:33;7974:2;;;8023:1;8020;8013:12;7974:2;8058:1;8075:53;8120:7;8111:6;8100:9;8096:22;8075:53;;;8065:63;;8037:97;8165:2;8183:53;8228:7;8219:6;8208:9;8204:22;8183:53;;;8173:63;;8144:98;8273:2;8291:53;8336:7;8327:6;8316:9;8312:22;8291:53;;;8281:63;;8252:98;8381:2;8399:53;8444:7;8435:6;8424:9;8420:22;8399:53;;;8389:63;;8360:98;8517:3;8506:9;8502:19;8489:33;8542:18;8534:6;8531:30;8528:2;;;8574:1;8571;8564:12;8528:2;8594:62;8648:7;8639:6;8628:9;8624:22;8594:62;;;8584:72;;8468:194;7968:704;;;;;;;;;8679:763;;;;8867:2;8855:9;8846:7;8842:23;8838:32;8835:2;;;8883:1;8880;8873:12;8835:2;8918:1;8935:53;8980:7;8971:6;8960:9;8956:22;8935:53;;;8925:63;;8897:97;9053:2;9042:9;9038:18;9025:32;9077:18;9069:6;9066:30;9063:2;;;9109:1;9106;9099:12;9063:2;9129:78;9199:7;9190:6;9179:9;9175:22;9129:78;;;9119:88;;9004:209;9272:2;9261:9;9257:18;9244:32;9296:18;9288:6;9285:30;9282:2;;;9328:1;9325;9318:12;9282:2;9348:78;9418:7;9409:6;9398:9;9394:22;9348:78;;;9338:88;;9223:209;8829:613;;;;;;9449:360;;;9567:2;9555:9;9546:7;9542:23;9538:32;9535:2;;;9583:1;9580;9573:12;9535:2;9618:1;9635:53;9680:7;9671:6;9660:9;9656:22;9635:53;;;9625:63;;9597:97;9725:2;9743:50;9785:7;9776:6;9765:9;9761:22;9743:50;;;9733:60;;9704:95;9529:280;;;;;;9816:699;;;;9972:2;9960:9;9951:7;9947:23;9943:32;9940:2;;;9988:1;9985;9978:12;9940:2;10023:1;10040:53;10085:7;10076:6;10065:9;10061:22;10040:53;;;10030:63;;10002:97;10158:2;10147:9;10143:18;10130:32;10182:18;10174:6;10171:30;10168:2;;;10214:1;10211;10204:12;10168:2;10234:62;10288:7;10279:6;10268:9;10264:22;10234:62;;;10224:72;;10109:193;10361:2;10350:9;10346:18;10333:32;10385:18;10377:6;10374:30;10371:2;;;10417:1;10414;10407:12;10371:2;10437:62;10491:7;10482:6;10471:9;10467:22;10437:62;;;10427:72;;10312:193;9934:581;;;;;;10522:366;;;10643:2;10631:9;10622:7;10618:23;10614:32;10611:2;;;10659:1;10656;10649:12;10611:2;10694:1;10711:53;10756:7;10747:6;10736:9;10732:22;10711:53;;;10701:63;;10673:97;10801:2;10819:53;10864:7;10855:6;10844:9;10840:22;10819:53;;;10809:63;;10780:98;10605:283;;;;;;10895:491;;;;11033:2;11021:9;11012:7;11008:23;11004:32;11001:2;;;11049:1;11046;11039:12;11001:2;11084:1;11101:53;11146:7;11137:6;11126:9;11122:22;11101:53;;;11091:63;;11063:97;11191:2;11209:53;11254:7;11245:6;11234:9;11230:22;11209:53;;;11199:63;;11170:98;11299:2;11317:53;11362:7;11353:6;11342:9;11338:22;11317:53;;;11307:63;;11278:98;10995:391;;;;;;11393:678;;;;;11584:2;11572:9;11563:7;11559:23;11555:32;11552:2;;;11600:1;11597;11590:12;11552:2;11663:1;11652:9;11648:17;11635:31;11686:18;11678:6;11675:30;11672:2;;;11718:1;11715;11708:12;11672:2;11746:80;11818:7;11809:6;11798:9;11794:22;11746:80;;;11728:98;;;;11614:218;11891:2;11880:9;11876:18;11863:32;11915:18;11907:6;11904:30;11901:2;;;11947:1;11944;11937:12;11901:2;11975:80;12047:7;12038:6;12027:9;12023:22;11975:80;;;11957:98;;;;11842:219;11546:525;;;;;;;;12078:257;;12190:2;12178:9;12169:7;12165:23;12161:32;12158:2;;;12206:1;12203;12196:12;12158:2;12241:1;12258:61;12311:7;12302:6;12291:9;12287:22;12258:61;;;12248:71;;12220:105;12152:183;;;;;12342:239;;12445:2;12433:9;12424:7;12420:23;12416:32;12413:2;;;12461:1;12458;12451:12;12413:2;12496:1;12513:52;12557:7;12548:6;12537:9;12533:22;12513:52;;;12503:62;;12475:96;12407:174;;;;;12588:261;;12702:2;12690:9;12681:7;12677:23;12673:32;12670:2;;;12718:1;12715;12708:12;12670:2;12753:1;12770:63;12825:7;12816:6;12805:9;12801:22;12770:63;;;12760:73;;12732:107;12664:185;;;;;12856:711;;;;13014:2;13002:9;12993:7;12989:23;12985:32;12982:2;;;13030:1;13027;13020:12;12982:2;13065:1;13082:63;13137:7;13128:6;13117:9;13113:22;13082:63;;;13072:73;;13044:107;13203:2;13192:9;13188:18;13182:25;13227:18;13219:6;13216:30;13213:2;;;13259:1;13256;13249:12;13213:2;13279:69;13340:7;13331:6;13320:9;13316:22;13279:69;;;13269:79;;13161:193;13406:2;13395:9;13391:18;13385:25;13430:18;13422:6;13419:30;13416:2;;;13462:1;13459;13452:12;13416:2;13482:69;13543:7;13534:6;13523:9;13519:22;13482:69;;;13472:79;;13364:193;12976:591;;;;;;13574:577;;;13716:2;13704:9;13695:7;13691:23;13687:32;13684:2;;;13732:1;13729;13722:12;13684:2;13788:1;13777:9;13773:17;13767:24;13811:18;13803:6;13800:30;13797:2;;;13843:1;13840;13833:12;13797:2;13863:69;13924:7;13915:6;13904:9;13900:22;13863:69;;;13853:79;;13746:192;13990:2;13979:9;13975:18;13969:25;14014:18;14006:6;14003:30;14000:2;;;14046:1;14043;14036:12;14000:2;14066:69;14127:7;14118:6;14107:9;14103:22;14066:69;;;14056:79;;13948:193;13678:473;;;;;;14158:390;;14297:2;14285:9;14276:7;14272:23;14268:32;14265:2;;;14313:1;14310;14303:12;14265:2;14369:1;14358:9;14354:17;14348:24;14392:18;14384:6;14381:30;14378:2;;;14424:1;14421;14414:12;14378:2;14444:88;14524:7;14515:6;14504:9;14500:22;14444:88;;;14434:98;;14327:211;14259:289;;;;;14555:615;;;14716:2;14704:9;14695:7;14691:23;14687:32;14684:2;;;14732:1;14729;14722:12;14684:2;14788:1;14777:9;14773:17;14767:24;14811:18;14803:6;14800:30;14797:2;;;14843:1;14840;14833:12;14797:2;14863:88;14943:7;14934:6;14923:9;14919:22;14863:88;;;14853:98;;14746:211;15009:2;14998:9;14994:18;14988:25;15033:18;15025:6;15022:30;15019:2;;;15065:1;15062;15055:12;15019:2;15085:69;15146:7;15137:6;15126:9;15122:22;15085:69;;;15075:79;;14967:193;14678:492;;;;;;15177:241;;15281:2;15269:9;15260:7;15256:23;15252:32;15249:2;;;15297:1;15294;15287:12;15249:2;15332:1;15349:53;15394:7;15385:6;15374:9;15370:22;15349:53;;;15339:63;;15311:97;15243:175;;;;;15425:132;15506:45;15545:5;15506:45;;;15501:3;15494:58;15488:69;;;15564:110;15637:31;15662:5;15637:31;;;15632:3;15625:44;15619:55;;;15712:590;;15847:54;15895:5;15847:54;;;15919:6;15914:3;15907:19;15943:4;15938:3;15934:14;15927:21;;15988:56;16038:5;15988:56;;;16065:1;16050:230;16075:6;16072:1;16069:13;16050:230;;;16115:53;16164:3;16155:6;16149:13;16115:53;;;16185:60;16238:6;16185:60;;;16175:70;;16268:4;16263:3;16259:14;16252:21;;16097:1;16094;16090:9;16085:14;;16050:230;;;16054:14;16293:3;16286:10;;15826:476;;;;;;;16310:101;16377:28;16399:5;16377:28;;;16372:3;16365:41;16359:52;;;16418:110;16491:31;16516:5;16491:31;;;16486:3;16479:44;16473:55;;;16535:297;;16635:38;16667:5;16635:38;;;16690:6;16685:3;16678:19;16702:63;16758:6;16751:4;16746:3;16742:14;16735:4;16728:5;16724:16;16702:63;;;16797:29;16819:6;16797:29;;;16790:4;16785:3;16781:14;16777:50;16770:57;;16615:217;;;;;;16839:300;;16941:39;16974:5;16941:39;;;16997:6;16992:3;16985:19;17009:63;17065:6;17058:4;17053:3;17049:14;17042:4;17035:5;17031:16;17009:63;;;17104:29;17126:6;17104:29;;;17097:4;17092:3;17088:14;17084:50;17077:57;;16921:218;;;;;;17147:397;;17302:2;17297:3;17290:15;17339:66;17334:2;17329:3;17325:12;17318:88;17440:66;17435:2;17430:3;17426:12;17419:88;17535:2;17530:3;17526:12;17519:19;;17283:261;;;;17553:397;;17708:2;17703:3;17696:15;17745:66;17740:2;17735:3;17731:12;17724:88;17846:66;17841:2;17836:3;17832:12;17825:88;17941:2;17936:3;17932:12;17925:19;;17689:261;;;;17959:397;;18114:2;18109:3;18102:15;18151:66;18146:2;18141:3;18137:12;18130:88;18252:66;18247:2;18242:3;18238:12;18231:88;18347:2;18342:3;18338:12;18331:19;;18095:261;;;;18365:397;;18520:2;18515:3;18508:15;18557:66;18552:2;18547:3;18543:12;18536:88;18658:66;18653:2;18648:3;18644:12;18637:88;18753:2;18748:3;18744:12;18737:19;;18501:261;;;;18771:296;;18926:2;18921:3;18914:15;18963:66;18958:2;18953:3;18949:12;18942:88;19058:2;19053:3;19049:12;19042:19;;18907:160;;;;19076:397;;19231:2;19226:3;19219:15;19268:66;19263:2;19258:3;19254:12;19247:88;19369:66;19364:2;19359:3;19355:12;19348:88;19464:2;19459:3;19455:12;19448:19;;19212:261;;;;19482:397;;19637:2;19632:3;19625:15;19674:66;19669:2;19664:3;19660:12;19653:88;19775:66;19770:2;19765:3;19761:12;19754:88;19870:2;19865:3;19861:12;19854:19;;19618:261;;;;19888:397;;20043:2;20038:3;20031:15;20080:66;20075:2;20070:3;20066:12;20059:88;20181:66;20176:2;20171:3;20167:12;20160:88;20276:2;20271:3;20267:12;20260:19;;20024:261;;;;20294:397;;20449:2;20444:3;20437:15;20486:66;20481:2;20476:3;20472:12;20465:88;20587:66;20582:2;20577:3;20573:12;20566:88;20682:2;20677:3;20673:12;20666:19;;20430:261;;;;20700:397;;20855:2;20850:3;20843:15;20892:66;20887:2;20882:3;20878:12;20871:88;20993:66;20988:2;20983:3;20979:12;20972:88;21088:2;21083:3;21079:12;21072:19;;20836:261;;;;21106:296;;21261:2;21256:3;21249:15;21298:66;21293:2;21288:3;21284:12;21277:88;21393:2;21388:3;21384:12;21377:19;;21242:160;;;;21411:397;;21566:2;21561:3;21554:15;21603:66;21598:2;21593:3;21589:12;21582:88;21704:66;21699:2;21694:3;21690:12;21683:88;21799:2;21794:3;21790:12;21783:19;;21547:261;;;;21817:397;;21972:2;21967:3;21960:15;22009:66;22004:2;21999:3;21995:12;21988:88;22110:66;22105:2;22100:3;22096:12;22089:88;22205:2;22200:3;22196:12;22189:19;;21953:261;;;;22223:397;;22378:2;22373:3;22366:15;22415:66;22410:2;22405:3;22401:12;22394:88;22516:66;22511:2;22506:3;22502:12;22495:88;22611:2;22606:3;22602:12;22595:19;;22359:261;;;;22629:397;;22784:2;22779:3;22772:15;22821:66;22816:2;22811:3;22807:12;22800:88;22922:66;22917:2;22912:3;22908:12;22901:88;23017:2;23012:3;23008:12;23001:19;;22765:261;;;;23035:397;;23190:2;23185:3;23178:15;23227:66;23222:2;23217:3;23213:12;23206:88;23328:66;23323:2;23318:3;23314:12;23307:88;23423:2;23418:3;23414:12;23407:19;;23171:261;;;;23441:397;;23596:2;23591:3;23584:15;23633:66;23628:2;23623:3;23619:12;23612:88;23734:66;23729:2;23724:3;23720:12;23713:88;23829:2;23824:3;23820:12;23813:19;;23577:261;;;;23847:397;;24002:2;23997:3;23990:15;24039:66;24034:2;24029:3;24025:12;24018:88;24140:66;24135:2;24130:3;24126:12;24119:88;24235:2;24230:3;24226:12;24219:19;;23983:261;;;;24253:397;;24408:2;24403:3;24396:15;24445:66;24440:2;24435:3;24431:12;24424:88;24546:66;24541:2;24536:3;24532:12;24525:88;24641:2;24636:3;24632:12;24625:19;;24389:261;;;;24659:397;;24814:2;24809:3;24802:15;24851:66;24846:2;24841:3;24837:12;24830:88;24952:66;24947:2;24942:3;24938:12;24931:88;25047:2;25042:3;25038:12;25031:19;;24795:261;;;;25065:499;;25220:2;25215:3;25208:15;25257:66;25252:2;25247:3;25243:12;25236:88;25358:66;25353:2;25348:3;25344:12;25337:88;25459:66;25454:2;25449:3;25445:12;25438:88;25554:3;25549;25545:13;25538:20;;25201:363;;;;25573:397;;25728:2;25723:3;25716:15;25765:66;25760:2;25755:3;25751:12;25744:88;25866:66;25861:2;25856:3;25852:12;25845:88;25961:2;25956:3;25952:12;25945:19;;25709:261;;;;25979:193;;26133:1;26128:3;26121:14;26163:2;26158:3;26154:12;26147:19;;26114:58;;;;26181:397;;26336:2;26331:3;26324:15;26373:66;26368:2;26363:3;26359:12;26352:88;26474:66;26469:2;26464:3;26460:12;26453:88;26569:2;26564:3;26560:12;26553:19;;26317:261;;;;26587:397;;26742:2;26737:3;26730:15;26779:66;26774:2;26769:3;26765:12;26758:88;26880:66;26875:2;26870:3;26866:12;26859:88;26975:2;26970:3;26966:12;26959:19;;26723:261;;;;26993:397;;27148:2;27143:3;27136:15;27185:66;27180:2;27175:3;27171:12;27164:88;27286:66;27281:2;27276:3;27272:12;27265:88;27381:2;27376:3;27372:12;27365:19;;27129:261;;;;27399:296;;27554:2;27549:3;27542:15;27591:66;27586:2;27581:3;27577:12;27570:88;27686:2;27681:3;27677:12;27670:19;;27535:160;;;;27704:397;;27859:2;27854:3;27847:15;27896:66;27891:2;27886:3;27882:12;27875:88;27997:66;27992:2;27987:3;27983:12;27976:88;28092:2;28087:3;28083:12;28076:19;;27840:261;;;;28110:397;;28265:2;28260:3;28253:15;28302:66;28297:2;28292:3;28288:12;28281:88;28403:66;28398:2;28393:3;28389:12;28382:88;28498:2;28493:3;28489:12;28482:19;;28246:261;;;;28516:397;;28671:2;28666:3;28659:15;28708:66;28703:2;28698:3;28694:12;28687:88;28809:66;28804:2;28799:3;28795:12;28788:88;28904:2;28899:3;28895:12;28888:19;;28652:261;;;;28921:110;28994:31;29019:5;28994:31;;;28989:3;28982:44;28976:55;;;29038:995;;29384:3;29373:9;29369:19;29361:27;;29399:69;29465:1;29454:9;29450:17;29441:6;29399:69;;;29479:62;29537:2;29526:9;29522:18;29513:6;29479:62;;;29589:9;29583:4;29579:20;29574:2;29563:9;29559:18;29552:48;29614:98;29707:4;29698:6;29614:98;;;29606:106;;29760:9;29754:4;29750:20;29745:2;29734:9;29730:18;29723:48;29785:98;29878:4;29869:6;29785:98;;;29777:106;;29932:9;29926:4;29922:20;29916:3;29905:9;29901:19;29894:49;29957:66;30018:4;30009:6;29957:66;;;29949:74;;29355:678;;;;;;;;;30040:699;;30286:3;30275:9;30271:19;30263:27;;30301:69;30367:1;30356:9;30352:17;30343:6;30301:69;;;30381:62;30439:2;30428:9;30424:18;30415:6;30381:62;;;30454;30512:2;30501:9;30497:18;30488:6;30454:62;;;30527;30585:2;30574:9;30570:18;30561:6;30527:62;;;30638:9;30632:4;30628:20;30622:3;30611:9;30607:19;30600:49;30663:66;30724:4;30715:6;30663:66;;;30655:74;;30257:482;;;;;;;;;30746:411;;30918:2;30907:9;30903:18;30895:26;;30932:61;30990:1;30979:9;30975:17;30966:6;30932:61;;;31004:70;31070:2;31059:9;31055:18;31046:6;31004:70;;;31085:62;31143:2;31132:9;31128:18;31119:6;31085:62;;;30889:268;;;;;;;31164:807;;31464:3;31453:9;31449:19;31441:27;;31479:61;31537:1;31526:9;31522:17;31513:6;31479:61;;;31551:70;31617:2;31606:9;31602:18;31593:6;31551:70;;;31632:62;31690:2;31679:9;31675:18;31666:6;31632:62;;;31705;31763:2;31752:9;31748:18;31739:6;31705:62;;;31816:9;31810:4;31806:20;31800:3;31789:9;31785:19;31778:49;31841:120;31956:4;31841:120;;;31833:128;;31435:536;;;;;;;;31978:341;;32136:2;32125:9;32121:18;32113:26;;32186:9;32180:4;32176:20;32172:1;32161:9;32157:17;32150:47;32211:98;32304:4;32295:6;32211:98;;;32203:106;;32107:212;;;;;32326:590;;32562:2;32551:9;32547:18;32539:26;;32612:9;32606:4;32602:20;32598:1;32587:9;32583:17;32576:47;32637:98;32730:4;32721:6;32637:98;;;32629:106;;32783:9;32777:4;32773:20;32768:2;32757:9;32753:18;32746:48;32808:98;32901:4;32892:6;32808:98;;;32800:106;;32533:383;;;;;;32923:181;;33025:2;33014:9;33010:18;33002:26;;33039:55;33091:1;33080:9;33076:17;33067:6;33039:55;;;32996:108;;;;;33111:378;;33265:2;33254:9;33250:18;33242:26;;33279:61;33337:1;33326:9;33322:17;33313:6;33279:61;;;33388:9;33382:4;33378:20;33373:2;33362:9;33358:18;33351:48;33413:66;33474:4;33465:6;33413:66;;;33405:74;;33236:253;;;;;;33496:462;;33668:2;33657:9;33653:18;33645:26;;33718:9;33712:4;33708:20;33704:1;33693:9;33689:17;33682:47;33743:66;33804:4;33795:6;33743:66;;;33735:74;;33857:9;33851:4;33847:20;33842:2;33831:9;33827:18;33820:48;33882:66;33943:4;33934:6;33882:66;;;33874:74;;33639:319;;;;;;33965:281;;34093:2;34082:9;34078:18;34070:26;;34143:9;34137:4;34133:20;34129:1;34118:9;34114:17;34107:47;34168:68;34231:4;34222:6;34168:68;;;34160:76;;34064:182;;;;;34253:387;;34434:2;34423:9;34419:18;34411:26;;34484:9;34478:4;34474:20;34470:1;34459:9;34455:17;34448:47;34509:121;34625:4;34509:121;;;34501:129;;34405:235;;;;34647:387;;34828:2;34817:9;34813:18;34805:26;;34878:9;34872:4;34868:20;34864:1;34853:9;34849:17;34842:47;34903:121;35019:4;34903:121;;;34895:129;;34799:235;;;;35041:387;;35222:2;35211:9;35207:18;35199:26;;35272:9;35266:4;35262:20;35258:1;35247:9;35243:17;35236:47;35297:121;35413:4;35297:121;;;35289:129;;35193:235;;;;35435:387;;35616:2;35605:9;35601:18;35593:26;;35666:9;35660:4;35656:20;35652:1;35641:9;35637:17;35630:47;35691:121;35807:4;35691:121;;;35683:129;;35587:235;;;;35829:387;;36010:2;35999:9;35995:18;35987:26;;36060:9;36054:4;36050:20;36046:1;36035:9;36031:17;36024:47;36085:121;36201:4;36085:121;;;36077:129;;35981:235;;;;36223:387;;36404:2;36393:9;36389:18;36381:26;;36454:9;36448:4;36444:20;36440:1;36429:9;36425:17;36418:47;36479:121;36595:4;36479:121;;;36471:129;;36375:235;;;;36617:387;;36798:2;36787:9;36783:18;36775:26;;36848:9;36842:4;36838:20;36834:1;36823:9;36819:17;36812:47;36873:121;36989:4;36873:121;;;36865:129;;36769:235;;;;37011:387;;37192:2;37181:9;37177:18;37169:26;;37242:9;37236:4;37232:20;37228:1;37217:9;37213:17;37206:47;37267:121;37383:4;37267:121;;;37259:129;;37163:235;;;;37405:387;;37586:2;37575:9;37571:18;37563:26;;37636:9;37630:4;37626:20;37622:1;37611:9;37607:17;37600:47;37661:121;37777:4;37661:121;;;37653:129;;37557:235;;;;37799:387;;37980:2;37969:9;37965:18;37957:26;;38030:9;38024:4;38020:20;38016:1;38005:9;38001:17;37994:47;38055:121;38171:4;38055:121;;;38047:129;;37951:235;;;;38193:387;;38374:2;38363:9;38359:18;38351:26;;38424:9;38418:4;38414:20;38410:1;38399:9;38395:17;38388:47;38449:121;38565:4;38449:121;;;38441:129;;38345:235;;;;38587:387;;38768:2;38757:9;38753:18;38745:26;;38818:9;38812:4;38808:20;38804:1;38793:9;38789:17;38782:47;38843:121;38959:4;38843:121;;;38835:129;;38739:235;;;;38981:387;;39162:2;39151:9;39147:18;39139:26;;39212:9;39206:4;39202:20;39198:1;39187:9;39183:17;39176:47;39237:121;39353:4;39237:121;;;39229:129;;39133:235;;;;39375:387;;39556:2;39545:9;39541:18;39533:26;;39606:9;39600:4;39596:20;39592:1;39581:9;39577:17;39570:47;39631:121;39747:4;39631:121;;;39623:129;;39527:235;;;;39769:387;;39950:2;39939:9;39935:18;39927:26;;40000:9;39994:4;39990:20;39986:1;39975:9;39971:17;39964:47;40025:121;40141:4;40025:121;;;40017:129;;39921:235;;;;40163:387;;40344:2;40333:9;40329:18;40321:26;;40394:9;40388:4;40384:20;40380:1;40369:9;40365:17;40358:47;40419:121;40535:4;40419:121;;;40411:129;;40315:235;;;;40557:387;;40738:2;40727:9;40723:18;40715:26;;40788:9;40782:4;40778:20;40774:1;40763:9;40759:17;40752:47;40813:121;40929:4;40813:121;;;40805:129;;40709:235;;;;40951:387;;41132:2;41121:9;41117:18;41109:26;;41182:9;41176:4;41172:20;41168:1;41157:9;41153:17;41146:47;41207:121;41323:4;41207:121;;;41199:129;;41103:235;;;;41345:387;;41526:2;41515:9;41511:18;41503:26;;41576:9;41570:4;41566:20;41562:1;41551:9;41547:17;41540:47;41601:121;41717:4;41601:121;;;41593:129;;41497:235;;;;41739:387;;41920:2;41909:9;41905:18;41897:26;;41970:9;41964:4;41960:20;41956:1;41945:9;41941:17;41934:47;41995:121;42111:4;41995:121;;;41987:129;;41891:235;;;;42133:387;;42314:2;42303:9;42299:18;42291:26;;42364:9;42358:4;42354:20;42350:1;42339:9;42335:17;42328:47;42389:121;42505:4;42389:121;;;42381:129;;42285:235;;;;42527:387;;42708:2;42697:9;42693:18;42685:26;;42758:9;42752:4;42748:20;42744:1;42733:9;42729:17;42722:47;42783:121;42899:4;42783:121;;;42775:129;;42679:235;;;;42921:387;;43102:2;43091:9;43087:18;43079:26;;43152:9;43146:4;43142:20;43138:1;43127:9;43123:17;43116:47;43177:121;43293:4;43177:121;;;43169:129;;43073:235;;;;43315:387;;43496:2;43485:9;43481:18;43473:26;;43546:9;43540:4;43536:20;43532:1;43521:9;43517:17;43510:47;43571:121;43687:4;43571:121;;;43563:129;;43467:235;;;;43709:387;;43890:2;43879:9;43875:18;43867:26;;43940:9;43934:4;43930:20;43926:1;43915:9;43911:17;43904:47;43965:121;44081:4;43965:121;;;43957:129;;43861:235;;;;44103:387;;44284:2;44273:9;44269:18;44261:26;;44334:9;44328:4;44324:20;44320:1;44309:9;44305:17;44298:47;44359:121;44475:4;44359:121;;;44351:129;;44255:235;;;;44497:387;;44678:2;44667:9;44663:18;44655:26;;44728:9;44722:4;44718:20;44714:1;44703:9;44699:17;44692:47;44753:121;44869:4;44753:121;;;44745:129;;44649:235;;;;44891:387;;45072:2;45061:9;45057:18;45049:26;;45122:9;45116:4;45112:20;45108:1;45097:9;45093:17;45086:47;45147:121;45263:4;45147:121;;;45139:129;;45043:235;;;;45285:387;;45466:2;45455:9;45451:18;45443:26;;45516:9;45510:4;45506:20;45502:1;45491:9;45487:17;45480:47;45541:121;45657:4;45541:121;;;45533:129;;45437:235;;;;45679:193;;45787:2;45776:9;45772:18;45764:26;;45801:61;45859:1;45848:9;45844:17;45835:6;45801:61;;;45758:114;;;;;45879:294;;46015:2;46004:9;46000:18;45992:26;;46029:61;46087:1;46076:9;46072:17;46063:6;46029:61;;;46101:62;46159:2;46148:9;46144:18;46135:6;46101:62;;;45986:187;;;;;;46180:256;;46242:2;46236:9;46226:19;;46280:4;46272:6;46268:17;46379:6;46367:10;46364:22;46343:18;46331:10;46328:34;46325:62;46322:2;;;46400:1;46397;46390:12;46322:2;46420:10;46416:2;46409:22;46220:216;;;;;46443:258;;46602:18;46594:6;46591:30;46588:2;;;46634:1;46631;46624:12;46588:2;46663:4;46655:6;46651:17;46643:25;;46691:4;46685;46681:15;46673:23;;46525:176;;;;46708:254;;46847:18;46839:6;46836:30;46833:2;;;46879:1;46876;46869:12;46833:2;46923:4;46919:9;46912:4;46904:6;46900:17;46896:33;46888:41;;46952:4;46946;46942:15;46934:23;;46770:192;;;;46969:258;;47112:18;47104:6;47101:30;47098:2;;;47144:1;47141;47134:12;47098:2;47188:4;47184:9;47177:4;47169:6;47165:17;47161:33;47153:41;;47217:4;47211;47207:15;47199:23;;47035:192;;;;47236:121;;47345:4;47337:6;47333:17;47322:28;;47314:43;;;;47366:107;;47462:5;47456:12;47446:22;;47440:33;;;;47480:91;;47560:5;47554:12;47544:22;;47538:33;;;;47578:92;;47659:5;47653:12;47643:22;;47637:33;;;;47678:122;;47789:4;47781:6;47777:17;47766:28;;47759:41;;;;47808:105;;47877:31;47902:5;47877:31;;;47866:42;;47860:53;;;;47920:92;;48000:5;47993:13;47986:21;47975:32;;47969:43;;;;48019:79;;48088:5;48077:16;;48071:27;;;;48105:128;;48185:42;48178:5;48174:54;48163:65;;48157:76;;;;48240:79;;48309:5;48298:16;;48292:27;;;;48326:105;;48395:31;48420:5;48395:31;;;48384:42;;48378:53;;;;48438:113;;48515:31;48540:5;48515:31;;;48504:42;;48498:53;;;;48558:92;;48638:5;48631:13;48624:21;48613:32;;48607:43;;;;48657:151;;48736:66;48729:5;48725:78;48714:89;;48708:100;;;;48815:79;;48884:5;48873:16;;48867:27;;;;48901:129;;48988:37;49019:5;48988:37;;;48975:50;;48969:61;;;;49037:121;;49116:37;49147:5;49116:37;;;49103:50;;49097:61;;;;49165:115;;49244:31;49269:5;49244:31;;;49231:44;;49225:55;;;;49288:145;49369:6;49364:3;49359;49346:30;49425:1;49416:6;49411:3;49407:16;49400:27;49339:94;;;;49442:268;49507:1;49514:101;49528:6;49525:1;49522:13;49514:101;;;49604:1;49599:3;49595:11;49589:18;49585:1;49580:3;49576:11;49569:39;49550:2;49547:1;49543:10;49538:15;;49514:101;;;49630:6;49627:1;49624:13;49621:2;;;49695:1;49686:6;49681:3;49677:16;49670:27;49621:2;49491:219;;;;;49718:97;;49806:2;49802:7;49797:2;49790:5;49786:14;49782:28;49772:38;;49766:49;;;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"../tokens/ERC1155/ERC1155Meta.sol\";\nimport \"../tokens/ERC1155/ERC1155MintBurn.sol\";\nimport \"../tokens/ERC1155/ERC1155Metadata.sol\";\n\n\ncontract ERC1155MetaMintBurnMock is ERC1155Meta, ERC1155MintBurn, ERC1155Metadata {\n\n  constructor() public { }\n\n  // ---- Minting functions\n\n  /**\n   * @dev Mint _value of tokens of a given id \n   * @param _to The address to mint tokens to.\n   * @param _id token id to mint\n   * @param _value The amount to be minted\n   */\n  function mintMock(address _to, uint256 _id, uint256 _value) \n    public \n  {\n    super._mint(_to, _id, _value);\n  }\n\n  /**\n   * @dev Mint tokens for each ids in _ids\n   * @param _to The address to mint tokens to.\n   * @param _ids Array of ids to mint\n   * @param _values Array of amount of tokens to mint per id\n   */\n  function batchMintMock(address _to, uint256[] memory _ids, uint256[] memory _values) \n    public \n  {\n    super._batchMint(_to, _ids, _values);\n  }\n\n  // ---- Burning functions \n\n  /**\n   * @dev burn _value of tokens of a given token id \n   * @param _from The address to burn tokens from.\n   * @param _id token id to burn\n   * @param _value The amount to be burned\n   */\n  function burnMock(address _from, uint256 _id, uint256 _value) \n    public\n  { \n    super._burn(_from, _id, _value);\n  }\n\n  /**\n   * @dev burn _value of tokens of a given token id \n   * @param _from The address to burn tokens from.\n   * @param _ids Array of token ids to burn\n   * @param _values Array of the amount to be burned\n   */\n  function batchBurnMock(address _from, uint256[] memory _ids, uint256[] memory _values) \n    public \n  {\n    super._batchBurn(_from, _ids, _values);\n  }\n\n  /***********************************|\n  |       Unsupported Functions       |\n  |__________________________________*/\n\n  function () external {\n    revert('ERC1155MetaMintBurnMock: INVALID_METHOD');\n  }\n}",
  "sourcePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnMock.sol",
  "ast": {
    "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnMock.sol",
    "exportedSymbols": {
      "ERC1155MetaMintBurnMock": [
        343
      ]
    },
    "id": 344,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 244,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "id": 245,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol",
        "file": "../tokens/ERC1155/ERC1155Meta.sol",
        "id": 246,
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 2460,
        "src": "59:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol",
        "file": "../tokens/ERC1155/ERC1155MintBurn.sol",
        "id": 247,
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 2890,
        "src": "103:47:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Metadata.sol",
        "file": "../tokens/ERC1155/ERC1155Metadata.sol",
        "id": 248,
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 2671,
        "src": "151:47:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 249,
              "name": "ERC1155Meta",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2459,
              "src": "237:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Meta_$2459",
                "typeString": "contract ERC1155Meta"
              }
            },
            "id": 250,
            "nodeType": "InheritanceSpecifier",
            "src": "237:11:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 251,
              "name": "ERC1155MintBurn",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2889,
              "src": "250:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MintBurn_$2889",
                "typeString": "contract ERC1155MintBurn"
              }
            },
            "id": 252,
            "nodeType": "InheritanceSpecifier",
            "src": "250:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 253,
              "name": "ERC1155Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2670,
              "src": "267:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Metadata_$2670",
                "typeString": "contract ERC1155Metadata"
              }
            },
            "id": 254,
            "nodeType": "InheritanceSpecifier",
            "src": "267:15:5"
          }
        ],
        "contractDependencies": [
          173,
          1668,
          2459,
          2670,
          2889,
          5709
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 343,
        "linearizedBaseContracts": [
          343,
          2670,
          2889,
          2459,
          5709,
          1668,
          173
        ],
        "name": "ERC1155MetaMintBurnMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "309:3:5",
              "statements": []
            },
            "documentation": null,
            "id": 258,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:5"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:0:5"
            },
            "scope": 343,
            "src": "288:24:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "602:40:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "620:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "625:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 272,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "630:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "608:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$343",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2712,
                      "src": "608:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "608:29:5"
                }
              ]
            },
            "documentation": "@dev Mint _value of tokens of a given id \n@param _to The address to mint tokens to.\n@param _id token id to mint\n@param _value The amount to be minted",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "545:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "558:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "571:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:42:5"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:5"
            },
            "scope": 343,
            "src": "527:115:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "947:47:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "970:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "975:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "981:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "953:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$343",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2782,
                      "src": "953:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "953:36:5"
                }
              ]
            },
            "documentation": "@dev Mint tokens for each ids in _ids\n@param _to The address to mint tokens to.\n@param _ids Array of ids to mint\n@param _values Array of amount of tokens to mint per id",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "870:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "883:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 279,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "883:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 280,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "883:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "906:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 282,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "906:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 283,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "906:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "869:62:5"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:5"
            },
            "scope": 343,
            "src": "847:147:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 313,
              "nodeType": "Block",
              "src": "1296:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "1315:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 309,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "1322:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "1327:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 305,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "1303:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$343",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2818,
                      "src": "1303:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:31:5"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id \n@param _from The address to burn tokens from.\n@param _id token id to burn\n@param _value The amount to be burned",
            "id": 314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "1238:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "1253:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "1266:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:44:5"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1296:0:5"
            },
            "scope": 343,
            "src": "1220:119:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "1658:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 328,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "1681:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "1688:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 330,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "1694:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "1664:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$343",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2888,
                      "src": "1664:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:38:5"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id \n@param _from The address to burn tokens from.\n@param _ids Array of token ids to burn\n@param _values Array of the amount to be burned",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchBurnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1579:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1594:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 317,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1594:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 318,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1594:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1617:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 320,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1617:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 321,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1617:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1578:64:5"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:0:5"
            },
            "scope": 343,
            "src": "1556:151:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "1853:60:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313135354d6574614d696e744275726e4d6f636b3a20494e56414c49445f4d4554484f44",
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1866:41:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a14409389543c5be2d3a34f066f3d8b4d59db7d4a318cfe221527e5c604f065c",
                          "typeString": "literal_string \"ERC1155MetaMintBurnMock: INVALID_METHOD\""
                        },
                        "value": "ERC1155MetaMintBurnMock: INVALID_METHOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a14409389543c5be2d3a34f066f3d8b4d59db7d4a318cfe221527e5c604f065c",
                          "typeString": "literal_string \"ERC1155MetaMintBurnMock: INVALID_METHOD\""
                        }
                      ],
                      "id": 337,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1859:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:49:5"
                }
              ]
            },
            "documentation": "*********************************|\n|       Unsupported Functions       |\n|__________________________________",
            "id": 342,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1841:2:5"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1853:0:5"
            },
            "scope": 343,
            "src": "1832:81:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 344,
        "src": "201:1714:5"
      }
    ],
    "src": "0:1915:5"
  },
  "legacyAST": {
    "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/mocks/ERC1155MetaMintBurnMock.sol",
    "exportedSymbols": {
      "ERC1155MetaMintBurnMock": [
        343
      ]
    },
    "id": 344,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 244,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "id": 245,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol",
        "file": "../tokens/ERC1155/ERC1155Meta.sol",
        "id": 246,
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 2460,
        "src": "59:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol",
        "file": "../tokens/ERC1155/ERC1155MintBurn.sol",
        "id": 247,
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 2890,
        "src": "103:47:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phabc/Main/Programmation/blockChains/horizonGames/multi-token-standard/contracts/tokens/ERC1155/ERC1155Metadata.sol",
        "file": "../tokens/ERC1155/ERC1155Metadata.sol",
        "id": 248,
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 2671,
        "src": "151:47:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 249,
              "name": "ERC1155Meta",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2459,
              "src": "237:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Meta_$2459",
                "typeString": "contract ERC1155Meta"
              }
            },
            "id": 250,
            "nodeType": "InheritanceSpecifier",
            "src": "237:11:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 251,
              "name": "ERC1155MintBurn",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2889,
              "src": "250:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MintBurn_$2889",
                "typeString": "contract ERC1155MintBurn"
              }
            },
            "id": 252,
            "nodeType": "InheritanceSpecifier",
            "src": "250:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 253,
              "name": "ERC1155Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2670,
              "src": "267:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Metadata_$2670",
                "typeString": "contract ERC1155Metadata"
              }
            },
            "id": 254,
            "nodeType": "InheritanceSpecifier",
            "src": "267:15:5"
          }
        ],
        "contractDependencies": [
          173,
          1668,
          2459,
          2670,
          2889,
          5709
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 343,
        "linearizedBaseContracts": [
          343,
          2670,
          2889,
          2459,
          5709,
          1668,
          173
        ],
        "name": "ERC1155MetaMintBurnMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "309:3:5",
              "statements": []
            },
            "documentation": null,
            "id": 258,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:5"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:0:5"
            },
            "scope": 343,
            "src": "288:24:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "602:40:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "620:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "625:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 272,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "630:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "608:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$343",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2712,
                      "src": "608:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "608:29:5"
                }
              ]
            },
            "documentation": "@dev Mint _value of tokens of a given id \n@param _to The address to mint tokens to.\n@param _id token id to mint\n@param _value The amount to be minted",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "545:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "558:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "571:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:42:5"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:5"
            },
            "scope": 343,
            "src": "527:115:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "947:47:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "970:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "975:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "981:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "953:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$343",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2782,
                      "src": "953:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "953:36:5"
                }
              ]
            },
            "documentation": "@dev Mint tokens for each ids in _ids\n@param _to The address to mint tokens to.\n@param _ids Array of ids to mint\n@param _values Array of amount of tokens to mint per id",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "870:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "883:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 279,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "883:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 280,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "883:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "906:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 282,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "906:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 283,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "906:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "869:62:5"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:5"
            },
            "scope": 343,
            "src": "847:147:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 313,
              "nodeType": "Block",
              "src": "1296:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "1315:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 309,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "1322:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "1327:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 305,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "1303:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$343",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2818,
                      "src": "1303:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:31:5"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id \n@param _from The address to burn tokens from.\n@param _id token id to burn\n@param _value The amount to be burned",
            "id": 314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "1238:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "1253:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 314,
                  "src": "1266:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:44:5"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1296:0:5"
            },
            "scope": 343,
            "src": "1220:119:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "1658:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 328,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "1681:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "1688:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 330,
                        "name": "_values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "1694:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "1664:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC1155MetaMintBurnMock_$343",
                          "typeString": "contract super ERC1155MetaMintBurnMock"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_batchBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2888,
                      "src": "1664:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:38:5"
                }
              ]
            },
            "documentation": "@dev burn _value of tokens of a given token id \n@param _from The address to burn tokens from.\n@param _ids Array of token ids to burn\n@param _values Array of the amount to be burned",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchBurnMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1579:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1594:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 317,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1594:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 318,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1594:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1617:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 320,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1617:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 321,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1617:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1578:64:5"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:0:5"
            },
            "scope": 343,
            "src": "1556:151:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "1853:60:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313135354d6574614d696e744275726e4d6f636b3a20494e56414c49445f4d4554484f44",
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1866:41:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a14409389543c5be2d3a34f066f3d8b4d59db7d4a318cfe221527e5c604f065c",
                          "typeString": "literal_string \"ERC1155MetaMintBurnMock: INVALID_METHOD\""
                        },
                        "value": "ERC1155MetaMintBurnMock: INVALID_METHOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a14409389543c5be2d3a34f066f3d8b4d59db7d4a318cfe221527e5c604f065c",
                          "typeString": "literal_string \"ERC1155MetaMintBurnMock: INVALID_METHOD\""
                        }
                      ],
                      "id": 337,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1859:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:49:5"
                }
              ]
            },
            "documentation": "*********************************|\n|       Unsupported Functions       |\n|__________________________________",
            "id": 342,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1841:2:5"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1853:0:5"
            },
            "scope": 343,
            "src": "1832:81:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 344,
        "src": "201:1714:5"
      }
    ],
    "src": "0:1915:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-09T12:46:33.237Z",
  "devdoc": {
    "methods": {
      "balanceOf(address,uint256)": {
        "params": {
          "_id": "ID of the Token",
          "_owner": "The address of the token holder"
        },
        "return": "The _owner's balance of the Token type requested"
      },
      "balanceOfBatch(address[],uint256[])": {
        "params": {
          "_ids": "ID of the Tokens",
          "_owners": "The addresses of the token holders"
        },
        "return": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
      },
      "batchBurnMock(address,uint256[],uint256[])": {
        "details": "burn _value of tokens of a given token id ",
        "params": {
          "_from": "The address to burn tokens from.",
          "_ids": "Array of token ids to burn",
          "_values": "Array of the amount to be burned"
        }
      },
      "batchMintMock(address,uint256[],uint256[])": {
        "details": "Mint tokens for each ids in _ids",
        "params": {
          "_ids": "Array of ids to mint",
          "_to": "The address to mint tokens to.",
          "_values": "Array of amount of tokens to mint per id"
        }
      },
      "burnMock(address,uint256,uint256)": {
        "details": "burn _value of tokens of a given token id ",
        "params": {
          "_from": "The address to burn tokens from.",
          "_id": "token id to burn",
          "_value": "The amount to be burned"
        }
      },
      "getNonce(address)": {
        "params": {
          "_signer": "Address to query signature nonce for"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "_operator": "Address of authorized operator",
          "_owner": "The owner of the Tokens"
        },
        "return": "True if the operator is approved, false if not"
      },
      "isValidSignature(address,bytes,bytes)": {
        "details": "Verifies that a hash has been signed by the given signer.",
        "params": {
          "_data": "Data structure that was hashed and signed",
          "_sig": "Proof that the hash has been signed by signer.",
          "_signerAddress": "Address that should have signed the given hash.        "
        },
        "return": "True if the address recovered from the provided signature matches the input signer address."
      },
      "metaSetApprovalForAll(address,address,bool,bool,bytes)": {
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_data": "Encodes signature and gas payment receipt  _data should be encoded as ((bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g))  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array",
          "_isGasReimbursed": "Whether gas will be reimbursed or not, with vlid signature",
          "_operator": "Address to add to the set of authorized operators",
          "_owner": "Address that wants to set operator status  _spender"
        }
      },
      "mintMock(address,uint256,uint256)": {
        "details": "Mint _value of tokens of a given id ",
        "params": {
          "_id": "token id to mint",
          "_to": "The address to mint tokens to.",
          "_value": "The amount to be minted"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "params": {
          "_amounts": "Transfer amounts per token type",
          "_data": "Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (bytes4 METATRANSFER_FLAG, (bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g, bytes data))  i.e. high level encoding should be (bytes4, bytes, bytes), where the latter bytes array is a nested bytes array  METATRANSFER_FLAG should be 0xebc71fa5 for meta transfer with gas reimbursement  METATRANSFER_FLAG should be 0x3fed7708 for meta transfer WITHOUT gas reimbursement (and hence without gasReceipt)",
          "_from": "Source addresses",
          "_ids": "IDs of each token type",
          "_to": "Target addresses"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "params": {
          "_amount": "Transfered amount",
          "_data": "Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (bytes4 METATRANSFER_FLAG, (bytes32 r, bytes32 s, uint8 v, SignatureType sigType), (GasReceipt g, bytes data))  i.e. high level encoding should be (bytes4, bytes, bytes), where the latter bytes array is a nested bytes array  METATRANSFER_FLAG should be 0xebc71fa5 for meta transfer with gas reimbursement  METATRANSFER_FLAG should be 0x3fed7708 for meta transfer WITHOUT gas reimbursement (and hence without gasReceipt)",
          "_from": "Source address",
          "_id": "ID of the token type",
          "_to": "Target address"
        }
      },
      "setApprovalForAll(address,bool)": {
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_operator": "Address to add to the set of authorized operators"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "return": "`true` if the contract implements `_interfaceID` and"
      },
      "uri(uint256)": {
        "details": "URIs are defined in RFC 3986.     URIs are assumed to be deterministically generated based on token ID     Token IDs are assumed to be represented in their hex format in URIs ",
        "return": "URI string"
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf(address,uint256)": {
        "notice": "Get the balance of an account's Tokens"
      },
      "balanceOfBatch(address[],uint256[])": {
        "notice": "Get the balance of multiple account/token pairs"
      },
      "getNonce(address)": {
        "notice": "Returns the current nonce associated with a given address"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given owner"
      },
      "metaSetApprovalForAll(address,address,bool,bool,bytes)": {
        "notice": "Approve the passed address to spend on behalf of _from if valid signature is provided"
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "notice": "Allows anyone with a valid signature to transfer multiple types of tokens on the bahalf of _from"
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "notice": "Allows anyone with a valid signature to transfer _amount amount of a token _id on the bahalf of _from"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "uri(uint256)": {
        "notice": "A distinct Uniform Resource Identifier (URI) for a given token."
      }
    }
  }
}